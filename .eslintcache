[{"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\index.js":"1","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\reportWebVitals.js":"2","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\i18n.js":"3","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\App.js":"4","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\reducers\\reducer_user.js":"5","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\reducers\\reducer_localization.js":"6","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\reducers\\reducer_data.js":"7","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Categories\\categories_en.js":"8","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Categories\\categories_ru.js":"9","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Categories\\categories_uz.js":"10","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Regions\\regions_en.js":"11","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Regions\\regions_uz.js":"12","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Regions\\regions_ru.js":"13","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Translations\\base\\base_en.js":"14","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Translations\\base\\base_ru.js":"15","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Translations\\base\\base_uz.js":"16","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Layout.js":"17","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\ErrorPage.js":"18","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Header.js":"19","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\LoadingScreen.js":"20","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Post\\Post.js":"21","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\MobilePost\\MobilePost.js":"22","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Authorization\\AuthSignin.js":"23","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\AllCatsPage\\AllCatsPage.js":"24","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Main\\Main.js":"25","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Profile.js":"26","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Authorization\\ResetPass.js":"27","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Promote\\Promote.js":"28","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\actionTypes.js":"29","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Authorization\\AuthSignup.js":"30","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\index.js":"31","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\LoadingSub.js":"32","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\Dropdown.js":"33","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\Backdrop.js":"34","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Card.js":"35","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Language.js":"36","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Footer.js":"37","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Modal.js":"38","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Logo.js":"39","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Searchbar.js":"40","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Navigation\\Navigation.js":"41","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Categories\\Categories.js":"42","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\MobileNav\\MobileNav.js":"43","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\transport_auto.js":"44","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\utilities\\utilities.js":"45","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Adview\\Adview.js":"46","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Settings.js":"47","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Messages.js":"48","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Payments.js":"49","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Favourites.js":"50","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\MobileCats\\MobileCats.js":"51","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\CategoriesFull\\CategoriesFull.js":"52","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Main.js":"53","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\real_estate.js":"54","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\pets.js":"55","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\sports_hobby_and_comfort.js":"56","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\home_and_garden.js":"57","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\fashion_and_style.js":"58","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\for_kids.js":"59","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\electronics.js":"60","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\jobs.js":"61","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\business_and_services.js":"62","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Ads\\Ads.js":"63","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Filters\\Filters.js":"64","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\MobileFilters\\MobileFilters.js":"65","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\MobileAdview\\MobileAdview.js":"66","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\business_and_services.js":"67","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\transport_auto.js":"68","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\sports_hobby_and_comfort.js":"69","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\business_and_services.js":"70","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\actions_user.js":"71","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\real_estate.js":"72","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\pets.js":"73","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\jobs.js":"74","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\home_and_garden.js":"75","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\for_kids.js":"76","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\fashion_and_style.js":"77","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\electronics.js":"78","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\business_and_services.js":"79","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\transport_auto.js":"80","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\sports_hobby_and_comfort.js":"81","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\real_estate.js":"82","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\pets.js":"83","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\home_and_garden.js":"84","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\jobs.js":"85","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\for_kids.js":"86","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\RegionsDropdown.js":"87","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\fashion_and_style.js":"88","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Ads\\AdCard.js":"89","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\electronics.js":"90","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\Tooltip.js":"91","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\transport_auto.js":"92","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\actions_data.js":"93","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\actions_localization.js":"94","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\sports_hobby_and_comfort.js":"95","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\real_estate.js":"96","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\pets.js":"97","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\jobs.js":"98","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\fashion_and_style.js":"99","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\home_and_garden.js":"100","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\for_kids.js":"101","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\electronics.js":"102","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Placeholder.js":"103","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\utilities\\apiMethods.js":"104","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\search.js":"105"},{"size":1254,"mtime":1615028863932,"results":"106","hashOfConfig":"107"},{"size":362,"mtime":499162500000,"results":"108","hashOfConfig":"107"},{"size":680,"mtime":1614934924799,"results":"109","hashOfConfig":"107"},{"size":5441,"mtime":1615714879178,"results":"110","hashOfConfig":"107"},{"size":1051,"mtime":1614335145638,"results":"111","hashOfConfig":"107"},{"size":1149,"mtime":1614666101160,"results":"112","hashOfConfig":"107"},{"size":6581,"mtime":1614666428346,"results":"113","hashOfConfig":"107"},{"size":8618,"mtime":1614162767291,"results":"114","hashOfConfig":"107"},{"size":8938,"mtime":1614163213080,"results":"115","hashOfConfig":"107"},{"size":8893,"mtime":1614163213080,"results":"116","hashOfConfig":"107"},{"size":750,"mtime":1612296338178,"results":"117","hashOfConfig":"107"},{"size":756,"mtime":1612296338177,"results":"118","hashOfConfig":"107"},{"size":885,"mtime":1612296338177,"results":"119","hashOfConfig":"107"},{"size":3817,"mtime":1614804395130,"results":"120","hashOfConfig":"107"},{"size":4559,"mtime":1614803768698,"results":"121","hashOfConfig":"107"},{"size":4024,"mtime":1614803768698,"results":"122","hashOfConfig":"107"},{"size":3494,"mtime":1615029660954,"results":"123","hashOfConfig":"107"},{"size":4053,"mtime":1615028111479,"results":"124","hashOfConfig":"107"},{"size":7601,"mtime":1615633062552,"results":"125","hashOfConfig":"107"},{"size":848,"mtime":1611597157895,"results":"126","hashOfConfig":"107"},{"size":30682,"mtime":1615631370555,"results":"127","hashOfConfig":"107"},{"size":17909,"mtime":1615631444883,"results":"128","hashOfConfig":"107"},{"size":6736,"mtime":1615024992520,"results":"129","hashOfConfig":"107"},{"size":3974,"mtime":1615115698093,"results":"130","hashOfConfig":"107"},{"size":15394,"mtime":1615739579698,"results":"131","hashOfConfig":"107"},{"size":16169,"mtime":1615737098686,"results":"132","hashOfConfig":"107"},{"size":7006,"mtime":1615024992520,"results":"133","hashOfConfig":"107"},{"size":6631,"mtime":1615028417108,"results":"134","hashOfConfig":"107"},{"size":762,"mtime":1614523006172,"results":"135","hashOfConfig":"107"},{"size":10663,"mtime":1615024992520,"results":"136","hashOfConfig":"107"},{"size":417,"mtime":1614666124413,"results":"137","hashOfConfig":"107"},{"size":139,"mtime":1611570464080,"results":"138","hashOfConfig":"107"},{"size":154,"mtime":1611762311285,"results":"139","hashOfConfig":"107"},{"size":218,"mtime":1612987540972,"results":"140","hashOfConfig":"107"},{"size":2694,"mtime":1615563878684,"results":"141","hashOfConfig":"107"},{"size":3701,"mtime":1615029587008,"results":"142","hashOfConfig":"107"},{"size":3695,"mtime":1614937020165,"results":"143","hashOfConfig":"107"},{"size":1210,"mtime":1613817949686,"results":"144","hashOfConfig":"107"},{"size":673,"mtime":1610361582000,"results":"145","hashOfConfig":"107"},{"size":6834,"mtime":1615739457364,"results":"146","hashOfConfig":"107"},{"size":10477,"mtime":1615028791609,"results":"147","hashOfConfig":"107"},{"size":3809,"mtime":1615028467280,"results":"148","hashOfConfig":"107"},{"size":15416,"mtime":1615563512857,"results":"149","hashOfConfig":"107"},{"size":10825,"mtime":1610982682000,"results":"150","hashOfConfig":"107"},{"size":4615,"mtime":1614689399774,"results":"151","hashOfConfig":"107"},{"size":34275,"mtime":1615579200000,"results":"152","hashOfConfig":"107"},{"size":8307,"mtime":1615029354189,"results":"153","hashOfConfig":"107"},{"size":6595,"mtime":1615715857059,"results":"154","hashOfConfig":"107"},{"size":1512,"mtime":1613831876579,"results":"155","hashOfConfig":"107"},{"size":1603,"mtime":1615732713674,"results":"156","hashOfConfig":"107"},{"size":4292,"mtime":1615562809774,"results":"157","hashOfConfig":"107"},{"size":3681,"mtime":1615112515790,"results":"158","hashOfConfig":"107"},{"size":19418,"mtime":1615716838112,"results":"159","hashOfConfig":"107"},{"size":4958,"mtime":1610982682000,"results":"160","hashOfConfig":"107"},{"size":10733,"mtime":1610982682000,"results":"161","hashOfConfig":"107"},{"size":6998,"mtime":1610982682000,"results":"162","hashOfConfig":"107"},{"size":10812,"mtime":1610982682000,"results":"163","hashOfConfig":"107"},{"size":7330,"mtime":1610982682000,"results":"164","hashOfConfig":"107"},{"size":7828,"mtime":1610982737000,"results":"165","hashOfConfig":"107"},{"size":8364,"mtime":1610982682000,"results":"166","hashOfConfig":"107"},{"size":19529,"mtime":1610982682000,"results":"167","hashOfConfig":"107"},{"size":18825,"mtime":1610982682000,"results":"168","hashOfConfig":"107"},{"size":5409,"mtime":1614022356025,"results":"169","hashOfConfig":"107"},{"size":9759,"mtime":1615563179407,"results":"170","hashOfConfig":"107"},{"size":11570,"mtime":1615735666117,"results":"171","hashOfConfig":"107"},{"size":23861,"mtime":1615734772264,"results":"172","hashOfConfig":"107"},{"size":14034,"mtime":1615122277509,"results":"173","hashOfConfig":"107"},{"size":10825,"mtime":1610982129000,"results":"174","hashOfConfig":"107"},{"size":6998,"mtime":1610982129000,"results":"175","hashOfConfig":"107"},{"size":17277,"mtime":1613223612214,"results":"176","hashOfConfig":"107"},{"size":269,"mtime":1614335145638,"results":"177","hashOfConfig":"107"},{"size":4958,"mtime":1610982129000,"results":"178","hashOfConfig":"107"},{"size":11338,"mtime":1610982129000,"results":"179","hashOfConfig":"107"},{"size":20629,"mtime":1610982129000,"results":"180","hashOfConfig":"107"},{"size":11417,"mtime":1610982129000,"results":"181","hashOfConfig":"107"},{"size":5602,"mtime":1610983195000,"results":"182","hashOfConfig":"107"},{"size":7330,"mtime":1610982129000,"results":"183","hashOfConfig":"107"},{"size":8364,"mtime":1610982129000,"results":"184","hashOfConfig":"107"},{"size":18870,"mtime":1610982129000,"results":"185","hashOfConfig":"107"},{"size":11089,"mtime":1610981801000,"results":"186","hashOfConfig":"107"},{"size":7166,"mtime":1610981754000,"results":"187","hashOfConfig":"107"},{"size":8516,"mtime":1612076443584,"results":"188","hashOfConfig":"107"},{"size":10995,"mtime":1615735666119,"results":"189","hashOfConfig":"107"},{"size":11074,"mtime":1610981384000,"results":"190","hashOfConfig":"107"},{"size":20007,"mtime":1610981759000,"results":"191","hashOfConfig":"107"},{"size":10035,"mtime":1612074421809,"results":"192","hashOfConfig":"107"},{"size":3062,"mtime":1615564722187,"results":"193","hashOfConfig":"107"},{"size":7113,"mtime":1610981347000,"results":"194","hashOfConfig":"107"},{"size":11699,"mtime":1615029329811,"results":"195","hashOfConfig":"107"},{"size":17009,"mtime":1613845528299,"results":"196","hashOfConfig":"107"},{"size":248,"mtime":1609685576000,"results":"197","hashOfConfig":"107"},{"size":11133,"mtime":1611048232000,"results":"198","hashOfConfig":"107"},{"size":936,"mtime":1614666101160,"results":"199","hashOfConfig":"107"},{"size":488,"mtime":1614666101160,"results":"200","hashOfConfig":"107"},{"size":6526,"mtime":1611048232000,"results":"201","hashOfConfig":"107"},{"size":4654,"mtime":1611048094000,"results":"202","hashOfConfig":"107"},{"size":10158,"mtime":1611048094000,"results":"203","hashOfConfig":"107"},{"size":18487,"mtime":1611048094000,"results":"204","hashOfConfig":"107"},{"size":6512,"mtime":1611048094000,"results":"205","hashOfConfig":"107"},{"size":9265,"mtime":1611048094000,"results":"206","hashOfConfig":"107"},{"size":6139,"mtime":1615122443052,"results":"207","hashOfConfig":"107"},{"size":7441,"mtime":1611048094000,"results":"208","hashOfConfig":"107"},{"size":294,"mtime":1615630172956,"results":"209","hashOfConfig":"107"},{"size":706,"mtime":1615715180657,"results":"210","hashOfConfig":"107"},{"size":78,"mtime":1615735666076,"results":"211","hashOfConfig":"107"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},"3mbo8o",{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"215"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"215"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"215"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"215"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"215"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"215"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"215"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"215"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"215"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"215"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"215"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"215"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"215"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"215"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"215"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"215"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"215"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"215"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\index.js",["442","443"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport i18n from './i18n';\n\nimport localization from './store/reducers/reducer_localization';\nimport data from './store/reducers/reducer_data';\nimport user from './store/reducers/reducer_user';\n\nimport App from './pages/App';\nimport './index.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({ localization, data, user });\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["444","445"],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\reportWebVitals.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\i18n.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\App.js",["446"],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\reducers\\reducer_user.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\reducers\\reducer_localization.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\reducers\\reducer_data.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Categories\\categories_en.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Categories\\categories_ru.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Categories\\categories_uz.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Regions\\regions_en.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Regions\\regions_uz.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Regions\\regions_ru.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Translations\\base\\base_en.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Translations\\base\\base_ru.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Translations\\base\\base_uz.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Layout.js",["447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../store/actions';\r\nimport Footer from '../components/Footer';\r\n\r\nconst Layout = (props) => {\r\n    const [Nav, setNav] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        if (props.mobile) setNav(React.lazy(() => import('../components/MobileNav/MobileNav')));\r\n        else setNav(React.lazy(() => import('../components/Navigation/Navigation')));\r\n    }, [props.mobile]);\r\n\r\n    window.mobileCheck = () => {\r\n        let check = false;\r\n        (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n        return check;\r\n    };\r\n\r\n    let isHome = window.location.pathname === '/';\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {Nav && <Nav {...props} />}\r\n                {props.children}\r\n            {(!isHome && !props.mobile) ? <Footer base={props.base} /> : null}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lang: state.localization.lang,\r\n    favorites: state.user.favorites,\r\n    token: state.user.token,\r\n    categories: state.localization.translations.categoriesList,\r\n    mobile: state.data.mediaSmall,\r\n\r\n    // translations\r\n    base: state.localization.translations.base\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onLogOut: () => dispatch(actions.logOut()),\r\n    onLogin: (token) => dispatch(actions.logIn(token))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Layout));","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\ErrorPage.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Header.js",["493","494","495"],"import React, { Component } from 'react';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport SwiperCore, { Autoplay, Navigation, Pagination } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { trackWindowScroll } from 'react-lazy-load-image-component';\r\nimport axios from 'axios';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\nimport Searchbar from '../components/Searchbar';\r\nimport * as utils from '../utilities/utilities';\r\nimport Card from '../components/Card';\r\nimport LoadingScreen from '../UI/LoadingScreen';\r\nimport LoadingSub from '../UI/LoadingSub';\r\n\r\nconst AsyncAdview = React.lazy(() => import('./Adview/Adview'));\r\n\r\nSwiperCore.use([Autoplay, Navigation, Pagination]); \r\n\r\nclass Header extends Component {\r\n    state = {\r\n        loading: false,\r\n        loadingVendor: false,\r\n        data: [...this.props.data],\r\n        vendorAds: this.props.vendorAds,\r\n        categoryComp: null\r\n    }\r\n\r\n    fetchPremiumAds = async () => {\r\n        try {\r\n            this.setState({ loading: true });\r\n            const data = await axios('https://jsonplaceholder.typicode.com/todos');\r\n            this.setState({ loading: false, error: null });\r\n            return data;\r\n        } catch(er) {\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    watchMedia = () => {\r\n        if (this.props.mobile) this.setState({ categoryComp: React.lazy(() => import('../components/MobileCats/MobileCats')) });\r\n        else this.setState({ categoryComp: React.lazy(() => import('../components/Categories/Categories')) });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.watchMedia();\r\n        try {\r\n            this.setState({ loading: true, loadingVendor: true });\r\n            const vendorAds = await axios('https://jsonplaceholder.typicode.com/todos');\r\n            const premiumAds = await this.fetchPremiumAds();\r\n\r\n            setTimeout(() => {\r\n                \r\n                this.setState({ loadingVendor: false, error: null });\r\n            }, 1500);\r\n        } catch(er) {\r\n            console.log(er);\r\n            this.setState({ loadingVendor: false, error: er });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        this.swiper.update();\r\n        if (prevProps.mobile !== this.props.mobile) this.watchMedia();\r\n    }\r\n\r\n    onShowMore = async () => {\r\n        const data = await this.fetchPremiumAds();\r\n        this.setState(prevState => ({ data: [...prevState.data, ...this.props.data] }));\r\n    }\r\n\r\n    render() {\r\n        // ---------- TRANSLATIONS VIA PROPS ---------\r\n        const { t } = this.props;\r\n\r\n        const vendorAds = this.state.vendorAds.map((el, i) => {\r\n            return (\r\n                <SwiperSlide className=\"header__item\" key={i}>\r\n                    <Link to={`/${el}`} className=\"header__link\">\r\n                        <img className=\"header__img\" src={el.img} alt={i} />\r\n                        <h1 className=\"heading heading__1 header__heading\">{el.title}</h1>\r\n                    </Link>\r\n                </SwiperSlide>\r\n            );\r\n        });\r\n        \r\n        const premiumArr = this.state.data.filter(el => el.premium === true);\r\n        const premium = premiumArr.map((el, i) => <Card data={el} key={i} />);\r\n\r\n        const Categories = this.state.categoryComp; \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Route path=\"/premium/:id\" exact component={AsyncAdview} />\r\n                <Searchbar />\r\n                <header className=\"header\">\r\n                    <div className=\"header__main\">\r\n                        <div className=\"container header__container\">\r\n                            <div className=\"header__mainwrap\">\r\n                                {Categories && <Categories {...this.props} />}\r\n                                {this.state.loadingVendor \r\n                                    ? <div className=\"header__list header__loading loading-center\">\r\n                                        <LoadingSub />\r\n                                    </div>\r\n                                    : <Swiper \r\n                                        className=\"header__list gradient gradient--right\"\r\n                                        autoplay={{ delay: 3000, waitForTransition: true }}\r\n                                        navigation={{ prevEl: '.btn__rounded--left', nextEl: '.btn__rounded--right', disabledClass: 'btn__rounded--disabled' }}\r\n                                        pagination={{el: '.swiper-pagination', clickable: true}}\r\n                                        preloadImages\r\n                                        updateOnImagesReady\r\n                                        onSwiper={(sw) => this.swiper = sw}>\r\n                                            {vendorAds}\r\n                                            <button className=\"btn btn__rounded btn__rounded--left\">\r\n                                                <utils.use styleClass=\"header__icon\" svg=\"chevron-left\" />\r\n                                            </button>\r\n                                            <button className=\"btn btn__rounded btn__rounded--right\">\r\n                                                <utils.use styleClass=\"header__icon\" svg=\"chevron-right\" />\r\n                                            </button>\r\n                                            <div className=\"swiper-pagination\"></div>\r\n                                    </Swiper>\r\n                                    }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <section className=\"header__premium\">\r\n                        <div className=\"container\">\r\n                            <div className=\"header__premwrap\">\r\n                                <div className=\"header__head\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <h2 className=\"heading heading__2 main__heading mb-5 mr-1\">{t('main.premium ads')}</h2>\r\n                                        <Link to=\"/premium\" className=\"btn__sub btn__sub--active\">{t('main.see all')}</Link>\r\n                                    </div>\r\n                                    <p className=\"heading__sub\">{t('main.found ads.p1')} 10,364 {t('main.found ads.p2')}</p>\r\n                                </div>\r\n\r\n                                <div className=\"list\">{this.state.loading ? <LoadingScreen /> : premium}</div>\r\n                                \r\n                                <button className=\"btn btn__primary btn__primary--outline\" onClick={() => this.onShowMore()}>\r\n                                    {t('main.show more')}\r\n                                    <utils.use styleClass=\"icon ml-5\" svg=\"chevrons-down\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    vendorAds: state.data.vendorAds,\r\n    data: state.data.data,\r\n    lang: state.localization.lang,\r\n    categories: state.localization.translations.categoriesList,\r\n    loading: state.data.loading,\r\n    mobile: state.data.mediaSmall,\r\n\r\n    // translations\r\n    // base: state.localization.translations.base\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(withTranslation()(trackWindowScroll(Header))));","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\LoadingScreen.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Post\\Post.js",["496"],"import React, { PureComponent } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport imageCompression from 'browser-image-compression';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport * as utils from '../../utilities/utilities';\r\nimport Dropdown from '../../UI/Dropdown';\r\nimport LoadingScreen from '../../UI/LoadingScreen';\r\nimport './Post.scss';\r\n\r\nclass Post extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            // -------- Data -----------\r\n\r\n            business_type: 'Individual',\r\n            adType: 'sell',\r\n            mainTitle: '',\r\n            description: '',\r\n            currency: 'uzsom',\r\n            numbers: ['+998994886928'],\r\n            email: '',\r\n            name: '',\r\n            images: [],\r\n\r\n\r\n            mileage: '',\r\n            year: '',\r\n            condition: 'new',\r\n            type: 'boys',\r\n\r\n\r\n            // -------------------------\r\n\r\n            types: {\r\n                sell: 'Sell',\r\n                exchange: 'Exchange',\r\n                give: 'Give away'\r\n            },\r\n            showCat: false,\r\n            activeSubCat: null,\r\n            subCatTitle: null,\r\n            activeAfter: null,\r\n            activeCat: null,\r\n            error: null,\r\n\r\n            filterObj: null,\r\n            loading: false,\r\n            categoriesComponent: null\r\n        };\r\n\r\n        this.filesRef = React.createRef();\r\n        this.priceInputRef = React.createRef();\r\n\r\n        if (!this.props.token) this.props.history.push('/signin');\r\n    }\r\n\r\n    watchMedia = () => {\r\n        if (this.props.mobile && !this.props.edit) this.setState({ categoriesComponent: React.lazy(() => import('../../components/MobileCats/MobileCats')) });\r\n        else if (!this.props.mobile) this.setState({ categoriesComponent: React.lazy(() => import('../../components/CategoriesFull/CategoriesFull')) });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.watchMedia();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.mobile !== this.props.mobile) this.watchMedia();\r\n        if (\r\n            (this.state.activeAfter !== prevState.activeAfter && this.props.categories) ||\r\n            (this.state.activeAfter && this.props.i18n.language !== prevProps.i18n.language && this.props.categories)\r\n           )\r\n        {\r\n            const category = this.props.categories[this.state.activeAfter].val;\r\n\r\n            this.setState({ activeSubCat: null }, () => {\r\n                import(`../../store/PostFilters/${this.props.i18n.language}/${category}`)\r\n                    .then(filter => {\r\n                        this.setState({ filterObj: filter.default }, () => {\r\n                            console.log(this.state.filterObj);\r\n                        });\r\n                    })\r\n                    .catch(er => {\r\n                        console.error(er);\r\n                    });\r\n            });\r\n        }\r\n        if (!this.props.token) this.props.history.push('/signin');\r\n    }\r\n\r\n    onAddNumber = () => {\r\n        if (this.state.numbers.length < 3) {\r\n            this.setState(prevState => {\r\n                const newNums = [...prevState.numbers, ''];\r\n                return { numbers: newNums };\r\n            });\r\n        }\r\n    }\r\n    \r\n    onInputNumber = (val, index) => {\r\n        if (utils.isNum(parseInt(val)) || val === '' || val === '+') {\r\n            this.setState(prevState => {\r\n                const numbers = prevState.numbers.map((el, i) => {\r\n                    if (i === index) return el = val;\r\n                    else return el;\r\n                });\r\n                return { numbers };\r\n            });\r\n        }\r\n    }\r\n\r\n    onInputDescription = (e) => this.setState({ description: e.target.value });\r\n    onInputTitle = (e) => this.setState({ mainTitle: e.target.value });\r\n\r\n    onChangeCurrency = (c) => this.setState({ currency: c });\r\n    onChangeBusinessType = (type) => this.setState({ business_type: type });\r\n    onChangeAdType = (type) => this.setState({ adType: type });\r\n\r\n    onOpenCatPop = () => {\r\n        if (!this.props.edit) this.setState({ showCat: true });\r\n    }\r\n    onCloseCatPop = () => this.setState({ showCat: false });\r\n\r\n    setActiveCat = (cat) => this.setState({ activeCat: cat, activeAfter: cat, activeSubCat: null });\r\n    unsetActiveCat = () => this.setState({ activeCat: null });\r\n\r\n    onSelectSubCat = (subCat) => {\r\n        this.setState({\r\n            activeSubCat: subCat\r\n        }, () => this.setState({ showCat: false, activeCat: null }));\r\n    }\r\n\r\n    appendImage = (el, files) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(files);\r\n        reader.onload = () => {\r\n\r\n            const imgInitial = el.querySelector('.post__img');\r\n            if (imgInitial) imgInitial.remove();\r\n\r\n            const img = document.createElement('img');\r\n            img.classList.add('post__img');\r\n            img.src = reader.result;\r\n            el.appendChild(img);\r\n        };\r\n    }\r\n\r\n    onDeleteImage = (index) => {\r\n        this.setState(prevState => {\r\n            const images = prevState.images.filter((el, i) => i !== index);\r\n            return { images };\r\n        }, () => {\r\n            const photoContainers = Array.from(document.querySelectorAll('.post__figure'));\r\n            photoContainers[index].querySelector('.post__img').remove();\r\n\r\n            this.state.images.forEach((el, i) => this.appendImage(photoContainers[i], el));\r\n\r\n            const imageAfter = photoContainers[index + 1].querySelector('.post__img');\r\n            if (imageAfter) imageAfter.remove();\r\n\r\n            const imageLast = photoContainers[this.state.images.length].querySelector('.post__img');\r\n            if (imageLast) imageLast.remove();\r\n        });\r\n    }\r\n\r\n    onImageUpload = () => {\r\n        const files = this.filesRef.current.files;\r\n        const numOfImagesAllowed = this.state.filterObj ? this.state.filterObj.imagesAllowed : 5;\r\n        console.log(numOfImagesAllowed)\r\n\r\n        if (this.state.images.length < numOfImagesAllowed) {\r\n            let photos = Array.from(files).slice(0, numOfImagesAllowed);\r\n\r\n            const largeFile = photos.find(el => el.size > 3500000);\r\n            if (!largeFile) {\r\n                const options = {\r\n                    maxSizeMB: 1,\r\n                    maxWidthOrHeight: 1920,\r\n                    useWebWorker: true\r\n                }\r\n                \r\n                this.setState({ loading: true }, () => {\r\n                    for (let i = 0; i < photos.length; i++) {\r\n                        imageCompression(photos[i], options)\r\n                            .then(cimage => {\r\n                                const file = new File([cimage], cimage.name);\r\n\r\n                                this.setState(prevState => {\r\n                                    return { images: [...prevState.images, file] };\r\n                                }, () => {\r\n                                    const photoContainers = Array.from(document.querySelectorAll('.post__figure'));\r\n                                    this.state.images.forEach((el, i) => this.appendImage(photoContainers[i], el));\r\n\r\n                                    this.setState({ error: null, loading: false });\r\n                                    this.filesRef.current.value = '';\r\n                                });\r\n                            })\r\n                            .catch(er => {\r\n                                this.setState({ error: er, loading: false });\r\n                                this.filesRef.current.value = '';\r\n                            });\r\n                    }\r\n                });\r\n            } else this.setState({ error: `File \"${largeFile.name}\" exceeded maximum size of 3.5MB` });\r\n        }\r\n    }\r\n\r\n    onSubmitPost = () => {\r\n        // this.state.mainTitle;\r\n        // this.state.description;\r\n        // this.state.type;\r\n        // this.state.email;\r\n        // this.state.name;\r\n        // const numbers = this.state.numbers.filter(el => {\r\n        //      if (el !== '') return el;\r\n        //      return null;\r\n        // });\r\n        const price = this.priceInputRef.current.value;\r\n        let category = this.props.categories[this.state.activeAfter];\r\n        let subcategory = this.state.activeSubCat;\r\n        \r\n        if ((this.state.mainTitle && this.state.description && this.state.name) !== '' && (category.val && subcategory)) {\r\n            if ((this.state.adType === 'sell') && (this.state.price !== '')) {\r\n                console.log('nu che sellnem');\r\n            }\r\n            console.log(this.state);\r\n            \r\n    \r\n            const formatData = new FormData();\r\n            this.state.images.forEach(el => formatData.append('photos[]', el));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        const typesArr = [];\r\n        for (let key in this.state.types) {\r\n            typesArr.push({\r\n                id: key,\r\n                value: this.state.types[key]\r\n            })\r\n        }\r\n        const types = typesArr.map(el => {\r\n            return (\r\n                <div className=\"dropdown__item\" key={el.id} onClick={() => this.onChangeAdType(el.id)}>\r\n                    <div className=\"dropdown__link post__dropitem\">{el.value}</div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let subOptions = null, \r\n            inputItems = null,\r\n            numOfImages = 5;\r\n\r\n        if (this.state.filterObj && this.state.activeSubCat) {\r\n\r\n            subOptions = this.state.filterObj.items[this.state.activeSubCat].sub.map((obj, index) => {\r\n                \r\n                const dropItems = obj.items.map((el, i) => {\r\n                    return (\r\n                        <div className=\"dropdown__item\" key={i}>\r\n                            <div \r\n                                className=\"dropdown__link post__dropitem\" \r\n                                onClick={() => this.setState({ [obj.val]: el.val })}>\r\n                                    {utils.capitalize(el.title)}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                const defaultTitle = obj.items.find(el => el.val === this.state[obj.val]).title;\r\n\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        <p className=\"post__title mb-1\">{obj.title}</p>\r\n                        <div className=\"w-100 pos-rel mb-15\">\r\n                            <div className=\"post__input post__input--cat post__input--drop\" tabIndex=\"0\">\r\n                                {defaultTitle}\r\n                                <utils.use styleClass=\"icon post__icon icon post__icon--cat-arrow\" svg=\"chevron-down\" />\r\n                            </div>\r\n                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                {dropItems}\r\n                            </Dropdown>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            });\r\n        \r\n            inputItems = this.state.filterObj.items[this.state.activeSubCat].inputs.map((el, i) => {\r\n                return (\r\n                    <div className=\"mb-15\" key={i}>\r\n                        <p className=\"post__title mb-1\">{el.title}</p>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder={el.title} \r\n                            className=\"post__input\" \r\n                            onChange={(e) => this.setState({ [el.val]: e.target.value })} />\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            numOfImages = this.state.filterObj.imagesAllowed || numOfImages;\r\n        }\r\n\r\n        let title = null;\r\n        if (this.state.activeSubCat && this.state.activeAfter) {\r\n            title = this.props.categories[this.state.activeAfter].subCategories.find(el => el.val === this.state.activeSubCat).title;\r\n        }\r\n\r\n        const numbers = this.state.numbers.slice(1).map((el, i) => {\r\n            return (\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Your contact number\" \r\n                    className=\"post__input post__input--singlebtn mb-15\" \r\n                    value={this.state.numbers[i + 1]} \r\n                    onChange={(e) => this.onInputNumber(e.target.value, i + 1)} \r\n                    maxLength={15} />\r\n            );\r\n        });\r\n\r\n        const Categories = this.state.categoriesComponent && this.state.categoriesComponent;\r\n        let categories = null;\r\n        if (!this.props.edit && Categories) {\r\n            categories = <Categories \r\n                clickMain={this.setActiveCat}\r\n                clickSub={this.onSelectSubCat} \r\n                close={this.onCloseCatPop} \r\n                categories={this.props.categories} />;\r\n    \r\n            if (this.props.mobile) {\r\n                categories = <Categories\r\n                    clickMain={this.setActiveCat}\r\n                    clickSub={this.onSelectSubCat} \r\n                    categories={this.props.categories} \r\n                    fixed\r\n                    close={this.onCloseCatPop} />;\r\n            }\r\n        }\r\n\r\n        const imageFields = Array.from(Array(numOfImages).keys()).map((el, i) => {\r\n            return (\r\n                <div className=\"post__imagebox\" key={i}>\r\n                    <figure \r\n                        className=\"post__figure\" \r\n                        onClick={() => this.filesRef.current.click()}>\r\n                            <utils.use \r\n                                styleClass={`post__icon ${i === 0 ? 'post__icon--main mb-1' : ''}`} \r\n                                svg={i === 0 ? 'image' : 'plus'} />\r\n                            {i === 0 && (\r\n                                    !this.state.images[0] && <span className=\"post__prompt\">{t('ad:click to upload')}</span>\r\n                                )\r\n                            }\r\n                    </figure>\r\n                    {this.state.images[i] && \r\n                        <div className=\"post__overlay\">\r\n                            <button className=\"post__btn post__btn--delete\" onClick={() => this.onDeleteImage(i)}>\r\n                                <utils.use styleClass=\"post__icon post__icon--cat\" svg=\"trash-2\" />\r\n                            </button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.loading && <LoadingScreen class=\"loadingScreen--abs\" />}\r\n                <section className={`post ${this.props.edit ? 'post--edit' : ''}`}>\r\n                    <div className=\"container\">\r\n                        <div className=\"post__wrapper\">\r\n                            {!this.props.edit && \r\n                                <div className=\"post__head\">\r\n                                    <h2 className=\"heading heading__2 mb-1\">{t('ad:post new')}</h2>\r\n                                    <span className=\"post__text\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id tellus a eros vulputate euismod in at orci. Ut felis ipsum, bibendum vitae elit viverra, consectetur tincidunt lorem. Donec lectus.\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            {this.state.error && <p className=\"post__hint post__hint--red mb-2\">{this.state.error}</p>}\r\n                            <div className=\"post__main\">\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">{t('ad:post new')}</p>\r\n                                    <div className=\"post__uploadbox\">\r\n                                        {imageFields}\r\n                                        <input \r\n                                            className=\"post__input d-none\" \r\n                                            type=\"file\" \r\n                                            multiple \r\n                                            accept=\"image/*\"\r\n                                            ref={this.filesRef} \r\n                                            onChange={() => this.onImageUpload()} />\r\n                                    </div>\r\n                                    \r\n                                    <p className=\"post__hint post__hint--left mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt nec nibh non porta. Donec.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group post__group--title\">\r\n                                    <p className=\"post__title mb-1\">{t('ad:enter title')}</p>\r\n                                    <label className=\"post__label\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"post__input post__input--title\"\r\n                                            placeholder=\"Enter Ad title\"\r\n                                            onChange={(e) => this.onInputTitle(e)}\r\n                                            value={this.state.mainTitle} \r\n                                            maxLength=\"35\" />\r\n                                        <span className=\"post__counter mt-1\">{35 - this.state.mainTitle.length} {t('translation:input.chars left')}</span>\r\n                                    </label>\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam maximus nibh vel hendrerit maximus. Proin imperdiet elit ipsum, in maximus lectus faucibus in. Praesent eu nunc ut quam mattis rhoncus.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">{t('ad:category')}</p>\r\n                                    {this.props.edit && \r\n                                        <p className=\"post__hint post__hint--red mb-1\">{t('ad:warn category change')}</p>\r\n                                    }\r\n                                    <button className=\"post__input post__input--cat post__input--cat-main\" onClick={() => this.onOpenCatPop()}>\r\n                                        <span className=\"post__val\">\r\n                                            {this.state.activeAfter && <utils.useCat styleClass=\"post__icon post__icon--cat icon__dark mr-1\" svg={this.props.categories[this.state.activeAfter].icon} />}\r\n                                            {title ? title : t('ad:select category')}\r\n                                        </span>\r\n                                        <utils.use styleClass=\"post__icon icon post__icon--cat-arrow\" svg=\"chevron-right\" />\r\n                                    </button>\r\n                                    {this.state.activeAfter &&\r\n                                        <React.Fragment>\r\n                                            <div className=\"post__catselected post__input mt-1\" onClick={() => this.onOpenCatPop()}>\r\n                                                <ul className=\"post__list\">\r\n                                                    <li className=\"post__item\">{this.props.categories[this.state.activeAfter].title}</li>\r\n                                                    <li className=\"post__item\">{title}</li>\r\n                                                </ul>\r\n                                                <button className=\"post__btn post__btn--catitems\">\r\n                                                    <utils.use styleClass=\"post__icon icon post__icon--cat-arrow\" svg=\"chevron-right\" />\r\n                                                </button>\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt nec nibh non porta. Donec.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group post__group--details m-0\">\r\n                                    <div className=\"post__group\">\r\n                                        <div className=\"mb-15\">\r\n                                            <p className=\"post__title mb-1\">Price</p>\r\n                                            <div className=\"mb-1 w-100 pos-rel\">\r\n                                                <div className=\"post__input post__input--cat post__input--drop\" tabIndex=\"0\">\r\n                                                    {this.state.types[this.state.adType]}\r\n                                                    <utils.use styleClass=\"post__icon icon post__icon--cat-arrow\" svg=\"chevron-down\" />\r\n                                                </div>\r\n                                                <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                    {types}\r\n                                                </Dropdown>\r\n                                            </div>\r\n                                            {this.state.adType === 'sell' &&\r\n                                                <div className=\"post__double-form\">\r\n                                                    <input type=\"text\" placeholder=\"Price\" className=\"post__input post__input--price mr-1\" ref={this.priceInputRef} />\r\n                                                    <div className=\"pos-rel\">\r\n                                                        <div className=\"jc post__input post__input--cat post__input--drop\" tabIndex=\"0\">\r\n                                                            {this.state.currency.toUpperCase()}\r\n                                                        </div>\r\n                                                        <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                            <div className=\"dropdown__item\" onClick={() => this.onChangeCurrency('usd')}>\r\n                                                                <div className=\"dropdown__link post__dropitem post__dropitem--currency\">USD</div>\r\n                                                            </div>\r\n                                                            <div className=\"dropdown__item\" onClick={() => this.onChangeCurrency('uzsom')}>\r\n                                                                <div className=\"dropdown__link post__dropitem post__dropitem--currency\">UZSOM</div>\r\n                                                            </div>\r\n                                                        </Dropdown>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        <p className=\"post__title mb-1\">{t('ad:type of business')}</p>\r\n                                        <div className=\"w-100 pos-rel\">\r\n                                            <div className=\"post__input post__input--cat post__input--drop\" tabIndex=\"0\">\r\n                                                {utils.capitalize(this.state.business_type)}\r\n                                                <utils.use styleClass=\"post__icon icon post__icon--cat-arrow\" svg=\"chevron-down\" />\r\n                                            </div>\r\n                                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                <div className=\"dropdown__item\" onClick={() => this.onChangeBusinessType('individual')}>\r\n                                                    <div className=\"dropdown__link post__dropitem\">{t('ad:individual')}</div>\r\n                                                </div>\r\n                                                <div className=\"dropdown__item\" onClick={() => this.onChangeBusinessType('business')}>\r\n                                                    <div className=\"dropdown__link post__dropitem\">{t('ad:business')}</div>\r\n                                                </div>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"post__group\">{subOptions}</div>\r\n                                    <div className=\"post__group\">{inputItems}</div>\r\n                                </div>\r\n                                <div className=\"post__group post__group--description\">\r\n                                    <p className=\"post__title mb-1\">{t('ad:personalized des')}</p>\r\n                                    <label className=\"post__label\">\r\n                                        <textarea \r\n                                            className=\"post__input post__input--description\" \r\n                                            placeholder=\" \" \r\n                                            value={this.state.description}\r\n                                            onChange={(e) => this.onInputDescription(e)}\r\n                                            maxLength=\"4500\"></textarea>\r\n                                        <span className=\"post__counter mt-1\">{4500 - this.state.description.length} {t('translation:input.chars left')}</span>\r\n                                    </label>\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In id nulla porta, rutrum enim eget, luctus neque. Cras scelerisque imperdiet.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post__head post__head--doubleline\">\r\n                                <h2 className=\"heading heading__2 mb-1\">{t('ad:contact details')}</h2>\r\n                                <span className=\"post__text\">\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc mattis.\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"post__main\">\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">{t('ad:contact number')}</p>\r\n                                    {this.state.numbers.length > 1 && \r\n                                        <p className=\"post__text mb-1\">{t('ad:num leave empty')}</p>\r\n                                    }\r\n                                    <div className=\"post__double-form w-100 pos-rel\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            placeholder=\"Your contact number\" \r\n                                            className=\"post__input mr-1\" \r\n                                            value={this.state.numbers[0]} \r\n                                            onChange={(e) => this.onInputNumber(e.target.value, 0)} \r\n                                            maxLength={15} />\r\n                                        <button className=\"post__input jc d-flex\" onClick={() => this.onAddNumber()}>\r\n                                            <utils.use styleClass=\"post__icon icon post__icon--cat-arrow\" svg=\"plus\" />\r\n                                        </button>\r\n                                    </div>\r\n                                    {numbers}\r\n                                    <p className=\"post__title mb-1 mt-15\">{t('ad:email')}</p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        placeholder=\"Your email address (optional)\"\r\n                                        className=\"post__input mb-15\"\r\n                                        value={this.state.email}\r\n                                        onChange={(e) => this.setState({ email: e.target.value })} />\r\n                                    <p className=\"post__title mb-1\">{t('ad:name')}</p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        placeholder=\"Your contact name\"\r\n                                        className=\"post__input mb-15\" \r\n                                        value={this.state.name}\r\n                                        onChange={(e) => this.setState({ name: e.target.value })} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"post__footer\">\r\n                            <div className=\"container\">\r\n                                <div className=\"post__footwrap\">\r\n                                    <button className=\"btn post__btn-main btn__primary\" onClick={() => this.onSubmitPost()}>\r\n                                        {t('ad:post')}\r\n                                        <utils.use styleClass=\"icon ml-5\" svg=\"check-circle\" />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {(this.state.showCat && !this.props.edit) && categories}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lang: state.localization.lang,\r\n    token: state.user.token,\r\n    categories: state.localization.translations.categoriesList,\r\n    mobile: state.data.mediaSmall\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(withTranslation(['ad', 'translation'])(Post)));","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\MobilePost\\MobilePost.js",["497","498"],"import { useState, useEffect, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport imageCompression from 'browser-image-compression';\r\nimport { connect } from 'react-redux';\r\n\r\nimport *  as utils from '../../utilities/utilities';\r\nimport './MobilePost.scss';\r\nimport MobileCats from '../../components/MobileCats/MobileCats';\r\nimport { setLoading } from '../../store/actions';\r\nimport Modal from '../../components/Modal';\r\nimport LoadingScreen from '../../UI/LoadingScreen';\r\n\r\nconst MobilePost = (props) => {\r\n    const { i18n, t } = useTranslation(['ad', 'translation']);\r\n\r\n    const filesRef = useRef();\r\n\r\n    const [loading, setLoding] = useState(false);\r\n    const [showCats, setShowCats] = useState(false);\r\n\r\n    const [activeCategory, setActiveCategory] = useState(null);\r\n    const [activeCategoryAfter, setActiveCategoryAfter] = useState(null);\r\n    const [activeSubcategory, setActiveSubcategory] = useState(null);\r\n    const [activeOptionsView, setActiveOptionsView] = useState(null);\r\n\r\n    const [postFilters, setPostFilters] = useState({ items: {} });\r\n\r\n    const [data, setData] = useState({\r\n        images: [],\r\n        mileage: '',\r\n        year: '',\r\n        condition: 'new',\r\n        type: 'boys',\r\n        description: '',\r\n        title: '',\r\n        name: '',\r\n        email: '',\r\n        phoneNumbers: ['+511541515']\r\n    });\r\n\r\n    let numOfImagesAllowed = postFilters.imagesAllowed || 5;\r\n    \r\n    useEffect(() => {\r\n        if (activeCategory) {\r\n            import(`../../store/PostFilters/${i18n.language}/${activeCategory}`)\r\n                .then((filters) => setPostFilters({ ...filters.default }))\r\n                .catch(er => console.error(er));\r\n        }\r\n    }, [i18n.language, activeCategory, postFilters.items]);\r\n\r\n    const filter = postFilters.items[activeSubcategory];\r\n    let options = null,\r\n        categoryTitle = null,\r\n        inputs = null,\r\n        category = null,\r\n        subcategory = null,\r\n        optionItems = null;\r\n\r\n    if (filter && activeCategoryAfter) {\r\n        options = filter.sub.map((el, i) => {\r\n            const defTitle = el.items.find(item => item.val === data[el.val]).title;\r\n            return (\r\n                <div className=\"m-post__item\" key={i}>\r\n                    <span className=\"m-post__title\">{el.title}</span>\r\n                    <div className=\"m-post__input\" onClick={() => setActiveOptionsView(i)}>\r\n                        {defTitle}\r\n                        <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        inputs = filter.inputs.map((el, i) => {\r\n            return (\r\n                <div className=\"m-post__item\" key={i}>\r\n                    <span className=\"m-post__title\">{el.title}</span>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder={`${t('tranlsation:input.enter')} ${utils.toLower(el.title)}`} \r\n                        onChange={(e) => setData({\r\n                            ...data,\r\n                            [el.val]: e.target.val\r\n                        })} \r\n                        className=\"m-post__input\" />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        optionItems = activeOptionsView !== null && filter.sub[activeOptionsView].items.map((el, i) => {\r\n            const isActive = el.val === data[filter.sub[activeOptionsView].val];\r\n            return (\r\n                <li \r\n                    key={i}\r\n                    className={`modal__item ${isActive ? 'modal__item--active' : ''}`} \r\n                    onClick={() => {\r\n                        setData({\r\n                            ...data,\r\n                            [filter.sub[activeOptionsView].val]: el.val\r\n                        });\r\n                        setActiveOptionsView(null);\r\n                    }}>\r\n                        <div className=\"d-flex ac\">\r\n                            {isActive &&\r\n                                <utils.use styleClass=\"icon--7 mr-5\" svg=\"check\" />\r\n                            }\r\n                            {el.title}\r\n                        </div>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        category = props.categories && props.categories[activeCategoryAfter];\r\n        subcategory = category && category.subCategories.find(el => el.val === activeSubcategory);\r\n    }\r\n\r\n    const appendImage = (el, files) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(files);\r\n        reader.onload = () => {\r\n            const imgInitial = el.querySelector('.m-post__img');\r\n            if (imgInitial) imgInitial.remove();\r\n\r\n            const img = document.createElement('img');\r\n            img.classList.add('m-post__img');\r\n            img.src = reader.result;\r\n            el.appendChild(img);\r\n        };\r\n    };\r\n\r\n    const onDeleteImage = (index) => {\r\n            const images = data.images.filter((el, i) => i !== index);\r\n            setData(prevState => ({\r\n                ...prevState,\r\n                images\r\n            }));\r\n\r\n            const photoContainers = Array.from(document.querySelectorAll('.m-post__figure'));\r\n            photoContainers[index].querySelector('.m-post__img').remove();\r\n\r\n            images.forEach((el, i) => appendImage(photoContainers[i], el));\r\n\r\n            const imageAfter = photoContainers[index + 1].querySelector('.m-post__img');\r\n            if (imageAfter) imageAfter.remove();\r\n\r\n            const imageLast = photoContainers[images.length].querySelector('.m-post__img');\r\n            if (imageLast) imageLast.remove();\r\n    };\r\n\r\n    const onAddNumber = () => {\r\n        if (data.phoneNumbers.length < 3) {\r\n            const newList = [...data.phoneNumbers, ''];\r\n            setData(prevState => ({\r\n                ...prevState,\r\n                phoneNumbers: newList\r\n            }));\r\n        }\r\n    };\r\n\r\n    const onEnterNumber = (val, index) => {\r\n        if (utils.isNum(parseInt(val)) ||\r\n            val === '' ||\r\n            val === '+'\r\n           ) \r\n        {\r\n            const newList = data.phoneNumbers.map((el, i) => {\r\n                console.log(val);\r\n                if (index === i) return el = val;\r\n                else return el;\r\n            });\r\n    \r\n            setData(prevState => ({\r\n                ...prevState,\r\n                phoneNumbers: newList\r\n            }));\r\n        }\r\n    };  \r\n\r\n    const onImageUpload = () => {\r\n        const files = filesRef.current.files;\r\n\r\n        if (data.images.length < numOfImagesAllowed) {\r\n            let photos = Array.from(files).slice(0, numOfImagesAllowed);\r\n\r\n            const largeFile = photos.find(el => el.size > 3000000); //3500000\r\n\r\n            if (!largeFile) {\r\n                const options = {\r\n                    maxSizeMB: 1,\r\n                    maxWidthOrHeight: 1920,\r\n                    useWebWorker: true\r\n                };\r\n                \r\n                setLoading(true);\r\n                for (let i = 0; i < photos.length; i++) {\r\n                    imageCompression(photos[i], options)\r\n                        .then(cimage => {\r\n                            const file = new File([cimage], cimage.name);\r\n                            \r\n                            setData(prevState => ({\r\n                                ...prevState,\r\n                                images: [...prevState.images, file]\r\n                            }));\r\n                            \r\n                            const photoContainers = Array.from(document.querySelectorAll('.m-post__figure'));\r\n                            [...data.images, file].forEach((el, i) => appendImage(photoContainers[i], el));\r\n            \r\n                            filesRef.current.value = '';\r\n                            setLoading(false);\r\n                        })\r\n                        .catch(er => {\r\n                            setLoading(false);\r\n                            console.error(er);\r\n                            filesRef.current.value = '';\r\n                        });\r\n                }\r\n            } else console.error(t('ad:image size warning'));\r\n        }\r\n    };\r\n\r\n    const imageFields = Array.from(Array(numOfImagesAllowed).keys()).map((el, i) => (\r\n        <div className=\"m-post__img-group\" key={i}>\r\n            <figure \r\n                className=\"m-post__figure\" \r\n                onClick={() => filesRef.current.click()}>\r\n                    <utils.use \r\n                        styleClass=\"icon icon--dark\" \r\n                        svg={i === 0 ? 'image' : 'plus'} />\r\n            </figure>\r\n            {data.images[i] &&\r\n                <button \r\n                    className=\"m-post__img-btn\" \r\n                    onClick={() => onDeleteImage(i)}>\r\n                        <utils.use styleClass=\"icon--7 icon--dark\" svg=\"x\" />\r\n                </button>\r\n            }\r\n        </div>\r\n    ));\r\n\r\n    const numberFields = data.phoneNumbers.slice(1).map((el, i) => {\r\n        return (\r\n            <input \r\n                key={i}\r\n                className=\"m-post__input mt-1\" \r\n                value={data.phoneNumbers[i+1]} \r\n                type=\"text\"\r\n                placeholder={t('translation:input.enter number')}\r\n                onChange={(e) => onEnterNumber(e.target.value, i+1)}\r\n                maxLength=\"15\" />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {loading && <LoadingScreen class=\"loadingScreen--abs\" />}\r\n            <div className=\"m-post\">\r\n                <div className={`container ${props.edit ? 'w-auto p-0' : ''}`}>\r\n                    {!props.edit &&\r\n                        <div className=\"m-post__head\">\r\n                            <h2 className=\"heading heading__2\">{t('ad:post ad')}</h2>\r\n                            <p className=\"m-post__text\">\r\n                                {t('ad:post warning')}\r\n                            </p>\r\n                        </div>\r\n                    }\r\n                    <div className=\"list w-100\">\r\n                        <div className=\"m-post__item\">\r\n                            <span className=\"m-post__title\">{t('ad:enter title')}</span>\r\n                            <input \r\n                                className=\"m-post__input\" \r\n                                type=\"text\" \r\n                                maxLength=\"30\"\r\n                                value={data.title}\r\n                                placeholder={t('ad:enter title')}\r\n                                onChange={(e) => setData({\r\n                                    ...data,\r\n                                    title: e.target.value\r\n                                })} />\r\n                            {data.title !== '' &&\r\n                                <span className=\"m-post__title m-0 mt-1\">{30 - data.title.length} {t('translation:input.chars left')}</span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"m-post__item\">\r\n                            <span className=\"m-post__title\">{t('ad:upload img')}</span>\r\n                            <div className=\"list w-100\">\r\n                                {imageFields}\r\n                            </div>\r\n                            <input \r\n                                type=\"file\" \r\n                                accept=\"image/*\" \r\n                                ref={filesRef} \r\n                                multiple\r\n                                className=\"d-none\" \r\n                                onChange={() => onImageUpload()} />\r\n                        </div>\r\n                        <div className=\"m-post__item\">\r\n                            <span className=\"m-post__title\">{t('translation:main.cats')}</span>\r\n                            <button className=\"m-post__input d-flex sb\" onClick={() => setShowCats(true)}>\r\n                                {category \r\n                                    ? <>\r\n                                        {category.title} / {subcategory.title}\r\n                                        <utils.useCat styleClass=\"icon--7 icon--dark\" svg={category.icon} />\r\n                                    </>\r\n                                    : <>\r\n                                        {t('ad:select category')}\r\n                                        <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                                    </>\r\n                                }\r\n                            </button>\r\n                        </div>\r\n                        {options}\r\n                        {inputs}\r\n                        <div className=\"m-post__item\">\r\n                            <span className=\"m-post__title\">{t('ad:description')}</span>\r\n                            <textarea \r\n                                className=\"m-post__input m-post__input--description\" \r\n                                type=\"text\"\r\n                                value={data.description}\r\n                                onChange={(e) => setData({\r\n                                    ...data,\r\n                                    description: e.target.value\r\n                                })}\r\n                                maxLength=\"4500\" />\r\n                            {data.description !== '' &&\r\n                                <span className=\"m-post__title m-0 mt-1\">{4500 - data.description.length} {t('translation:input.chars left')}</span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"m-post__item\">\r\n                            <span className=\"m-post__title\">{t('ad:name')}</span>\r\n                            <input \r\n                                className=\"m-post__input\"\r\n                                type=\"text\"\r\n                                value={data.name}\r\n                                onChange={(e) => {\r\n                                    setData(prevState => ({\r\n                                        ...prevState,\r\n                                        name: e.target.value\r\n                                    }));\r\n                                }} \r\n                                placeholder={t('translation:input.enter name')} />\r\n                        </div>\r\n                        <div className=\"m-post__item\">\r\n                            <span className=\"m-post__title\">{t('ad:email')}</span>\r\n                            <input \r\n                                className=\"m-post__input\"\r\n                                type=\"email\"\r\n                                value={data.email}\r\n                                onChange={(e) => {\r\n                                    setData(prevState => ({\r\n                                        ...prevState,\r\n                                        email: e.target.value\r\n                                    }));\r\n                                }} \r\n                                placeholder={t('translation:input.enter email')} />\r\n                        </div>\r\n                        <div className=\"m-post__item\">\r\n                            <span className=\"m-post__title\">{t('ad:phone number')}</span>\r\n                            <div className=\"d-flex\">\r\n                                <input \r\n                                    className=\"m-post__input mr-5\" \r\n                                    value={data.phoneNumbers[0]} \r\n                                    type=\"text\"\r\n                                    placeholder={t('translation:input.enter number')}\r\n                                    onChange={(e) => onEnterNumber(e.target.value, 0)}\r\n                                    maxLength=\"15\" />\r\n                                <button className=\"m-post__input jc w-50\" onClick={() => onAddNumber()}>\r\n                                    <utils.use styleClass=\"icon--7 icon--dark\" svg=\"plus\" />\r\n                                </button>\r\n                            </div>\r\n                            {numberFields}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"m-post__footer\">\r\n                        <button \r\n                            className=\"btn btn__primary btn__primary--outline\"\r\n                            onClick={() => console.log(data.images)}>\r\n                            {t('ad:post')}\r\n                            <utils.use styleClass=\"ml-5 icon--dark icon--7\" svg=\"check\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {showCats &&\r\n                <MobileCats\r\n                    categories={props.categories}\r\n                    fixed\r\n                    clickMain={setActiveCategory}\r\n                    clickSub={(sub) => {\r\n                        setActiveSubcategory(sub);\r\n                        setActiveCategoryAfter(activeCategory);\r\n                        setActiveCategory(null);\r\n                        setShowCats(false);\r\n                    }} \r\n                    close={() => setShowCats(false)} />\r\n            }\r\n            {optionItems &&\r\n                <Modal \r\n                    click={() => setActiveOptionsView(null)}\r\n                    title={filter.sub[activeOptionsView].title}>\r\n                        <div className=\"modal__body\">\r\n                            <ul className=\"modal__list\">\r\n                                {optionItems}\r\n                            </ul>\r\n                        </div>\r\n                </Modal>\r\n            }\r\n        </>\r\n    ); \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    lang: state.localization.lang,\r\n    token: state.user.token,\r\n    categories: state.localization.translations.categoriesList,\r\n    mobile: state.data.mediaSmall\r\n});\r\n\r\nexport default connect(mapStateToProps)(MobilePost);","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Authorization\\AuthSignin.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\AllCatsPage\\AllCatsPage.js",["499"],"import React, { useEffect } from 'react';\r\nimport $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './AllCatsPage.scss';\r\nimport * as utils from '../../utilities/utilities';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst AllCategories = (props) => {\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        if (!props.mobile) {\r\n            const slideLinks = Array.from(document.querySelectorAll('.allcats__link--main'))\r\n            slideLinks.forEach((el, i) => onSelectCat(i));\r\n        }\r\n    }, []);\r\n\r\n    const onSelectCat = (index) => {\r\n\r\n        const itemList = Array.from(document.querySelectorAll('.allcats__list--slide'))[index];\r\n        const arrow = Array.from(document.querySelectorAll('.allcats__icon--arrow'))[index];\r\n        const itemLink = Array.from(document.querySelectorAll('.allcats__link--main'))[index];\r\n\r\n        if ($(itemList).is(':hidden')) {\r\n\r\n            $(itemList).slideDown({\r\n                duration: 400,\r\n                start: function() {\r\n                    $(this).css({ display: 'flex' })\r\n                }\r\n            });\r\n            $(arrow).css('transform', 'rotate(180deg)');\r\n            $(itemList).css('border-top', '1px solid rgba(0,0,0, .07)');\r\n            $(itemLink).addClass('allcats__link--active');\r\n            \r\n        } else {\r\n            $(itemList).slideUp({ duration: 400 });\r\n            $(arrow).css('transform', 'rotate(0)');\r\n            $(itemList).css('border', 'none');\r\n            $(itemLink).removeClass('allcats__link--active');\r\n        }\r\n    };\r\n\r\n    let catItems = null;\r\n    if (props.categories) {\r\n        const catItemsArr = [];\r\n        for (let key in props.categories) {\r\n            catItemsArr.push({\r\n                title: props.categories[key].title,\r\n                val: props.categories[key].val,\r\n                subItems: props.categories[key].subCategories,\r\n                icon: props.categories[key].icon\r\n            });\r\n        }\r\n    \r\n        catItems = catItemsArr.map((obj, i) => {\r\n            const subCategories = obj.subItems.map((el, i) => (\r\n                <li className=\"allcats__item allcats__item--sub\" key={i}>\r\n                    <Link to={`/categories/${obj.val}/${el.val}?page=1`} className=\"allcats__link allcats__link--sub\">\r\n                        {el.title}\r\n                    </Link>\r\n                </li>\r\n            ));\r\n    \r\n            return (\r\n                <li className=\"allcats__item\" key={i}>\r\n                    <div className=\"allcats__link allcats__link--main\" onClick={() => onSelectCat(i)}>\r\n                        <div className=\"allcats__group\">\r\n                            <utils.useCat styleClass=\"allcats__icon\" svg={obj.icon} />\r\n                            {obj.title}\r\n                        </div>\r\n                        <utils.use styleClass=\"allcats__icon allcats__icon--arrow\" svg=\"chevron-down\" />\r\n                    </div>\r\n                    <ul className=\"allcats__list allcats__list--slide\">\r\n                        {subCategories}\r\n                    </ul>\r\n                </li>\r\n            );\r\n        }); \r\n    }\r\n\r\n    return (\r\n        <div className=\"allcats\">\r\n            <div className=\"container\">\r\n                <div className=\"allcats__wrapper\">\r\n                    <div className=\"allcats__breadcrumbs\">\r\n                        <Link to=\"/\" className=\"mr-5\">{t('main.home')}</Link>\r\n                        <span className=\"mr-5\">&bull;</span>\r\n                        <span>{t('main.all cats')}</span>\r\n                    </div>\r\n                    <ul className=\"allcats__list\">{catItems}</ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.localization.translations.categoriesList,\r\n    mobile: state.data.mediaSmall   \r\n});\r\n\r\nexport default connect(mapStateToProps)(AllCategories);","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Main\\Main.js",["500","501","502","503","504","505"],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Profile.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Authorization\\ResetPass.js",["506"],"import React, { Component } from 'react';\r\nimport * as emailValidator from 'email-validator';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport Language from '../../components/Language';\r\nimport Logo from '../../components/Logo';\r\nimport * as utils from '../../utilities/utilities';\r\nimport './Authorization.scss';\r\n\r\nclass ResetPass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputFocused: false,\r\n            showNextStep: false,\r\n            error: null,\r\n            success: false,\r\n            attempted: false,\r\n            number: false,\r\n            time: 300\r\n        }\r\n\r\n        this.phoneRef = React.createRef();\r\n        this.codeFieldRef = React.createRef();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ error: null, number: '' });\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    timerWait = () => {\r\n        if (this.state.time > 0) \r\n            this.setState((prevState) => {\r\n                return { time: prevState.time - 1 }\r\n            });\r\n    }\r\n\r\n    validate = (num, email) => {\r\n        if (num && num.length < 9) {\r\n            this.phoneRef.current.setCustomValidity('Invalid phone number');\r\n            this.setState({ error: 'Please, enter valid phone number' });\r\n            return false;\r\n        } else if (email && !emailValidator.validate(this.phoneRef.current.value)) {\r\n            this.phoneRef.current.setCustomValidity('Please, enter valid email address');\r\n            this.setState({ error: 'Please, enter valid email address' });\r\n            return false;\r\n        } else {\r\n            this.phoneRef.current.setCustomValidity('');\r\n            this.setState({ error: null });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    makeHttp = (login, query) => {\r\n        window.location.hash = '#reset';\r\n    }\r\n\r\n    onProceed = (e) => {\r\n        e.preventDefault();\r\n        const mainInput = this.phoneRef.current;\r\n        const code = this.codeFieldRef.current;\r\n\r\n        if (mainInput.value !== '') {\r\n            let isNum = utils.isNum(parseInt(mainInput.value));\r\n            if (mainInput.value.includes('+')) isNum = true;\r\n\r\n            let query = isNum ? 'phone' : 'email';\r\n            if (isNum) this.setState({ number: true });\r\n            let valid = false;\r\n            if (isNum) valid = this.validate(mainInput.value);\r\n            else valid = this.validate(null, mainInput.value);\r\n\r\n            if (!this.state.attempted) {\r\n    \r\n                if (valid) {\r\n                    const timer = setInterval(this.timerWait, 1000);\r\n                    this.setState({\r\n                        showNextStep: true,\r\n                        attempted: true\r\n                    });\r\n                }\r\n\r\n            } else if (this.state.attempted && valid) {\r\n                if (code.value !== '') this.makeHttp(mainInput.value, query);\r\n                else if (this.state.time === 0) {\r\n                    this.setState({ time: 300 });\r\n                    code.focus();\r\n                }\r\n            }\r\n        } else {\r\n            mainInput.focus();\r\n            mainInput.setCustomValidity('Please, enter your email address or phone number');\r\n            return this.setState({ error: 'Please, enter your email address or phone number' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const wrapClass = ['a__wrapper'];\r\n        if (this.state.inputFocused) wrapClass.push('a__wrapper--animate');\r\n\r\n        return (\r\n            <div className=\"a\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"a__lang\" dropClass=\"dropdown--left-fix\"/>\r\n                <form className={wrapClass.join(' ')} onClick={() => this.onFocus()}>\r\n                    <div className=\"a__head\">\r\n                        <Logo classImg=\"logo__figure--nav\" />\r\n                        <Link to=\"/signin\" className=\"a__info a__info--heading\">\r\n                            <utils.use styleClass=\"a__icon\" svg=\"log-in\" />\r\n                            Sign in\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"a__form\">\r\n                        <p className=\"a__info a__info--heading mb-1\">Reset password</p>\r\n                        {this.state.attempted && \r\n                            <p className=\"a__error a__error--success mb-2\">\r\n                                <utils.use styleClass=\"a__icon\" svg={this.state.number ? 'phone' : 'mail'} />\r\n                                The code is sent to your {this.state.number ? 'phone number' : 'email'}\r\n                            </p>\r\n                        }\r\n                        {this.state.error && <p className=\"a__error mb-1\">{this.state.error}</p>}\r\n                        <label className=\"a__label\">\r\n                            <input \r\n                                className=\"a__input a__input--res input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Your number or email\"\r\n                                ref={this.phoneRef} />\r\n                            <p className=\"a__label a__label--abs\">Your number or email</p>\r\n                        </label>\r\n                        {this.state.showNextStep && \r\n                            <React.Fragment>\r\n                                <label className=\"a__label\">\r\n                                    <input \r\n                                        className=\"a__input a__input--res input\" \r\n                                        type=\"text\" \r\n                                        placeholder=\"Enter the code\" \r\n                                        required\r\n                                        autoFocus \r\n                                        ref={this.codeFieldRef} />\r\n                                    <p className=\"a__label a__label--abs\">The code your recieved</p>\r\n                                </label>\r\n                            </React.Fragment>\r\n                        }\r\n                        <button className=\"btn btn__primary btn__primary--green a__btn\" onClick={(e) => this.onProceed(e)}>\r\n                            Reset Password\r\n                            <utils.use styleClass=\"icon ml-5 icon--8\" svg=\"key\" />\r\n                        </button>\r\n                        {!this.state.showNextStep && \r\n                            <p className=\"a__info mt-1\">Do not have an account?&nbsp;<Link to=\"/signup\" className=\"a__info--high\">Sign up</Link></p>\r\n                        }\r\n                        {(this.state.attempted && this.state.time > 0) && <p className=\"a__label a__label--timer mt-1\">You can request another code in {this.state.time}</p>}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPass);","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Promote\\Promote.js",["507","508"],"import React, { useState } from 'react';\r\nimport { FcShop, FcOk, FcPlanner, FcHighPriority } from 'react-icons/fc';\r\n\r\nimport logo from '../../assets/Без названия.png';\r\nimport * as utils from '../../utilities/utilities';\r\nimport './Promote.scss';\r\n\r\nconst Promote = (props) => {\r\n\r\n    return (\r\n        <div className=\"promote\">\r\n            <div className=\"container\">\r\n                <div className=\"promote__wrapper\">\r\n                    <div className=\"promote__head\">\r\n                        <div className=\"mb-1 d-flex ac\">\r\n                            <FcShop className=\"promote__icon mr-15\" />\r\n                            <h2 className=\"promote__heading heading heading__2\">Choose your plan</h2>\r\n                        </div>\r\n                        <p className=\"promote__text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultrices, velit condimentum tempus fringilla, mi lorem efficitur felis, venenatis sollicitudin nunc leo in arcu. Aliquam.</p>\r\n                    </div>\r\n                    <div className=\"promote__body\">\r\n                        <div className=\"promote__card\" tabIndex=\"0\">\r\n                            <div className=\"promote__card-head\">\r\n                                <figure className=\"pos-rel\">\r\n                                    <img src={logo} className=\"promote__logo\" alt=\"SBUY\" />\r\n                                    <span className=\"promote__card-title\">Basic</span>\r\n                                </figure>\r\n                            </div>\r\n                            <div className=\"promote__card-body\">\r\n                                <span className=\"promote__feature\">\r\n                                    <FcPlanner className=\"promote__icon--sm\" />\r\n                                    3 days premium plan\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcHighPriority className=\"promote__icon--sm\" />\r\n                                    Some advantage 2\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcHighPriority className=\"promote__icon--sm\" />\r\n                                    Some advantage 3\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcOk className=\"promote__icon--sm\" />\r\n                                    Some advantage 4\r\n                                </span>\r\n                            </div>\r\n                            <button className=\"btn btn__primary promote__card-btn\">\r\n                                $1.99\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"promote__card promote__card--prem\" tabIndex=\"0\">\r\n                            <div className=\"promote__card-head\">\r\n                                <figure className=\"pos-rel\">\r\n                                    <img src={logo} className=\"promote__logo\" alt=\"SBUY\" />\r\n                                    <span className=\"promote__card-title\">Advanced</span>\r\n                                </figure>\r\n                            </div>\r\n                            <div className=\"promote__card-body\">\r\n                                <span className=\"promote__feature\">\r\n                                    <FcPlanner className=\"promote__icon--sm\" />\r\n                                    14 days premium plan\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcOk className=\"promote__icon--sm\" />\r\n                                    Some advantage 2\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcOk className=\"promote__icon--sm\" />\r\n                                    Some advantage 3\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcOk className=\"promote__icon--sm\" />\r\n                                    Some advantage 4\r\n                                </span>\r\n                            </div>\r\n                            <button className=\"btn btn__secondary promote__card-btn\">\r\n                                $5.99\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"promote__card\" tabIndex=\"0\">\r\n                            <div className=\"promote__card-head\">\r\n                                <figure className=\"pos-rel\">\r\n                                    <img src={logo} className=\"promote__logo\" alt=\"SBUY\" />\r\n                                    <span className=\"promote__card-title\">Pro</span>\r\n                                </figure>\r\n                            </div>\r\n                            <div className=\"promote__card-body\">\r\n                                <span className=\"promote__feature\">\r\n                                    <FcPlanner className=\"promote__icon--sm\" />\r\n                                    7 days premium plan\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcOk className=\"promote__icon--sm\" />\r\n                                    Some advantage 2\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcHighPriority className=\"promote__icon--sm\" />\r\n                                    Some advantage 3\r\n                                </span>\r\n                                <span className=\"promote__feature\">\r\n                                    <FcOk className=\"promote__icon--sm\" />\r\n                                    Some advantage 4\r\n                                </span>\r\n                            </div>\r\n                            <button className=\"btn btn__primary promote__card-btn\">\r\n                                $3.99\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"promote__footer\">\r\n                        <button className=\"btn btn__primary btn__primary--outline\">Do not promote</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(Promote);\r\n","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\actionTypes.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Authorization\\AuthSignup.js",["509"],"import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport emailValidator from 'email-validator';\r\nimport axios from 'axios';\r\n\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport Language from '../../components/Language';\r\nimport Logo from '../../components/Logo';\r\nimport * as utils from '../../utilities/utilities';\r\nimport './Authorization.scss';\r\n\r\nclass AuthSignup extends Component {\r\n    constructor(props) { \r\n        super(props);\r\n        \r\n        this.state = {\r\n            inputFocused: false,\r\n            error: null,\r\n            success: false,\r\n            proceed: false,\r\n            verified: true,\r\n            number: ''\r\n        }\r\n\r\n        this.checkboxRef = React.createRef();\r\n        this.numInputRef = React.createRef();\r\n        this.passRef = React.createRef();\r\n        this.passConfirmRef = React.createRef();\r\n        this.nameRef = React.createRef();\r\n        this.lNameRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.location.hash = '';\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ error: null, number: '' });\r\n    }\r\n\r\n    clearErrorHighlight = () => {\r\n        this.numInputRef.current.setCustomValidity('');\r\n        this.nameRef.current.setCustomValidity('');\r\n        this.lNameRef.current.setCustomValidity('');\r\n        this.passRef.current.setCustomValidity('');\r\n        this.passConfirmRef.current.setCustomValidity('');\r\n        this.setState({ error: null });\r\n    }\r\n\r\n    validated = (filled, validNum, validPass, passwordsMatch, agree) => {\r\n\r\n        if (filled) {\r\n            if (!validNum) {\r\n                this.numInputRef.current.setCustomValidity('Invalid phone number');\r\n                this.numInputRef.current.focus();\r\n                this.setState({ error: 'Invalid phone number' });\r\n                return false;\r\n            } else if (!validPass) {\r\n                this.passRef.current.setCustomValidity('Password length is less than 6');\r\n                this.passRef.current.focus();\r\n                this.setState({ error: 'Password length must be at least 6 characters in length' });\r\n                return false;\r\n            } else if (!passwordsMatch) {\r\n                this.passRef.current.setCustomValidity('Passwords do not match');\r\n                this.passConfirmRef.current.setCustomValidity('Passwords do not match');\r\n                this.passRef.current.focus();\r\n                this.setState({ error: 'Passwords do not match' });\r\n                return false;\r\n            } else if (!agree) {\r\n                this.setState({ error: 'You you have to accept website terms of use' });\r\n                return false;\r\n            } else {\r\n                this.clearErrorHighlight();\r\n                return true;\r\n            }\r\n        } else {\r\n            this.numInputRef.current.setCustomValidity('Empty');\r\n            this.nameRef.current.setCustomValidity('Empty');\r\n            this.lNameRef.current.setCustomValidity('Empty');\r\n            this.passRef.current.setCustomValidity('Empty');\r\n            this.passConfirmRef.current.setCustomValidity('Empty');\r\n            this.nameRef.current.focus();\r\n            this.setState({ error: 'Please fill out all the fields' });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSignUp = (e) => {\r\n        e.preventDefault();\r\n        const password = this.passRef.current;\r\n        const passwordConf = this.passConfirmRef.current;\r\n\r\n        const number = this.state.number;\r\n        const lastName = this.lNameRef.current;\r\n        const name = this.nameRef.current;\r\n        \r\n        if ((password.value && passwordConf.value && number && name.value && lastName.value) !== '') {\r\n\r\n            const validNum = number.length > 7;\r\n            const validPass = password.value.length >= 6;\r\n            const passwordsMatch = passwordConf.value === password.value;\r\n\r\n            if (this.validated(true, validNum, validPass, passwordsMatch, true)) {\r\n                const data = {\r\n                    phone: number,\r\n                    password: password.value,\r\n                    // email: 'test@mail.eu',\r\n                    firstname: name.value,\r\n                    lastname: lastName.value\r\n                };\r\n                axios.post('http://api.soybaliq.uz/api/auth/register', data)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        window.location.hash = '#confirm';\r\n                    }).catch(er => {\r\n                        console.log(er);\r\n                        this.setState({ error: er.message });\r\n                    });\r\n            }\r\n        } else this.validated(false);\r\n    }\r\n\r\n    onProceed = (e) => {\r\n        e.preventDefault();\r\n        const number = this.state.number;\r\n        const agree = this.checkboxRef.current.checked;\r\n        const name = this.nameRef.current;\r\n        const lastName = this.lNameRef.current;\r\n\r\n        const validNum = number.length > 7;\r\n\r\n        if ((number && name.value && lastName.value) !== '') {\r\n\r\n            if (this.validated(true, validNum, true, true, agree)) {\r\n                console.log(number);\r\n                console.log(agree);\r\n\r\n                // ---------------------------------\r\n                \r\n                // ........\r\n                // this.props.history.push('#second-face');\r\n                window.location.hash = 'second-face';\r\n            }\r\n        } else this.validated(false);\r\n    }\r\n\r\n    onInputnumber = (val) => {\r\n        if (utils.isNum(parseInt(val)) || val === '+' || val === '') this.setState({ number: val });\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"a\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"a__lang\" dropClass=\"dropdown--left-fix\" />\r\n                <div className=\"a__wrapper a__wrapper--high\" onClick={() => this.onFocus()}>\r\n                    <div className=\"a__head\">\r\n                        <Logo classImg=\"logo__figure--nav\" />\r\n                        <Link to=\"/signin\" className=\"a__info a__info--heading\">\r\n                            <utils.use styleClass=\"a__icon\" svg=\"log-in\" />\r\n                            Sign in\r\n                        </Link>\r\n                    </div>\r\n                    {this.state.error && <p className=\"a__error mb-1\">{this.state.error}</p>}\r\n                    <form className=\"a__form\" id=\"second-face\">\r\n                        <p className=\"a__info a__info--heading mb-1\">Set your password</p>\r\n                        <label className=\"a__label\">\r\n                            <input \r\n                                className=\"a__input input\" \r\n                                type=\"password\" \r\n                                placeholder=\"Enter your password\" \r\n                                ref={this.passRef} />\r\n                            <p className=\"a__label a__label--abs\">Your password</p>\r\n                        </label>\r\n                        <label className=\"a__label\">\r\n                            <input \r\n                                className=\"a__input input\" \r\n                                type=\"password\" \r\n                                placeholder=\"Confirm your password\"\r\n                                ref={this.passConfirmRef} />\r\n                            <p className=\"a__label a__label--abs mb-2\">Confirm your password</p>\r\n                        </label>\r\n                        <button className=\"btn btn__primary a__btn mt-1 mb-1\" onClick={(e) => this.onSignUp(e)}>\r\n                            Proceed\r\n                            <utils.use styleClass=\"icon ml-5 icon--8\" svg=\"user-plus\" />\r\n                        </button>\r\n                    </form>\r\n                    <form className=\"a__form\" id=\"first-face\">\r\n                        <p className=\"a__info a__info--heading mb-1\">Sign up</p>\r\n                        <label className=\"a__label\">\r\n                            <input \r\n                                className=\"a__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"First name\"\r\n                                ref={this.nameRef} />\r\n                            <p className=\"a__label a__label--abs\">First name</p>\r\n                        </label>\r\n                        <label className=\"a__label\">\r\n                            <input \r\n                                className=\"a__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Last name\"\r\n                                ref={this.lNameRef} />\r\n                            <p className=\"a__label a__label--abs\">Last name</p>\r\n                        </label>\r\n                        <label className=\"a__label\">\r\n                            <input \r\n                                className=\"a__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Your phone number\" \r\n                                ref={this.numInputRef}\r\n                                value={this.state.number} \r\n                                onChange={(e) => this.onInputnumber(e.target.value)} />\r\n                            <p className=\"a__label a__label--abs\">Your number or email</p>\r\n                        </label>\r\n                        <div className=\"a__item\">\r\n                            <p>\r\n                                <input type=\"checkbox\" id=\"terms\" className=\"checkbox\" ref={this.checkboxRef} />\r\n                                <label htmlFor=\"terms\" className=\"label\">\r\n                                    <span></span>\r\n                                    Agree to&nbsp;\r\n                                    <Link to=\"/about#terms\" className=\"a__info--high\">website terms of use</Link>\r\n                                </label>\r\n                            </p>\r\n                        </div>\r\n                        <button className=\"btn btn__primary a__btn mb-1\" onClick={(e) => this.onProceed(e)}>\r\n                            Proceed\r\n                            <utils.use styleClass=\"icon ml-5 icon--8\" svg=\"user-plus\" />\r\n                        </button>\r\n                        <p className=\"a__info\">Existing user? <Link to=\"/signin\" className=\"a__info--high\">Sign in</Link></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AuthSignup);","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\index.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\LoadingSub.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\Dropdown.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\Backdrop.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Card.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Language.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Footer.js",["510"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Logo from '../components/Logo';\r\nimport Language from '../components/Language';\r\n\r\nimport * as utils from '../utilities/utilities';\r\n\r\nconst Footer = props => {\r\n    const { t } = useTranslation();\r\n    const year = new Date().getFullYear();\r\n\r\n    const navs = ['Help', 'Enterprise Adverts', 'Terms of use', 'Privacy Policy', 'SBUY Guide', 'Security measures', 'Site map', 'Map of regions', 'Career', 'Feedback'];\r\n\r\n    const navItems = navs.map((el, i) => {\r\n        return (\r\n            <li className=\"footer__item\" key={i}>\r\n                <Link to={`/about#${utils.slug(el)}`} className=\"footer__link\">{el}</Link>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__head\">\r\n                <div className=\"container\">\r\n                    <div className=\"footer__headwrap\">\r\n                        <div className=\"d-flex ac\">\r\n                            <utils.use styleClass=\"footer__icon\" svg=\"home\" />\r\n                            <h5 className=\"footer__heading\">{t('main.home')}</h5>\r\n                        </div>\r\n                        <Language dropClass=\"dropdown--close dropdown--right-fix\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"footer__wrapper\">\r\n                    <div className=\"footer__body\">\r\n                        <div div className=\"footer__group\">\r\n                            <Logo classOver=\"footer__logo\" />\r\n                            <ul className=\"footer__list mb-1\">\r\n                                <li className=\"footer__item\">\r\n                                    <Link to=\"about#help\" className=\"footer__link\">{t('footer.help')}</Link>\r\n                                </li>\r\n                                <li className=\"footer__item\">\r\n                                    <Link to=\"about#terms\" className=\"footer__link\">{t('footer.terms of use')}</Link>\r\n                                </li>\r\n                                <li className=\"footer__item\">\r\n                                    <Link to=\"about#eads\" className=\"footer__link\">{t('footer.enterprise ads')}</Link>\r\n                                </li>\r\n                                <li className=\"footer__item\">\r\n                                    <Link to=\"about#feedback\" className=\"footer__link\">{t('footer.feedback')}</Link>\r\n                                </li>\r\n                                <li className=\"footer__item\">\r\n                                    <Link to=\"about#regions\" className=\"footer__link\">{t('footer.map of regions')}</Link>\r\n                                </li>\r\n                                <li className=\"footer__item\">\r\n                                    <Link to=\"about#privacy\" className=\"footer__link\">{t('footer.privacy')}</Link>\r\n                                </li>\r\n                                <li className=\"footer__item\">\r\n                                    <Link to=\"about#vacancy\" className=\"footer__link\">{t('footer.career')}</Link>\r\n                                </li>\r\n                            </ul>\r\n                            <p className=\"footer__info\">\r\n                                {t('footer.contact text')}\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"footer__info\">{year} SBUY&copy;</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default React.memo(Footer);","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Modal.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Logo.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Searchbar.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Navigation\\Navigation.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Categories\\Categories.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\MobileNav\\MobileNav.js",["511"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { Link, useLocation, useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport $ from 'jquery';\r\n\r\nimport * as utils from '../../utilities/utilities';\r\nimport Logo from '../Logo';\r\nimport Language from '../Language';\r\nimport './MobileNav.scss';\r\n\r\nconst MobileNav = (props) => {\r\n    // ---------- TRANSLATIONS VIA PROPS ---------\r\n    // const t = props.base;\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [sideNav, setSideNav] = useState(false);\r\n    const [scroll, setScroll] = useState(0);\r\n    const location = useLocation();\r\n\r\n    const trackScroll = () => setScroll(document.documentElement.scrollTop);\r\n    function slideItems() {\r\n        const slideLink = Array.from(this.querySelectorAll('.modal__item--slide'));\r\n        if ($(slideLink).is(':hidden')) $(slideLink).slideDown({ duration: 250 });\r\n        else $(slideLink).slideUp({ duration: 250 });\r\n    };\r\n\r\n    useEffect(() => {\r\n        Array.from(document.querySelectorAll('.modal__item--drop')).forEach(el => {\r\n            el.addEventListener('click', slideItems);\r\n        });\r\n\r\n        document.addEventListener('scroll', trackScroll);\r\n        return () => {\r\n            document.removeEventListener('scroll', trackScroll);\r\n            Array.from(document.querySelectorAll('.modal__item--drop')).forEach(el => {\r\n                el.removeEventListener('click', slideItems);\r\n            })\r\n        } \r\n    }, []);\r\n\r\n    const prevScroll = useRef();\r\n    useEffect(() => prevScroll.current = scroll);\r\n\r\n    useEffect(() => {\r\n        setSideNav(false);\r\n        if (utils.getQueryParamValue('cat')) prevScroll.current = -1; \r\n    }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        Array.from(document.querySelectorAll('.modal__item--slide')).forEach(el => {\r\n            if ($(el).is(':visible')) $(el).slideUp();\r\n        });\r\n    }, [sideNav]);\r\n\r\n    const burgerClass = ['m-nav__burger'];\r\n    if (sideNav) {\r\n        burgerClass.push('m-nav__burger--open');\r\n        document.documentElement.style.overflow = 'hidden';\r\n    } else document.documentElement.style.overflow = 'auto';\r\n\r\n    const navBottomClass = ['m-nav__bottom'];\r\n    if (prevScroll.current < scroll) navBottomClass.push('m-nav__bottom--hide');\r\n\r\n    return (\r\n        <nav role=\"navigation\" className=\"m-nav\">\r\n            <div className={burgerClass.join(' ')}>\r\n                <div className=\"container h-100\">\r\n                    <div className=\"m-nav__head\">\r\n                        <Logo />\r\n                        <button onClick={() => setSideNav(false)}>\r\n                            <utils.use styleClass=\"icon icon--dark\" svg=\"x\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal__body\">\r\n                        <ul className=\"modal__list modal__list--wfoot\">\r\n                            <li className=\"modal__item\">\r\n                                <Link to=\"/all\" className=\"m-nav__link\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"menu\" />\r\n                                        {t('main.cats')}\r\n                                    </div>\r\n                                    <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                                </Link>\r\n                            </li>\r\n                            {props.token && \r\n                                <>\r\n                                    <li className=\"modal__item modal__item--drop\">\r\n                                        <div className=\"m-nav__link\">\r\n                                            <div className=\"d-flex ac\">\r\n                                                <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"user\" />\r\n                                                {t('nav.my profile')}\r\n                                            </div>\r\n                                            <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-down\" />\r\n                                        </div>\r\n                                        <div className=\"modal__item modal__item--slide\">\r\n                                            <Link to=\"/user/my_profile\" className=\"m-nav__link\">\r\n                                                {t('nav.main profile')}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"modal__item modal__item--slide\">\r\n                                            <Link to=\"/user/company\" className=\"m-nav__link\">\r\n                                                {t('nav.main profile')}\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"modal__item modal__item--drop\">\r\n                                        <div className=\"m-nav__link\">\r\n                                            <div className=\"d-flex ac\">\r\n                                                <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"layout\" />\r\n                                                {t('nav.my ads')}\r\n                                            </div>\r\n                                            <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-down\" />\r\n                                        </div>\r\n                                        <div className=\"modal__item modal__item--slide\">\r\n                                            <Link to=\"/user/my_ads\" className=\"m-nav__link\">\r\n                                                {t('nav.active ads')}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"modal__item modal__item--slide\">\r\n                                            <Link to=\"/user/my_ads/inactive\" className=\"m-nav__link\">\r\n                                                {t('nav.inactive ads')}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"modal__item modal__item--slide\">\r\n                                            <Link to=\"/user/my_ads/promoted\" className=\"m-nav__link\">\r\n                                                {t('nav.promoted ads')}\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"modal__item modal__item--drop\">\r\n                                        <div className=\"m-nav__link\">\r\n                                            <div className=\"d-flex ac\">\r\n                                                <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"mail\" />\r\n                                                {t('nav.messages')}\r\n                                            </div>\r\n                                            <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-down\" />\r\n                                        </div>\r\n                                        <div className=\"modal__item modal__item--slide\">\r\n                                            <Link to=\"/user/messages\" className=\"m-nav__link\">\r\n                                                {t('nav.inbox')}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"modal__item modal__item--slide\">\r\n                                            <Link to=\"/user/messages/sentbox\" className=\"m-nav__link\">\r\n                                                {t('nav.sentbox')}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"modal__item modal__item--slide\">\r\n                                            <Link to=\"/user/messages/spam\" className=\"m-nav__link\">\r\n                                                {t('nav.spam')}\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"modal__item\">\r\n                                        <Link to=\"/user/favorites\" className=\"m-nav__link\">\r\n                                            <div className=\"d-flex ac\">\r\n                                                <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"heart\" />\r\n                                                {t('nav.favorites')}\r\n                                            </div>\r\n                                            <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"modal__item\">\r\n                                        <Link to=\"/user/settings\" className=\"m-nav__link\">\r\n                                            <div className=\"d-flex ac\">\r\n                                                <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"settings\" />\r\n                                                {t('nav.settings')}\r\n                                            </div>\r\n                                            <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"modal__item\">\r\n                                        <Link to=\"/user/payments\" className=\"m-nav__link\">\r\n                                            <div className=\"d-flex ac\">\r\n                                                <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"credit-card\" />\r\n                                                {t('nav.payments')}\r\n                                            </div>\r\n                                            <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"modal__item modal__item--last\">\r\n                                        <button className=\"m-nav__link\" onClick={() => props.onLogOut()}>\r\n                                            <div className=\"d-flex ac\">\r\n                                                <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"log-out\" />\r\n                                                {t('nav.logout')}\r\n                                            </div>\r\n                                            <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                                        </button>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                            <Language />\r\n                            <li className=\"modal__item\">\r\n                                <Link to=\"/about#sitemap\" className=\"m-nav__link\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"map\" />\r\n                                        {t('nav.sitemap')}\r\n                                    </div>\r\n                                    <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"modal__item\">\r\n                                <Link to=\"/about\" className=\"m-nav__link\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.use styleClass=\"icon--7 icon--dark mr-1\" svg=\"book\" />\r\n                                        {t('nav.about')}\r\n                                    </div>\r\n                                    <utils.use styleClass=\"icon--7 icon--dark\" svg=\"chevron-right\" />\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"modal__footer\">\r\n                        <div className=\"container h-100\">\r\n                            <div className=\"d-flex ac jc h-100\">\r\n                                {!props.token \r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"m-nav__top\">\r\n                <div className=\"container h-100\">\r\n                    <div className=\"m-nav__wrapper\">\r\n                        <button className=\"m-nav__btn\" onClick={() => setSideNav(true)}>\r\n                            <utils.use styleClass=\"icon icon--dark\" svg=\"menu\" />\r\n                        </button>\r\n                        <Logo classImg=\"logo__figure--nav\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {!location.pathname.includes('post-new') &&\r\n                <div className={navBottomClass.join(' ')}>\r\n                    <div className=\"container h-100\">\r\n                        <div className=\"m-nav__wrapper\">\r\n                            {props.token \r\n                                ? <Link to=\"/user/my_profile\" className=\"m-nav__link\">\r\n                                    <utils.use styleClass=\"icon icon--dark\" svg=\"user\" />\r\n                                    {t('nav.my profile')}\r\n                                </Link>\r\n                                : <Link to=\"/signin\" className=\"m-nav__link\">\r\n                                    <utils.use styleClass=\"icon icon--dark\" svg=\"log-in\" />\r\n                                    {t('nav.signin')}\r\n                                </Link>\r\n                            }\r\n                            <button className=\"m-nav__link\">\r\n                                <utils.use styleClass=\"icon icon--dark\" svg=\"search\" />\r\n                                {t('main.search')}\r\n                            </button>\r\n                            <Link to=\"/post-new\" className=\"m-nav__link\">\r\n                                <utils.use styleClass=\"icon icon--dark\" svg=\"plus\" />\r\n                                {t('main.advert')}\r\n                            </Link>\r\n                            <Link to=\"/user/messages\" className=\"m-nav__link\">\r\n                                <utils.use styleClass=\"icon icon--dark\" svg=\"mail\" />\r\n                                {t('nav.messages')}\r\n                            </Link>\r\n                            <Link to=\"/user/favorites\" className=\"m-nav__link\">\r\n                                <utils.use styleClass=\"icon icon--dark\" svg=\"folder\" />\r\n                                {t('nav.favorites')}\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default React.memo(MobileNav);","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\transport_auto.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\utilities\\utilities.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Adview\\Adview.js",["512"],"import React, { PureComponent } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\nimport SwiperCore, { Scrollbar, Mousewheel, Pagination, Navigation } from 'swiper';\r\nimport Rating from 'react-rating';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { FaHeart, FaRegHeart } from 'react-icons/fa';\r\nimport { withTranslation } from 'react-i18next';\r\nimport axios from 'axios';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\n\r\nimport './Adview.scss';\r\nimport Error from '../ErrorPage';\r\nimport * as utils from '../../utilities/utilities';\r\nimport avatar from '../../assets/images/32.jpg';\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport Tooltip from '../../UI/Tooltip';\r\nimport LoadingScreen from '../../UI/LoadingScreen';\r\nimport LoadingSub from '../../UI/LoadingSub';\r\n\r\nSwiperCore.use([Scrollbar, Mousewheel, Pagination, Navigation]);\r\n\r\nclass Adview extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            rating: 4.5,\r\n            showNum: false,\r\n            showMessageBar: false,\r\n            rotate: null,\r\n            message: '',\r\n            fullScreen: false,\r\n            swiperBegin: true,\r\n            swiperEnd: false,\r\n            activeSwiperImage: 0,\r\n            loadingMes: false\r\n        }\r\n\r\n        this.categoryPath = `${this.props.match.params.category}/${this.props.match.params.subcategory}`;\r\n        this.id = this.props.match.params.id;\r\n\r\n        this.copyNumRef = React.createRef();\r\n        this.mesTitleRef = React.createRef();\r\n        this.fileRef = React.createRef();\r\n    }\r\n\r\n    fetchData = async () => {\r\n        try {\r\n            this.setState({ loading: true });\r\n            const data = await axios('https://jsonplaceholder.typicode.com/todos/');\r\n            setTimeout(() => {\r\n                \r\n                this.setState({ loading: false });\r\n            }, 1500);\r\n        } catch(er) {\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n\r\n        const root = document.documentElement;\r\n        root.style.setProperty('--cat-item-transition', 'none');\r\n        root.style.setProperty('--cat-item-transition-real', 'none');\r\n        root.style.overflow = 'hidden';\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.fetchData();\r\n            this.swiper.update();\r\n            const index = this.props.data.findIndex(el => el.id === this.props.match.params.id);\r\n            this.setState({ index });\r\n        }\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        if (this.swiper) this.swiper.destroy();\r\n        \r\n        const root = document.documentElement;\r\n        root.style.setProperty('--cat-item-transition', 'all .3s ease');\r\n        root.style.setProperty('--cat-item-transition-real', 'all .1s ease');\r\n        root.style.overflow = 'auto';\r\n    }\r\n\r\n    onNextImage = (img) => {\r\n        if (this.state.activeSwiperImage < img.length - 1) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage + 1 }\r\n            })\r\n        } else this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    onPrevImage = () => {\r\n        if (this.state.activeSwiperImage > 0) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage - 1 }\r\n            })\r\n        }\r\n    }\r\n\r\n    onGoFullScreen = () => this.setState({ fullScreen: true });\r\n    onCloseFullScreen = () => this.setState({ fullScreen: false });\r\n\r\n    onReachBeginSwiper = () => this.setState({ swiperBegin: true, swiperEnd: false });\r\n    onReachEndSwiper = () => this.setState({ swiperBegin: false, swiperEnd: true });\r\n\r\n    onRotate = () => {\r\n        let i = 0;\r\n        const degrees = [90, 180, 270, 360];\r\n        if (this.state.rotate) {\r\n            i = degrees.findIndex(el => el === this.state.rotate) + 1;\r\n        }\r\n        if (i > degrees.length - 1) i = 0;\r\n        this.setState({ rotate: degrees[i] });\r\n    } \r\n\r\n    onSendMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.message) {\r\n            this.mesTitleRef.current.textContent = 'Your message is sent!';\r\n            setTimeout(() => {\r\n                this.mesTitleRef.current.textContent = 'Write your message...';\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    closePopup = () => {\r\n        if (\r\n            !this.props.match.params.category &&\r\n            !this.props.match.params.subcategory\r\n            ) \r\n        {\r\n            this.props.history.goBack(); \r\n        }\r\n        else {\r\n            this.props.history.replace(`/categories/${this.categoryPath}?page=${this.props.page ? this.props.page : '1'}`);\r\n        }\r\n    }\r\n\r\n    onShowMessageBar = () => this.setState({ showMessageBar: true });\r\n    onHideMessageBar = () => this.setState({ showMessageBar: false });\r\n\r\n    onHideNum = () => this.setState({ showNum: false });\r\n    \r\n    onClickNext = () => {\r\n        if (this.state.index < this.props.data.length - 1) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index + 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/categories/${this.categoryPath}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/categories/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n    \r\n    onClickPrev = () => {\r\n        if (this.state.index > 0) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index - 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.props.match.params.category}/${this.props.match.params.subcategory}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    render() {\r\n        // Translations\r\n        const { t } = this.props;\r\n\r\n        const category = this.props.match.params.category;\r\n        const subcategory = this.props.match.params.subcategory;\r\n        const id = this.props.match.params.id;\r\n        const categories = this.props.categories || null;\r\n\r\n        let routes = null;\r\n        if (categories) {\r\n            const categoryTitle = categories[category].title;\r\n            const subcategoryTitle = categories[category].subCategories.find(el => el.val === subcategory).title;\r\n            \r\n            routes = (\r\n                <React.Fragment>\r\n                    <Link to={`/${category}`} className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{categoryTitle}</Link>\r\n                    <Link to={`/${category}/${subcategory}`} className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{subcategoryTitle}</Link>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        let rotateDegClass = '';\r\n        if (this.state.rotate) rotateDegClass = `rotate--${this.state.rotate}`;\r\n\r\n        const topGradientClass = ['adview__gradient adview__gradient--top'];\r\n        const bottomGradientClass = ['adview__gradient'];\r\n        if (this.state.swiperEnd) topGradientClass.push('adview__gradient--show');\r\n        if (this.state.swiperBegin) bottomGradientClass.push('adview__gradient--show');\r\n\r\n        const index = this.props.data.findIndex(el => el.id === id);\r\n        const ad = index !== -1 ? this.props.data[index] : null;\r\n\r\n        if (!ad) return <Error notFound />;\r\n        \r\n        const images = ad.img.map((el, i) => (\r\n            <SwiperSlide className={`adview__figmain ${rotateDegClass}`} key={i}>\r\n                <LazyLoadImage \r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className=\"adview__img\"\r\n                    src={el}\r\n                    alt={i} />\r\n            </SwiperSlide>\r\n        ));\r\n        \r\n        let adsFrom = (\r\n            <React.Fragment>\r\n                {this.props.data.map((el, i) => {\r\n                    return (\r\n                        <Link to={`/${category}/${subcategory}/${el.id}`} className=\"adview__card\" key={i}>\r\n                            <figure className=\"adview__card-figure\">\r\n                                <LazyLoadImage \r\n                                    className=\"adview__img adview__img--card\"\r\n                                    src={el.img[0]}\r\n                                    width=\"100%\"\r\n                                    height=\"100%\" />\r\n                            </figure>\r\n                            <div className=\"adview__group fdc w-max afs\">\r\n                                <span className=\"adview__subheading adview__subheading--card mb-1\">{utils.limitStrAny(el.title, 11, false)}</span>\r\n                                <span className=\"adview__title mb-5\">{el.date}</span>\r\n                                <span className=\"adview__title mb-5\">{el.location}</span>\r\n                                <span className=\"price-tag adview__card-price\">{el.price}</span>\r\n                            </div>\r\n                        </Link>\r\n                    );\r\n                })}\r\n                <button className=\"adview__card-btn\">{t('translation:main.see all')}</button>\r\n            </React.Fragment>\r\n        );\r\n\r\n        const isFavorite = this.props.favorites.findIndex(el => el === ad.id) > -1;\r\n\r\n        if (this.state.loading) return <LoadingScreen class=\"loadingScreen--abs\" />\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <header className=\"adview\">\r\n                    {this.state.fullScreen && \r\n                        <div className=\"adview__fullscreen\">\r\n                            <div className=\"container\">\r\n                                <Backdrop z={1} click={this.onCloseFullScreen} />\r\n                                <div className=\"adview__fullscreenwrap\">\r\n                                    <figure className=\"adview__figure adview__figure--full\">\r\n                                        <img src={ad.img[this.state.activeSwiperImage]} alt={ad.title} className=\"adview__img adview__img--full\" />\r\n                                    </figure>\r\n                                </div>\r\n                            </div>\r\n                            <button className=\"adview__btn adview__btn--abs adview__btn--grey adview__btn--left\" onClick={() => this.onPrevImage()}>\r\n                                <utils.use styleClass=\"icon--7\" svg=\"chevron-left\" />\r\n                            </button>\r\n                            <button className=\"adview__btn adview__btn--abs adview__btn--grey adview__btn--right\" onClick={() => this.onNextImage(ad.img)}>\r\n                                <utils.use styleClass=\"icon--7\" svg=\"chevron-right\" />\r\n                            </button>\r\n                        </div>\r\n                    }\r\n                    <Swiper \r\n                        className=\"adview__wrapper\"\r\n                        direction=\"vertical\"\r\n                        slidesPerView=\"auto\"\r\n                        freeMode\r\n                        scrollbar={{ el: '#scrollbar', draggable: true, snapOnRelease: false }}\r\n                        mousewheel\r\n                        simulateTouch={false}\r\n                        keyboard={{ enabled: true, onlyInViewport: true }}>\r\n                            <SwiperSlide className=\"adview__content\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"adview__head\">\r\n                                        <div className=\"adview__group\">\r\n                                            {routes}\r\n                                            <span className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{utils.limitStrAny(ad.title, 15, true)}</span>\r\n                                        </div>\r\n                                        <div className=\"adview__group adview__group--nav\">\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto afs\" onClick={() => this.onClickPrev()}>\r\n                                                <utils.use styleClass=\"icon--7\" svg=\"chevron-left\" />\r\n                                                {t('ad:prev ad')}\r\n                                            </button>\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto afs\" onClick={() => this.onClickNext()}>\r\n                                                {t('ad:next ad')}\r\n                                                <utils.use styleClass=\"icon--7\" svg=\"chevron-right\" />\r\n                                            </button>\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey DTool pos-rel DTool DTool--bottom no-transition\" onClick={() => this.closePopup()}>\r\n                                                <utils.use styleClass=\"icon--7\" svg=\"x\" />\r\n                                                <Tooltip>{t('translation:main.close')}</Tooltip>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"adview__main\">\r\n                                        <div className=\"adview__left\">\r\n                                            <div className=\"adview__box adview__box--main\">\r\n                                                <Swiper \r\n                                                    className=\"adview__swiper\"\r\n                                                    slidesPerView={1}\r\n                                                    navigation={{nextEl: '#right', prevEl: '#left', disabledClass: 'adview__btn--disabled'}}\r\n                                                    pagination={{ el: '.swiper-pagination' }}\r\n                                                    onSwiper={(sw) => this.swiper = sw}\r\n                                                    simulateTouch={false}\r\n                                                    preloadImages\r\n                                                    updateOnImagesReady\r\n                                                    onImagesReady={() => this.swiper.update()}\r\n                                                    onSlideChange={(sw) => this.setState({ activeSwiperImage: sw.activeIndex })}\r\n                                                    preventInteractionOnTransition={true}>\r\n                                                        {images}\r\n                                                        <button className=\"adview__btn adview__btn--abs adview__btn--left\" id=\"left\">\r\n                                                            <utils.use styleClass=\"icon--7\" svg=\"chevron-left\" />\r\n                                                        </button>\r\n                                                        <button className=\"adview__btn adview__btn--abs adview__btn--right\" id=\"right\">\r\n                                                            <utils.use styleClass=\"icon--7\" svg=\"chevron-right\" />\r\n                                                        </button>\r\n                                                        <div className=\"adview__group adview__group--abs\">\r\n                                                            <button className=\"adview__btn DTool adview__btn--rel adview__btn--abs adview__btn--corner mr-2 pos-rel no-transition\" onClick={() => this.onRotate()}>\r\n                                                                <utils.use styleClass=\"icon--7\" svg=\"rotate-cw\" />\r\n                                                                <Tooltip>{t('ad:rotate photo')}</Tooltip>\r\n                                                            </button>\r\n                                                            <button className=\"adview__btn DTool adview__btn--rel adview__btn--abs adview__btn--corner pos-rel no-transition\" onClick={() => this.onGoFullScreen()}>\r\n                                                                <utils.use styleClass=\"icon--7\" svg=\"maximize\" />\r\n                                                                <Tooltip>{t('ad:fullscreen')}</Tooltip>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"swiper-pagination\"></div>\r\n                                                </Swiper>\r\n                                                <div className=\"adview__details mb-2\">\r\n                                                    <div className=\"adview__group sb\">\r\n                                                        <div className=\"adview__headingwrap\">\r\n                                                            <h1 className=\"heading heading__1\" data-premium={ad.premium}>\r\n                                                                {ad.title}\r\n                                                                <span className=\"badge ml-1\">\r\n                                                                    {t('translation:main.premium badge')}\r\n                                                                </span>\r\n                                                            </h1>\r\n                                                            <div className=\"adview__subheading mb-1\">\r\n                                                                <p className=\"adview__item adview__item--location\">{ad.date}, {ad.location}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"adview__group sb afe\">\r\n                                                        <div>\r\n                                                            <p className=\"price-tag adview__item adview__item--price\">{ad.price}</p>\r\n                                                        </div>\r\n                                                        <div className=\"adview__group\">\r\n                                                            <button className=\"adview__btn adview__btn--rel DTool pos-rel no-transition\">\r\n                                                                <utils.use styleClass=\"icon--7\" svg=\"share\" />\r\n                                                                <Tooltip>{t('ad:share')}</Tooltip>\r\n                                                            </button>\r\n                                                            <button \r\n                                                                className=\"adview__btn adview__btn--rel DTool pos-rel no-transition\" \r\n                                                                data-favorite={isFavorite} \r\n                                                                onClick={() => this.props.onSetFavorites(ad.id)}>\r\n                                                                    {isFavorite\r\n                                                                        ? <FaHeart className=\"icon--7\" />\r\n                                                                        : <FaRegHeart className=\"icon--7\" />\r\n                                                                    }\r\n                                                                    <Tooltip>{!isFavorite ? t('translation:main.add to fav') : t('translation:main.remove from fav')}</Tooltip>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"adview__box adview__box--description\">\r\n                                                <div className=\"adview__description-head\">\r\n                                                    <h2 className=\"heading heading__2 d-flex\">{t('ad:description')}</h2>\r\n                                                    <p className=\"adview__title\">{t('ad:num views')}: 153&nbsp;&nbsp;|&nbsp;&nbsp;{t('ad:edited at')} 13:16</p>\r\n                                                </div>\r\n                                                <div className=\"adview__group fdc afs mb-1\">\r\n                                                    <p className=\"heading heading__5 mb-1\">{t('ad:specs')}:</p>\r\n                                                    <ul className=\"adview__group adview__group--wrap\">\r\n                                                        <li className=\"tag tag__types mb-1\">Camera: 100MP</li>\r\n                                                        <li className=\"tag tag__types mb-1\">CPU: Snapdragon 865</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Battery: 5000mAh</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Condition: New</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Color: Grey</li>\r\n                                                        <li className=\"tag tag__types mb-1\">ROM: 128GB</li>\r\n                                                        <li className=\"tag tag__types mb-1\">RAM: 8GB</li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div className=\"adview__group fdc afs\">\r\n                                                    <p className=\"heading heading__5 mb-1\">{t('ad:personalized des')}:</p>\r\n                                                    <p className=\"adview__text\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras viverra odio vel risus consequat feugiat. Vivamus nec lorem auctor felis suscipit ullamcorper sit amet non orci. Sed ornare justo eu arcu convallis venenatis. Sed luctus maximus viverra. Nullam sit amet urna fermentum, dignissim urna semper, auctor mi. Mauris pulvinar porta augue, sodales ultricies urna placerat vitae.\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"adview__right\">\r\n                                            <div className=\"adview__box adview__box--user\">\r\n                                                <figure className=\"adview__figure adview__item\">\r\n                                                    <img className=\"adview__img\" src={avatar} alt={ad.id} />\r\n                                                </figure>\r\n                                                <Link to=\"/user/john_doe\" className=\"adview__item adview__item--name anim-link pos-rel no-transition\">John Doe</Link>\r\n                                                <span className=\"adview__item adview__item--titled\">\r\n                                                    <span className=\"adview__title mb-5\">Enterprise</span>\r\n                                                    <Link to=\"/company\" className=\"adview__item adview__item--lined\">Intech Ltd.</Link>\r\n                                                </span>\r\n                                                <span className=\"adview__item adview__item--titled\">\r\n                                                    <span className=\"adview__title mb-5\">Reviews:</span> \r\n                                                    <span className=\"adview__item\">\r\n                                                        <Rating \r\n                                                            className=\"adview__item--ratingbar\"\r\n                                                            initialRating={this.state.rating} \r\n                                                            fractions={2} \r\n                                                            emptySymbol={<utils.useStars styleClass=\"rating\" svg=\"star-empty\" />}\r\n                                                            fullSymbol={<utils.useStars styleClass=\"rating rating--fill\" svg=\"star-full\" />}\r\n                                                            onChange={(r) => this.setState({ rating: r })} />\r\n                                                        <span>{(Math.round(this.state.rating * 100) / 100).toFixed(1)}</span>\r\n                                                    </span>\r\n                                                </span>\r\n                                                <div className=\"adview__item pos-rel no-transition\">\r\n                                                    <button className=\"adview__btn--main btn btn__primary\" onClick={() => this.setState({ showNum: true })}>\r\n                                                        {t('ad:phone number')}\r\n                                                        <utils.use styleClass=\"icon--7 ml-5\" svg=\"phone-outgoing\" />\r\n                                                    </button>\r\n                                                    {this.state.showNum && \r\n                                                        <React.Fragment>\r\n                                                            <Backdrop z={98} click={this.onHideNum} />\r\n                                                            <Tooltip class=\"adview__numbox\" click={this.onHideNum}>\r\n                                                                <span className=\"adview__number\">+684 655985 2656</span>\r\n                                                                <button className=\"adview__btn adview__btn--clip ml-1\" onClick={() => utils.onCopyToClipboard('+684 655985 2656')} title=\"Copy number\">\r\n                                                                    <utils.use styleClass=\"icon--7\" svg=\"clipboard\" />\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                </div>\r\n                                                <button className=\"adview__btn--main adview__item btn btn__secondary\" onClick={() => this.onShowMessageBar()}>\r\n                                                    {t('translation:input.write message')}\r\n                                                    <utils.use styleClass=\"icon--7 ml-5\" svg=\"edit-2\" />\r\n                                                </button>\r\n                                            </div>\r\n                                            {this.state.showMessageBar && \r\n                                                <div className=\"adview__box adview__box--message\">\r\n                                                    {this.state.loadingMes\r\n                                                        ? <LoadingSub class=\"loader--mid\" />\r\n                                                        : <>\r\n                                                            <div className=\"d-flex ac sb w-100 mb-1\">\r\n                                                                <p className=\"adview__title\" ref={this.mesTitleRef}>{t('translation:input.write your message')}</p>\r\n                                                                <button className=\"adview__btn adview__btn--sm adview__btn--rel pos-rel\" onClick={() => this.onHideMessageBar()}>\r\n                                                                    <utils.use styleClass=\"icon--7\" svg=\"x\" />\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            <form className=\"d-flex fdc w-100\" onSubmit={(e) => this.onSendMessage(e)}>\r\n                                                                <div className=\"d-flex fdc afs mb-1\">\r\n                                                                    <textarea \r\n                                                                        autoFocus \r\n                                                                        required \r\n                                                                        className=\"adview__input mr-5\" \r\n                                                                        placeholder=\"Message...\" \r\n                                                                        type=\"text\" \r\n                                                                        onChange={(e) => this.setState({ message: e.target.value })} \r\n                                                                        value={this.state.message} />\r\n                                                                    {this.state.message !== '' && \r\n                                                                        <span className=\"adview__title mt-1\">\r\n                                                                            {300 - this.state.message.length} characters left\r\n                                                                        </span>\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div className=\"d-flex\">\r\n                                                                    <input className=\"d-none\" type=\"file\" ref={this.fileRef} />\r\n                                                                    <button \r\n                                                                        type=\"button\" \r\n                                                                        className=\"btn btn__primary btn__primary--outline mr-5 w-50\"\r\n                                                                        onClick={() => this.fileRef.current.click()}>\r\n                                                                        Attach\r\n                                                                        <utils.use styleClass=\"icon--7 icon ml-5\" svg=\"paperclip\" />\r\n                                                                    </button>\r\n                                                                    <button type=\"submit\" className=\"btn btn__primary btn__primary--outline w-50\">\r\n                                                                        Send\r\n                                                                        <utils.use styleClass=\"icon--7 icon ml-5\" svg=\"send\" />\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </form>\r\n                                                        </>\r\n                                                    }\r\n                                                </div>\r\n                                            }\r\n                                            <Swiper\r\n                                                className=\"adview__cardscontainer\"\r\n                                                direction=\"vertical\"\r\n                                                slidesPerView=\"auto\"\r\n                                                freeMode\r\n                                                mousewheel\r\n                                                nested\r\n                                                simulateTouch={false}\r\n                                                keyboard={{ enabled: true, onlyInViewport: true }}\r\n                                                onReachBeginning={() => this.onReachBeginSwiper()}\r\n                                                onReachEnd={() => this.onReachEndSwiper()}\r\n                                                scrollbar={{ el: '#scrollbar-2', draggable: true, snapOnRelease: false }}\r\n                                                >\r\n                                                <span className={topGradientClass.join(' ')}></span>\r\n                                                <span className={bottomGradientClass.join(' ')}></span>\r\n                                                <SwiperSlide className=\"adview__cards\">\r\n                                                    {adsFrom}\r\n                                                </SwiperSlide>\r\n                                                <div className=\"swiper-scrollbar\" id=\"scrollbar-2\"></div>\r\n                                            </Swiper>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        <div className=\"swiper-scrollbar\" id=\"scrollbar\"></div>\r\n                    </Swiper>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default \r\n    withRouter(\r\n        React.memo(\r\n            withTranslation(['ad', 'translation'])(Adview)\r\n        )\r\n    );","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Settings.js",["513"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport * as utils from '../../utilities/utilities';\r\nimport LoadingSub from '../../UI/LoadingSub';\r\nimport RegionsDropdown from '../../components/RegionsDropdown';\r\n\r\nconst Settings = (props) => {\r\n    const { t } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    const [passTime, setPassTime] = useState('05.07.2021 16:43');\r\n    const [region, setRegion] = useState('toshkent');\r\n\r\n    const passwordOldInputRef = useRef();\r\n    const passwordInputRef = useRef();\r\n    const passwordConfirmInputRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n    const prevRegionRef = useRef();\r\n    useEffect(() => prevRegionRef.current = region);\r\n    const prevRegion = prevRegionRef.current;\r\n\r\n    const onTogglePass = (e) => {\r\n        if (passwordInputRef.current.value !== '') {\r\n            if (passwordInputRef.current.type === 'password') passwordInputRef.current.type = 'text';\r\n            else passwordInputRef.current.type = 'password';\r\n        }\r\n    };\r\n\r\n    const onDiscardChanges = () => {\r\n        setRegion(prevRegion);\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onSaveChanges = () => {\r\n        const old = passwordOldInputRef.current;\r\n        const newP = passwordInputRef.current;\r\n        const conf = passwordConfirmInputRef.current;\r\n\r\n        if (old.value !== '') {\r\n            if ((newP.value && conf.value) !== '') {\r\n                if (newP.value.length >= 6) {\r\n                    if (newP.value === conf.value) {\r\n                        clearErrorHighlight();\r\n\r\n                        // ------------------------\r\n\r\n\r\n                        // ........\r\n                        const d = new Date();\r\n\r\n                        let month = d.getMonth()+1;\r\n                        if (month < 10) month = `0${month}`;\r\n                        \r\n                        setPassTime(`${d.getDate()}.${month}.${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`);\r\n                        setEditMode(false);\r\n                        \r\n                    } else {\r\n                        newP.setCustomValidity('error');\r\n                        conf.setCustomValidity('error');\r\n                        setError(t('error.password match'));\r\n                        newP.focus();\r\n                    }\r\n                } else {\r\n                    newP.focus();\r\n                    setError(t('error.password weak'));\r\n                }\r\n\r\n            } else {\r\n                newP.setCustomValidity('error');\r\n                conf.setCustomValidity('error');\r\n                setError(t('error.enter new password'));\r\n                newP.focus();\r\n            }\r\n        } else setEditMode(false);\r\n    };\r\n\r\n    function clearErrorHighlight() {\r\n        passwordInputRef.current.setCustomValidity('');\r\n        passwordOldInputRef.current.setCustomValidity('');\r\n        passwordConfirmInputRef.current.setCustomValidity('');\r\n        setError(null);\r\n    };\r\n\r\n    let regionTitle = null;\r\n    if (props.regions) {\r\n        regionTitle = props.regions.find(el => el.val === region).title;\r\n    }\r\n\r\n    let regionView = <span className=\"heading heading__5 profile__main-text\">{t('main.region')}, {regionTitle}</span>;\r\n    if (editMode) {\r\n        regionView = (\r\n            <React.Fragment>\r\n                <span className=\"profile__title\">{t('main.region')}</span>\r\n                <div className=\"pos-rel\">\r\n                    <div \r\n                        className=\"profile__input profile__input--reg input\" \r\n                        tabIndex=\"0\"\r\n                        onClick={() => setModal(true)}>\r\n                        {regionTitle}\r\n                    </div>\r\n                    <RegionsDropdown \r\n                        click={(reg) => {\r\n                            setRegion(reg);\r\n                            setModal(false);\r\n                        }} \r\n                        class=\"dropdown--full dropdown--left-fix profile__reg-dropdown dropdown--close\"\r\n                        show={modal}\r\n                        close={() => setModal(false)} />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    let passView = <span className=\"heading heading__5 profile__main-text\">Password was last changed on {passTime}</span>;\r\n    if (editMode) {\r\n        passView = (\r\n            <React.Fragment>\r\n                {error && \r\n                    <div className=\"profile__text profile__text--error fdr ac\">\r\n                        <utils.use styleClass=\"profile__icon icon--red mr-5\" svg=\"alert-triangle\" />\r\n                        {error}\r\n                    </div>\r\n                }\r\n                <p className=\"profile__ad-details mb-2\">If you do not want to change the password leave the fields empty.</p>\r\n                <p className=\"profile__text\">\r\n                    <label className=\"profile__title\">Enter your old password</label>\r\n                    <input className=\"profile__input input\" type=\"password\" placeholder=\"Old password\" ref={passwordOldInputRef} />\r\n                </p>\r\n                <div className=\"profile__text\">\r\n                    <label className=\"profile__title\">New password</label>\r\n                    <label className=\"pos-rel\">\r\n                        <input className=\"profile__input input\" type=\"password\" placeholder=\"New password\" ref={passwordInputRef} minLength=\"6\" />\r\n                        <button className=\"profile__btn profile__btn--abs\" onClick={(e) => onTogglePass(e)}>\r\n                            <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"eye-off\" />\r\n                        </button>\r\n                    </label>\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <label className=\"profile__title\">Confirm password</label>\r\n                    <input className=\"profile__input input\" type=\"password\" placeholder=\"Confirm password\" ref={passwordConfirmInputRef} />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Settings</h2>\r\n                {!editMode && <button className=\"profile__btn profile__btn--rounded\" onClick={() => setEditMode(true)}>\r\n                    <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"edit-2\" />\r\n                </button>}\r\n                {editMode && <button className=\"profile__btn profile__btn--rounded\" onClick={() => onDiscardChanges()}>\r\n                    <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"x\" />\r\n                </button>}\r\n            </div>\r\n            <div className=\"profile__content fdc\">\r\n                {regionView}\r\n            </div>\r\n            <div className=\"profile__content profile__content--mid fdc\">\r\n                {passView}\r\n            </div>\r\n            {editMode && \r\n                <React.Fragment>\r\n                    <div className=\"profile__content profile__content--mid\">\r\n                        <div className=\"profile__text m-0\">\r\n                            <label className=\"profile__title mb-1\">Change email address</label>\r\n                            <input className=\"profile__input input\" type=\"text\" placeholder=\"Email address\" ref={emailInputRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile__footer mt-15\">\r\n                        {loading && <LoadingSub />}\r\n                        <button className=\"ml-2 btn btn__primary btn__primary--outline\" onClick={() => onSaveChanges()}>\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n            {!editMode &&\r\n                <div className=\"profile__content profile__content--mid\">\r\n                    <span className=\"heading heading__5 profile__main-text\">Email, johndoe@mail.eu</span>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Settings;","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Messages.js",["514","515","516","517","518","519","520","521","522"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FcFeedback, FcFaq, FcEmptyTrash } from 'react-icons/fc';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport * as utils from '../../utilities/utilities';\r\nimport LoadingScreen from '../../UI/LoadingScreen';\r\nimport Placeholder from './Placeholder';\r\n\r\nexport const Conversation = ({ t }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const [messagesAll, setMessagesAll] = useState([\r\n        {mes: 'Hola', from: true},\r\n        {mes: 'Hello', from: true},\r\n        {mes: 'Hola Receiver', from: true}\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios('https://jsonplaceholder.typicode.com/todos?limit=10')\r\n            .then((res) => {\r\n                // setMessagesAll(res.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(er => {\r\n                \r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const messages = messagesAll.map((el, i) => (\r\n        <div key={i} className=\"profile__message-buble profile__message-buble--receiver\">{el.mes}</div>\r\n    ));\r\n\r\n    if (loading) return <LoadingScreen class=\"loadingScreen--profile\" />;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Scrollbars className=\"profile__chat\">\r\n                <div className=\"profile__chat-area\">\r\n                    {messages}\r\n                </div>\r\n            </Scrollbars>\r\n            <div className=\"profile__sendbox\">\r\n                <textarea \r\n                    className=\"profile__textarea\" \r\n                    onChange={(e) => setMessage(e.target.value)} \r\n                    value={message} />\r\n                <button className=\"btn btn__secondary btn__secondary--outline profile__btn-send\">\r\n                    {t('ad:send')}\r\n                    <utils.use styleClass=\"icon--7 icon--dark ml-5\" svg=\"send\" />\r\n                </button>\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport const Inbox = ({ t }) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios('https://jsonplaceholder.typicode.com/todos')\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000);\r\n            })\r\n            .catch(er => {\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    if (loading) return <LoadingScreen class=\"loadingScreen--profile\" />;\r\n\r\n    let view = null;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">{t('translation:nav.inbox')}</h2>\r\n            </div>\r\n            {view}\r\n            <ul className=\"profile__messages-list\">\r\n                <Route path=\"/user/messages/conversation/:id\">\r\n                    <Conversation />\r\n                </Route>\r\n                <li className=\"profile__messages-item\">\r\n                    <Link to={`/user/messages/conversation/123`} className=\"profile__messages-link\">\r\n                        <span className=\"profile__messages-text profile__messages-text--name\">Someone</span>\r\n                        <span className=\"profile__messages-text\">{utils.limitStrAny('Some message from someone regjrengjkerngjsjgn jdgnjdkn', 20, true)}</span>\r\n                    </Link>\r\n                    <div className=\"profile__messages-btn\">\r\n                        <button className=\"profile__btn profile__btn--control\">\r\n                            <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"trash-2\" />\r\n                            <span className=\"profile__btn-title\">{t('ad:add spam')}</span>\r\n                        </button>\r\n                        <button className=\"profile__btn profile__btn--control\">\r\n                            <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"edit\" />\r\n                            <span className=\"profile__btn-title\">{t('ad:spam')}</span>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport const Sentbox = ({ t }) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios('https://jsonplaceholder.typicode.com/todos')\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000);\r\n            })\r\n            .catch(er => {\r\n                \r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    if (loading) return <LoadingScreen class=\"loadingScreen--profile\" />;\r\n    \r\n    let view = null;\r\n    if (true) {\r\n        view = (\r\n            <div className=\"profile__empty\">\r\n                <div>\r\n                    <FcFaq className=\"profile__icon--large mb-1\" />\r\n                    Nothing here to display\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">{t('translation:nav.sentbox')}</h2>\r\n            </div>\r\n            <div className=\"profile__content\">\r\n                {view}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport const Spam = ({ t }) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios('https://jsonplaceholder.typicode.com/todos')\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000);\r\n            })\r\n            .catch(er => {\r\n                \r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    if (loading) return <LoadingScreen class=\"loadingScreen--profile\" />;\r\n\r\n    let view = null;\r\n    if (true) return <Placeholder />\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">{t('tranlsation:nav.spam')}</h2>\r\n            </div>\r\n            <div className=\"profile__content\">\r\n                {view}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Payments.js",["523","524"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FcMoneyTransfer } from 'react-icons/fc';\r\n\r\nimport LoadingScreen from '../../UI/LoadingScreen';\r\n\r\nconst Payments = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios('https://jsonplaceholder.typicode.com/todos')\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000);\r\n            })\r\n            .catch(er => {\r\n                \r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    if (loading) return <LoadingScreen class=\"loadingScreen--profile\" />;\r\n    let view = null;\r\n    if (true) {\r\n        view = (\r\n            <div className=\"profile__empty\">\r\n                <div>\r\n                    <FcMoneyTransfer className=\"profile__icon--large mb-1\" />\r\n                    No payments were made\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Payments</h2>\r\n                <h5 className=\"heading heading__5\">Total balance: 1561,56 som</h5>\r\n            </div>\r\n            <div className=\"profile__content\">\r\n                {view}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Payments;","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Favourites.js",["525","526"],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\MobileCats\\MobileCats.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\CategoriesFull\\CategoriesFull.js",["527"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport * as utils from '../../utilities/utilities';\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport './CategoriesFull.scss';\r\n\r\nconst CategoriesFull = (props) => {\r\n    const [activeCat, setActiveCat] = useState(null);\r\n    const history = useHistory();\r\n\r\n    const onClickMainCat = (id) => {\r\n        if (props.clickMain) props.clickMain(id);\r\n        setActiveCat(id);\r\n    };\r\n\r\n    const onClickSubCat = (sub) => {\r\n        if (props.clickSub) props.clickSub(sub);\r\n        else history.push(`/categories/${props.categories[activeCat].val}/${sub}`);\r\n        props.close();\r\n    };\r\n\r\n    let catItems = null,\r\n        subItems = null;\r\n    if (props.categories) {\r\n        const catsArr = [];\r\n        for (let key in props.categories) {\r\n            catsArr.push({\r\n                id: key,\r\n                title: props.categories[key].title,\r\n                icon: props.categories[key].icon\r\n            });\r\n        }\r\n\r\n        catItems = catsArr.map((el, i) => {\r\n            return (\r\n                <li \r\n                    className=\"cats-full__item\" \r\n                    key={i} \r\n                    onClick={() => onClickMainCat(el.id)}\r\n                    tabIndex=\"0\">\r\n                        <utils.useCat styleClass=\"cats-full__i\" svg={el.icon} />\r\n                        {el.title}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        if (activeCat) {\r\n            subItems = props.categories[activeCat].subCategories.map((el, i) => {\r\n                return (\r\n                    <li \r\n                        tabIndex=\"0\" \r\n                        className=\"cats-full__pop-item\" \r\n                        onClick={() => onClickSubCat(el.val)} \r\n                        key={i}>\r\n                            <utils.use styleClass=\"icon icon--dark mr-5\" svg=\"chevron-right\" />\r\n                            {el.title}\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cats-full\">\r\n            <div className=\"container\">\r\n                <Backdrop z={1} click={props.close} class=\"backdrop--white\" />\r\n                <div className=\"cats-full__wrapper\">\r\n                    <ul className=\"cats-full__list\">\r\n                        {catItems}\r\n                    </ul>\r\n                    {activeCat && \r\n                        <>\r\n                            <Backdrop z={1} click={() => setActiveCat(null)} />\r\n                            <div className=\"cats-full__pop\">\r\n                                <div className=\"cats-full__pop-head\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.useCat styleClass=\"cats-full__i--lg mr-15\" svg={props.categories[activeCat].icon} />\r\n                                        <span className=\"heading__4 m-0\">{props.categories[activeCat].title}</span>\r\n                                    </div>\r\n                                    <button className=\"\" onClick={() => setActiveCat(null)}>\r\n                                        <utils.use styleClass=\"icon icon--dark\" svg=\"x\" />\r\n                                    </button>\r\n                                </div>\r\n                                <ul className=\"cats-full__list cats-full__list--pop\">\r\n                                    {subItems}\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(CategoriesFull);","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Main.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\real_estate.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\pets.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\sports_hobby_and_comfort.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\home_and_garden.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\fashion_and_style.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\for_kids.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\electronics.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\jobs.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\uz\\business_and_services.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Ads\\Ads.js",["528","529","530","531","532","533","534","535","536","537","538"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { FcTemplate, FcPackage, FcPositiveDynamic } from 'react-icons/fc';\r\n\r\nimport * as utils from '../../../utilities/utilities.js';\r\nimport LoadingScreen from '../../../UI/LoadingScreen';\r\nimport { AdsCard } from './AdCard';\r\n\r\nconst ActiveAds = React.memo((props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios('https://jsonplaceholder.typicode.com/todos')\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000);\r\n            })\r\n            .catch(er => {\r\n                \r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const onDeactivate = (id) => {\r\n\r\n        // ----------------------\r\n\r\n        // .....\r\n    }\r\n\r\n    const ads = props.data.map((el, i) => <AdsCard el={el} view=\"active\" key={el.id} />);\r\n\r\n    if (loading) return <LoadingScreen class=\"loadingScreen--profile\" />;\r\n\r\n    let view = ads;\r\n    if (false) {\r\n        view = (\r\n            <div className=\"profile__empty\">\r\n                <div>\r\n                    <FcTemplate className=\"profile__icon--large mb-1\" />\r\n                    Nothing here to display\r\n                    <Link className=\"btn btn__white mt-2\" to=\"/post-new\">\r\n                        <utils.use styleClass=\"icon icon--dark mr-5\" svg=\"plus\" />\r\n                        Post ad\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Active Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {view}\r\n            </div>\r\n        </React.Fragment>      \r\n    )\r\n});\r\n\r\nconst InactiveAds = React.memo((props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios('https://jsonplaceholder.typicode.com/todos')\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000);\r\n            })\r\n            .catch(er => {\r\n                \r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const onActivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const onRemove = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const ads = props.data.map((el, i) => <AdsCard el={el} view=\"inactive\" key={el.id} />);\r\n\r\n    if (loading) return <LoadingScreen class=\"loadingScreen--profile\" />;\r\n\r\n    let view = ads;\r\n    if (true) {\r\n        view = (\r\n            <div className=\"profile__empty\">\r\n                <div>\r\n                    <FcPackage className=\"profile__icon--large\" />\r\n                    Nothing here to display\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Inactive Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {view}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nconst PromotedAds = React.memo((props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios('https://jsonplaceholder.typicode.com/todos')\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 2000);\r\n            })\r\n            .catch(er => {\r\n                \r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const onDeactivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const onActivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n    \r\n    const ads = props.data.filter(el => el.premium === true).map(el => <AdsCard el={el} view=\"active\" key={el.id} />);\r\n    \r\n    if (loading) return <LoadingScreen class=\"loadingScreen--profile\" />;\r\n\r\n    let view = ads;\r\n    if (true) {\r\n        view = (\r\n            <div className=\"profile__empty\">\r\n                <div>\r\n                    <FcPositiveDynamic className=\"profile__icon--large mb-1\" />\r\n                    Nothing here to display\r\n                    <Link to=\"/ads/promote\" className=\"btn btn__white mt-2\">\r\n                        <utils.use styleClass=\"icon icon--dark mr-1\" svg=\"trending-up\" />\r\n                        Promote\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Promoted Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {view}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nexport { ActiveAds, InactiveAds, PromotedAds };\r\n","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\Filters\\Filters.js",["539","540"],"import React, { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport Dropdown from '../../UI/Dropdown';\r\nimport * as actions from '../../store/actions';\r\nimport * as utils from '../../utilities/utilities';\r\nimport axios from 'axios';\r\nimport LoadingSub from '../../UI/LoadingSub';\r\nimport './Filters.scss';\r\n\r\nclass Filter extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n\r\n            sort: [\r\n                { title: 'Most expensive', val: 'exp' },\r\n                { title: 'Cheapest', val: 'cheap' },\r\n                { title: 'Date', val: 'date' }\r\n            ],\r\n            // -------------------------\r\n            condition: 'all',\r\n            size: ['', ''],\r\n            price: ['', ''],\r\n            type: 'all'\r\n        }\r\n    }\r\n\r\n    onFilterByCounter = (param, subParam, val) => {\r\n        if (utils.isNum(parseInt(val)) || val === '') {\r\n            this.props.onFilterByCountersDispatch(param, subParam, val);\r\n        }\r\n    }\r\n\r\n    onClearFilters = () => {\r\n        \r\n    }\r\n\r\n    onFilterByOptions = (param, val) => {\r\n        if (this.props[param] !== val) this.props.onFilterByOptionsDispatch(param, val);\r\n        console.log(this.props[param]);\r\n    }\r\n\r\n    render() {\r\n        // ---------- TRANSLATIONS VIA PROPS ---------\r\n        const { t } = this.props;\r\n\r\n        const category = this.props.match.params.category;\r\n        const subcategory = this.props.match.params.subcategory;\r\n        \r\n        const sortTitle = this.state.sort.find(el => el.val === this.props.sort).title; \r\n\r\n        let subCatItems = null, \r\n            counters = null, \r\n            subCatTitle = null,\r\n            catTitle = null;\r\n        \r\n        const filter = this.props.filtersList[category];\r\n        \r\n        if (filter) {\r\n            subCatItems = filter.items[subcategory].sub.map((obj, index) => {\r\n\r\n                const innerItems = obj.items.map((el, i) => {\r\n                    return (\r\n                        <div className=\"f__dropitem\" key={i} onClick={() => this.onFilterByOptions(obj.val, el.val)}>{el.title}</div>\r\n                    );\r\n                });\r\n\r\n                const defaultTitle = obj.items.find(el => el.val === this.props[obj.val]).title;\r\n\r\n                return (\r\n                    <li className=\"f__item\" key={index}>\r\n                        <p className=\"heading__sm\">{obj.title}</p>\r\n                        <div>\r\n                            <div className=\"f__input f__input--d input\" tabIndex=\"0\">\r\n                                {defaultTitle}\r\n                                <utils.use styleClass=\"f__icon f__icon--arrow\" svg=\"chevron-down\" />\r\n                            </div>\r\n                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s f__dropdown\">\r\n                                {innerItems}\r\n                            </Dropdown>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            });\r\n        \r\n            counters = filter.items[subcategory].counters.map((el, i) => {\r\n                return (\r\n                    <li className=\"f__item\" key={i}>\r\n                        <p className=\"heading__sm\">{el.title}</p>\r\n                        <div className=\"f__group\">\r\n                            <label className=\"f__label\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"f__input f__input--small input\" \r\n                                    placeholder=\"from\" \r\n                                    onChange={(e) => this.onFilterByCounter(el.val, el.start, e.target.value)} \r\n                                    value={this.props[el.val][el.start]} />\r\n                                <button className=\"f__btn f__btn--abs\" onClick={() => this.onFilterByCounter(el.val, el.start, '')}>\r\n                                    <utils.use styleClass=\"f__icon f__icon--arrow\" svg=\"x\" />\r\n                                </button>\r\n                            </label>\r\n                            <label className=\"f__label\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"f__input f__input--small f__input--border input\" \r\n                                    placeholder=\"to\" \r\n                                    onChange={(e) => this.onFilterByCounter(el.val, el.end, e.target.value)} \r\n                                    value={this.props[el.val][el.end]} />\r\n                                <button className=\"f__btn f__btn--abs\" onClick={() => this.onFilterByCounter(el.val, el.end, '')}>\r\n                                    <utils.use styleClass=\"f__icon f__icon--arrow\" svg=\"x\" />\r\n                                </button>\r\n                            </label>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            });\r\n        \r\n            catTitle = filter.title;\r\n            subCatTitle = filter.items[subcategory].title;\r\n\r\n            \r\n        } else if (this.state.loading) {\r\n            return (\r\n                <div className=\"loading-center w-100 f__loading\">\r\n                    <LoadingSub />\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        const sortItems = this.state.sort.map((el, i) => <div className=\"f__dropitem\" key={i} onClick={() => this.onFilterByOptions('sort', el.val)}>{el.title}</div>);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"f\">\r\n                    <div className=\"container\">\r\n                        <div className=\"f__wrapper\">\r\n                            <div className=\"f__list f__list--headline\">\r\n                                <h3 className=\"heading heading__3 f__heading\">{t('main.filters')}</h3>\r\n                                <div className=\"f__group\">\r\n                                    <button className=\"f__btn f__btn--close btn__sub\" onClick={() => this.onClearFilters()}>\r\n                                        {t('main.clear')}\r\n                                        <utils.use styleClass=\"f__icon ml-5\" svg=\"x\" />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"f__list f__list--midline\">\r\n                                {counters}\r\n                                {subCatItems}\r\n                                <li className=\"f__item\">\r\n                                    <p className=\"heading__sm\">{t('main.sort')}</p>\r\n                                    <div>\r\n                                        <div className=\"f__input f__input--d input\" tabIndex=\"0\">\r\n                                            {sortTitle}\r\n                                            <utils.use styleClass=\"f__icon f__icon--arrow\" svg=\"chevron-down\" />\r\n                                        </div>\r\n                                        <Dropdown class=\"dropdown--full dropdown--sm-s dropdown--close f__dropdown\">\r\n                                            {sortItems}\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"f__topline\">\r\n                    <div className=\"container\">\r\n                        <div className=\"f__list f__list--headline f__list--stickline\">\r\n                            <ul className=\"f__group\">\r\n                                <li className=\"tag tag__types f__item--tags mr-15\">\r\n                                    <Link to=\"/\" className=\"f__link f__link--tags\">Lalaku</Link>\r\n                                </li>\r\n                                <li className=\"tag tag__types f__item--tags mr-15\">\r\n                                    <Link to=\"/\" className=\"f__link f__link--tags\">Baby jackets</Link>\r\n                                </li>\r\n                                <li className=\"tag tag__types f__item--tags f__item--active mr-15\">\r\n                                    <Link to=\"/\" className=\"f__link f__link--tags\">Baby Jeans</Link>\r\n                                </li>\r\n                                <li className=\"tag tag__types f__item--tags mr-15\">\r\n                                    <Link to=\"/\" className=\"f__link f__link--tags\">Carriages</Link>\r\n                                </li>\r\n                                <li className=\"tag tag__types f__item--tags\">\r\n                                    <Link to=\"/\" className=\"f__link f__link--tags\">Toys</Link>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"f__group f__group--breadc h-100\">\r\n                                <Link to=\"/\" className=\"f__link f__link--route\">{t('main.filters')}</Link>\r\n                                <span className=\"f__link f__link--route\">&bull;</span>\r\n                                <Link to={'/' + category} className=\"f__link f__link--route\">{catTitle}</Link>\r\n                                <span className=\"f__link f__link--route\">&bull;</span>\r\n                                <span className=\"f__link f__link--route\">{subCatTitle}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withRouter(withTranslation()(Filter));","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\MobileFilters\\MobileFilters.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\MobileAdview\\MobileAdview.js",["541","542","543","544","545"],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\business_and_services.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\transport_auto.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\sports_hobby_and_comfort.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\business_and_services.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\actions_user.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\real_estate.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\pets.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\jobs.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\home_and_garden.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\for_kids.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\fashion_and_style.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\electronics.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\ru\\business_and_services.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\transport_auto.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\sports_hobby_and_comfort.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\real_estate.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\pets.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\home_and_garden.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\jobs.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\for_kids.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\components\\RegionsDropdown.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\fashion_and_style.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Ads\\AdCard.js",["546","547"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport * as utils from '../../../utilities/utilities';\r\nimport Tooltip from '../../../UI/Tooltip';\r\nimport Modal from '../../../components/Modal';\r\n\r\nexport const AdsCard = (props) => {\r\n    const [modal, setModal] = useState(null);\r\n    const mediaMid = window.matchMedia('(max-width: 61.25em)');\r\n\r\n    const onOpenDetails = (ad) => {\r\n    };\r\n\r\n    const onClickDeactivate = (id) => {\r\n\r\n    };\r\n    \r\n    const onClickRemove = (id) => {\r\n\r\n    };\r\n\r\n    const onClickActivate = (id) => {\r\n\r\n    };\r\n\r\n    let btnView;\r\n    switch (props.view) {\r\n        case 'active': \r\n            btnView = (\r\n                <div className=\"d-flex\">\r\n                    {!props.el.premium && \r\n                        <Link \r\n                            to=\"/ads/promote\" \r\n                            className=\"profile__btn profile__btn--activate profile__btn--control\" \r\n                            onClick={() => onClickActivate(props.el.id)}>\r\n                                <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"check\" />\r\n                                <span className=\"profile__btn-title\">Promote</span>\r\n                        </Link>\r\n                    }\r\n                    <button className=\"profile__btn profile__btn--red profile__btn--control\" onClick={() => onClickDeactivate(props.el.id)}>\r\n                        <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"x\" />\r\n                        <span className=\"profile__btn-title\">Deactivate</span>\r\n                    </button>\r\n                </div>\r\n            );\r\n            break;\r\n        case 'remove': \r\n            btnView = (\r\n                <button className=\"profile__btn profile__btn--red profile__btn--control\" onClick={() => onClickRemove(props.el.id)}>\r\n                    <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"x\" />\r\n                    <span className=\"profile__btn-title\">Remove</span>\r\n                </button>\r\n            );\r\n            break;\r\n        default:\r\n            btnView = (\r\n                <button className=\"profile__btn profile__btn--activate profile__btn--control\" onClick={() => onClickActivate(props.el.id)}>\r\n                    <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"check\" />\r\n                    <span className=\"profile__btn-title\">Activate</span>\r\n                </button>\r\n            );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {modal && \r\n                <Modal \r\n                    title=\"Details\"\r\n                    click={() => setModal(false)}>\r\n                        <div className=\"modal__body\">\r\n                            <ul className=\"modal__list\">\r\n                                <li className=\"modal__item\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"clock\" />\r\n                                        Published\r\n                                    </div>\r\n                                    {props.el.date}\r\n                                </li>\r\n                                <li className=\"modal__item\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"map-pin\" />\r\n                                        Location\r\n                                    </div>\r\n                                    {utils.limitStrAny(props.el.location, 15, false)}\r\n                                </li>\r\n                                <li className=\"modal__item\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"eye\" />\r\n                                        Number of views\r\n                                    </div>\r\n                                    167\r\n                                </li>\r\n                                <li className=\"modal__item\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"phone\" />\r\n                                        Phone views\r\n                                    </div>\r\n                                    45\r\n                                </li>\r\n                                <li className=\"modal__item\">\r\n                                    <div className=\"d-flex ac\">\r\n                                        <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"heart\" />\r\n                                        Number of likes\r\n                                    </div>\r\n                                    32\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </Modal>\r\n            }\r\n            <div \r\n                className=\"profile__ad\" \r\n                tabIndex=\"0\" \r\n                key={props.el.id} \r\n                onClick={() => {\r\n                    if (mediaMid.matches) setModal(true);\r\n            }}>\r\n                <figure className=\"profile__ad-figure\">\r\n                    <LazyLoadImage \r\n                        className=\"profile__ad-img\" \r\n                        src={props.el.img[0]} \r\n                        alt={props.el.title} \r\n                        width=\"100%\" \r\n                        height=\"100%\" />\r\n                </figure>\r\n                <div className=\"profile__ad-left\">\r\n                    <span className=\"profile__ad-title d-flex sb ac\">\r\n                        {utils.limitStrAny(props.el.title, 25, true)}\r\n                        {props.el.premium && <span className=\"badge w-max profile__ad-badge\">TOP</span>}\r\n                    </span>\r\n                    <span className=\"profile__ad-title--price-tag w-max\">{props.el.price}</span>\r\n                    <div className=\"profile__ad-group profile__ad-group--details\">\r\n                        <span className=\"profile__ad-detail\">\r\n                            <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"clock\" />\r\n                            {props.el.date}\r\n                        </span>\r\n                        <span className=\"profile__ad-separator\">&bull;</span>\r\n                        <span className=\"profile__ad-detail\">\r\n                            <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"map-pin\" />\r\n                            {utils.limitStrAny(props.el.location, 15, false)}\r\n                        </span>\r\n                        <span className=\"profile__ad-separator\">&bull;</span>\r\n                        <span className=\"profile__ad-detail\">\r\n                            <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"eye\" />\r\n                            167\r\n                        </span>\r\n                        <span className=\"profile__ad-separator\">&bull;</span>\r\n                        <span className=\"profile__ad-detail\">\r\n                            <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"phone\" />\r\n                            45\r\n                        </span>\r\n                        <span className=\"profile__ad-separator\">&bull;</span>\r\n                        <span className=\"profile__ad-detail\">\r\n                            <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"heart\" />\r\n                            32\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"profile__ad-group sb\">\r\n                        <div className=\"d-flex\">\r\n                            <Link to={`/user/my_ads/edit/${props.el.id}`} className=\"profile__btn profile__btn--control\">\r\n                                <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"edit-2\" />\r\n                                <span className=\"profile__btn-title\">Edit</span>\r\n                            </Link>\r\n                            <Link to={`/user/my_ads/view/${props.el.id}`} className=\"profile__btn profile__btn--control\">\r\n                                <utils.use styleClass=\"profile__icon profile__icon--small\" svg=\"eye\" />\r\n                                <span className=\"profile__btn-title\">View</span>\r\n                            </Link>\r\n                        </div>\r\n                        {btnView}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const AdFull = (props) => {\r\n\r\n    const onRemoveFromFavorites = (id) => {\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"profile__ad\" tabIndex=\"0\" key={props.el.id}>\r\n            <figure className=\"profile__ad-figure\">\r\n                <LazyLoadImage \r\n                    className=\"profile__ad-img\" \r\n                    src={props.el.img[0]} \r\n                    alt={props.el.title} \r\n                    width=\"100%\" \r\n                    height=\"100%\" />\r\n            </figure>\r\n            <div className=\"profile__ad-left\">\r\n                <span className=\"profile__ad-title d-flex sb ac\" data-premium={props.el.premium}>\r\n                    {props.el.title}\r\n                    <span className=\"badge w-max profile__ad-badge\">Promoted</span>\r\n                </span>\r\n                <div className=\"profile__ad-group\">\r\n                    <span className=\"profile__ad-detail\">\r\n                        <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"clock\" />\r\n                        {props.el.date}\r\n                    </span>\r\n                    <span className=\"profile__ad-separator\">&bull;</span>\r\n                    <span className=\"profile__ad-detail\">\r\n                        <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"map-pin\" />\r\n                        {props.el.location}\r\n                    </span>\r\n                    <span className=\"profile__ad-separator\">&bull;</span>\r\n                    <span className=\"profile__ad-detail\">\r\n                        <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small\" svg=\"eye\" />\r\n                        167\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <span className=\"tag__types profile__fav-tag\">Category</span>\r\n                        <span className=\"tag__types profile__fav-tag\">Subcategory</span>\r\n                        <span className=\"tag__types profile__fav-tag\">Addition</span>\r\n                    </div>\r\n                    <div className=\"mt-5 d-flex sb ac\">\r\n                        <span className=\"price-tag mt-5 w-max\">{props.el.price}</span>\r\n                        <button className=\"profile__btn profile__btn--rounded DTool DTool--right-top pos-rel\" data-favorite={props.el.favorite} onClick={() => props.click()}>\r\n                            <utils.use styleClass=\"profile__icon profile__icon--det profile__icon--small icon\" svg=\"heart\" />\r\n                            <Tooltip>Remove from favourites</Tooltip>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\electronics.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\UI\\Tooltip.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\transport_auto.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\actions_data.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\actions\\actions_localization.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\sports_hobby_and_comfort.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\real_estate.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\pets.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\jobs.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\fashion_and_style.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\home_and_garden.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\for_kids.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\PostFilters\\en\\electronics.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\pages\\Profile\\Placeholder.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\utilities\\apiMethods.js",[],"E:\\PROJECT-DESK\\dec-i18next-exp\\src\\store\\Filters\\en\\search.js",[],{"ruleId":"548","severity":1,"message":"549","line":5,"column":25,"nodeType":"550","messageId":"551","endLine":5,"endColumn":35},{"ruleId":"548","severity":1,"message":"552","line":8,"column":8,"nodeType":"550","messageId":"551","endLine":8,"endColumn":12},{"ruleId":"553","replacedBy":"554"},{"ruleId":"555","replacedBy":"556"},{"ruleId":"548","severity":1,"message":"557","line":25,"column":10,"nodeType":"550","messageId":"551","endLine":25,"endColumn":17},{"ruleId":"558","severity":1,"message":"559","line":17,"column":414,"nodeType":"560","messageId":"561","endLine":17,"endColumn":415,"suggestions":"562"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":495,"nodeType":"560","messageId":"561","endLine":17,"endColumn":496,"suggestions":"563"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":560,"nodeType":"560","messageId":"561","endLine":17,"endColumn":561,"suggestions":"564"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":587,"nodeType":"560","messageId":"561","endLine":17,"endColumn":588,"suggestions":"565"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":608,"nodeType":"560","messageId":"561","endLine":17,"endColumn":609,"suggestions":"566"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":646,"nodeType":"560","messageId":"561","endLine":17,"endColumn":647,"suggestions":"567"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":680,"nodeType":"560","messageId":"561","endLine":17,"endColumn":681,"suggestions":"568"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":749,"nodeType":"560","messageId":"561","endLine":17,"endColumn":750,"suggestions":"569"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":772,"nodeType":"560","messageId":"561","endLine":17,"endColumn":773,"suggestions":"570"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":777,"nodeType":"560","messageId":"561","endLine":17,"endColumn":778,"suggestions":"571"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":815,"nodeType":"560","messageId":"561","endLine":17,"endColumn":816,"suggestions":"572"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":828,"nodeType":"560","messageId":"561","endLine":17,"endColumn":829,"suggestions":"573"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":853,"nodeType":"560","messageId":"561","endLine":17,"endColumn":854,"suggestions":"574"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":862,"nodeType":"560","messageId":"561","endLine":17,"endColumn":863,"suggestions":"575"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":895,"nodeType":"560","messageId":"561","endLine":17,"endColumn":896,"suggestions":"576"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":919,"nodeType":"560","messageId":"561","endLine":17,"endColumn":920,"suggestions":"577"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1023,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1024,"suggestions":"578"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1067,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1068,"suggestions":"579"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1088,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1089,"suggestions":"580"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1130,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1131,"suggestions":"581"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1183,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1184,"suggestions":"582"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1280,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1281,"suggestions":"583"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1365,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1366,"suggestions":"584"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1400,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1401,"suggestions":"585"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1429,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1430,"suggestions":"586"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1435,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1436,"suggestions":"587"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1457,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1458,"suggestions":"588"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1466,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1467,"suggestions":"589"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1540,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1541,"suggestions":"590"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1547,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1548,"suggestions":"591"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1562,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1563,"suggestions":"592"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1586,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1587,"suggestions":"593"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1598,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1599,"suggestions":"594"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1606,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1607,"suggestions":"595"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1656,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1657,"suggestions":"596"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1660,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1661,"suggestions":"597"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1713,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1714,"suggestions":"598"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1719,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1720,"suggestions":"599"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1734,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1735,"suggestions":"600"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1738,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1739,"suggestions":"601"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1760,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1761,"suggestions":"602"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1772,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1773,"suggestions":"603"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1833,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1834,"suggestions":"604"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1891,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1892,"suggestions":"605"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1938,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1939,"suggestions":"606"},{"ruleId":"558","severity":1,"message":"559","line":17,"column":1954,"nodeType":"560","messageId":"561","endLine":17,"endColumn":1955,"suggestions":"607"},{"ruleId":"548","severity":1,"message":"608","line":52,"column":19,"nodeType":"550","messageId":"551","endLine":52,"endColumn":28},{"ruleId":"548","severity":1,"message":"609","line":53,"column":19,"nodeType":"550","messageId":"551","endLine":53,"endColumn":29},{"ruleId":"548","severity":1,"message":"610","line":71,"column":15,"nodeType":"550","messageId":"551","endLine":71,"endColumn":19},{"ruleId":"548","severity":1,"message":"611","line":222,"column":15,"nodeType":"550","messageId":"551","endLine":222,"endColumn":20},{"ruleId":"548","severity":1,"message":"612","line":18,"column":21,"nodeType":"550","messageId":"551","endLine":18,"endColumn":30},{"ruleId":"548","severity":1,"message":"613","line":53,"column":9,"nodeType":"550","messageId":"551","endLine":53,"endColumn":22},{"ruleId":"614","severity":1,"message":"615","line":18,"column":8,"nodeType":"616","endLine":18,"endColumn":10,"suggestions":"617"},{"ruleId":"548","severity":1,"message":"610","line":91,"column":15,"nodeType":"550","messageId":"551","endLine":91,"endColumn":19},{"ruleId":"548","severity":1,"message":"610","line":99,"column":19,"nodeType":"550","messageId":"551","endLine":99,"endColumn":23},{"ruleId":"548","severity":1,"message":"610","line":126,"column":27,"nodeType":"550","messageId":"551","endLine":126,"endColumn":31},{"ruleId":"548","severity":1,"message":"610","line":140,"column":23,"nodeType":"550","messageId":"551","endLine":140,"endColumn":27},{"ruleId":"548","severity":1,"message":"610","line":154,"column":27,"nodeType":"550","messageId":"551","endLine":154,"endColumn":31},{"ruleId":"548","severity":1,"message":"610","line":167,"column":23,"nodeType":"550","messageId":"551","endLine":167,"endColumn":27},{"ruleId":"548","severity":1,"message":"618","line":80,"column":27,"nodeType":"550","messageId":"551","endLine":80,"endColumn":32},{"ruleId":"548","severity":1,"message":"619","line":1,"column":17,"nodeType":"550","messageId":"551","endLine":1,"endColumn":25},{"ruleId":"548","severity":1,"message":"620","line":5,"column":13,"nodeType":"550","messageId":"551","endLine":5,"endColumn":18},{"ruleId":"548","severity":1,"message":"621","line":3,"column":8,"nodeType":"550","messageId":"551","endLine":3,"endColumn":22},{"ruleId":"548","severity":1,"message":"622","line":16,"column":11,"nodeType":"550","messageId":"551","endLine":16,"endColumn":19},{"ruleId":"548","severity":1,"message":"623","line":2,"column":29,"nodeType":"550","messageId":"551","endLine":2,"endColumn":38},{"ruleId":"548","severity":1,"message":"610","line":55,"column":19,"nodeType":"550","messageId":"551","endLine":55,"endColumn":23},{"ruleId":"548","severity":1,"message":"624","line":12,"column":21,"nodeType":"550","messageId":"551","endLine":12,"endColumn":31},{"ruleId":"548","severity":1,"message":"625","line":3,"column":10,"nodeType":"550","messageId":"551","endLine":3,"endColumn":20},{"ruleId":"548","severity":1,"message":"626","line":3,"column":29,"nodeType":"550","messageId":"551","endLine":3,"endColumn":41},{"ruleId":"548","severity":1,"message":"627","line":15,"column":25,"nodeType":"550","messageId":"551","endLine":15,"endColumn":39},{"ruleId":"548","severity":1,"message":"610","line":65,"column":12,"nodeType":"550","messageId":"551","endLine":65,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":65,"column":18,"nodeType":"550","messageId":"551","endLine":65,"endColumn":25},{"ruleId":"548","severity":1,"message":"610","line":118,"column":12,"nodeType":"550","messageId":"551","endLine":118,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":118,"column":18,"nodeType":"550","messageId":"551","endLine":118,"endColumn":25},{"ruleId":"548","severity":1,"message":"610","line":163,"column":12,"nodeType":"550","messageId":"551","endLine":163,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":163,"column":18,"nodeType":"550","messageId":"551","endLine":163,"endColumn":25},{"ruleId":"548","severity":1,"message":"610","line":9,"column":12,"nodeType":"550","messageId":"551","endLine":9,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":9,"column":18,"nodeType":"550","messageId":"551","endLine":9,"endColumn":25},{"ruleId":"548","severity":1,"message":"610","line":10,"column":12,"nodeType":"550","messageId":"551","endLine":10,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":10,"column":18,"nodeType":"550","messageId":"551","endLine":10,"endColumn":25},{"ruleId":"548","severity":1,"message":"629","line":1,"column":17,"nodeType":"550","messageId":"551","endLine":1,"endColumn":26},{"ruleId":"548","severity":1,"message":"610","line":13,"column":12,"nodeType":"550","messageId":"551","endLine":13,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":13,"column":18,"nodeType":"550","messageId":"551","endLine":13,"endColumn":25},{"ruleId":"548","severity":1,"message":"630","line":29,"column":11,"nodeType":"550","messageId":"551","endLine":29,"endColumn":23},{"ruleId":"548","severity":1,"message":"610","line":71,"column":12,"nodeType":"550","messageId":"551","endLine":71,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":71,"column":18,"nodeType":"550","messageId":"551","endLine":71,"endColumn":25},{"ruleId":"548","severity":1,"message":"631","line":87,"column":11,"nodeType":"550","messageId":"551","endLine":87,"endColumn":21},{"ruleId":"548","severity":1,"message":"632","line":94,"column":11,"nodeType":"550","messageId":"551","endLine":94,"endColumn":19},{"ruleId":"548","severity":1,"message":"610","line":132,"column":12,"nodeType":"550","messageId":"551","endLine":132,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":132,"column":18,"nodeType":"550","messageId":"551","endLine":132,"endColumn":25},{"ruleId":"548","severity":1,"message":"630","line":148,"column":11,"nodeType":"550","messageId":"551","endLine":148,"endColumn":23},{"ruleId":"548","severity":1,"message":"631","line":155,"column":11,"nodeType":"550","messageId":"551","endLine":155,"endColumn":21},{"ruleId":"548","severity":1,"message":"633","line":7,"column":13,"nodeType":"550","messageId":"551","endLine":7,"endColumn":20},{"ruleId":"548","severity":1,"message":"634","line":9,"column":8,"nodeType":"550","messageId":"551","endLine":9,"endColumn":13},{"ruleId":"548","severity":1,"message":"635","line":2,"column":28,"nodeType":"550","messageId":"551","endLine":2,"endColumn":39},{"ruleId":"548","severity":1,"message":"624","line":42,"column":21,"nodeType":"550","messageId":"551","endLine":42,"endColumn":31},{"ruleId":"548","severity":1,"message":"636","line":43,"column":24,"nodeType":"550","messageId":"551","endLine":43,"endColumn":37},{"ruleId":"548","severity":1,"message":"610","line":47,"column":12,"nodeType":"550","messageId":"551","endLine":47,"endColumn":16},{"ruleId":"548","severity":1,"message":"628","line":47,"column":18,"nodeType":"550","messageId":"551","endLine":47,"endColumn":25},{"ruleId":"548","severity":1,"message":"637","line":13,"column":11,"nodeType":"550","messageId":"551","endLine":13,"endColumn":24},{"ruleId":"548","severity":1,"message":"638","line":181,"column":11,"nodeType":"550","messageId":"551","endLine":181,"endColumn":32},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'i18n' is defined but never used.","no-native-reassign",["639"],"no-negated-in-lhs",["640"],"'loading' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["641","642"],["643","644"],["645","646"],["647","648"],["649","650"],["651","652"],["653","654"],["655","656"],["657","658"],["659","660"],["661","662"],["663","664"],["665","666"],["667","668"],["669","670"],["671","672"],["673","674"],["675","676"],["677","678"],["679","680"],["681","682"],["683","684"],["685","686"],["687","688"],["689","690"],["691","692"],["693","694"],["695","696"],["697","698"],["699","700"],["701","702"],["703","704"],["705","706"],["707","708"],["709","710"],["711","712"],["713","714"],["715","716"],["717","718"],["719","720"],["721","722"],["723","724"],["725","726"],["727","728"],["729","730"],["731","732"],"'vendorAds' is assigned a value but never used.","'premiumAds' is assigned a value but never used.","'data' is assigned a value but never used.","'price' is assigned a value but never used.","'setLoding' is assigned a value but never used.","'categoryTitle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.mobile'. Either include it or remove the dependency array.","ArrayExpression",["733"],"'timer' is assigned a value but never used.","'useState' is defined but never used.","'utils' is defined but never used.","'emailValidator' is defined but never used.","'navItems' is assigned a value but never used.","'useParams' is defined but never used.","'setLoading' is assigned a value but never used.","'FcFeedback' is defined but never used.","'FcEmptyTrash' is defined but never used.","'setMessagesAll' is assigned a value but never used.","'setData' is assigned a value but never used.","'useEffect' is defined but never used.","'onDeactivate' is assigned a value but never used.","'onActivate' is assigned a value but never used.","'onRemove' is assigned a value but never used.","'actions' is defined but never used.","'axios' is defined but never used.","'useLocation' is defined but never used.","'setLoadingMes' is assigned a value but never used.","'onOpenDetails' is assigned a value but never used.","'onRemoveFromFavorites' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"734","fix":"735","desc":"736"},{"messageId":"737","fix":"738","desc":"739"},{"messageId":"734","fix":"740","desc":"736"},{"messageId":"737","fix":"741","desc":"739"},{"messageId":"734","fix":"742","desc":"736"},{"messageId":"737","fix":"743","desc":"739"},{"messageId":"734","fix":"744","desc":"736"},{"messageId":"737","fix":"745","desc":"739"},{"messageId":"734","fix":"746","desc":"736"},{"messageId":"737","fix":"747","desc":"739"},{"messageId":"734","fix":"748","desc":"736"},{"messageId":"737","fix":"749","desc":"739"},{"messageId":"734","fix":"750","desc":"736"},{"messageId":"737","fix":"751","desc":"739"},{"messageId":"734","fix":"752","desc":"736"},{"messageId":"737","fix":"753","desc":"739"},{"messageId":"734","fix":"754","desc":"736"},{"messageId":"737","fix":"755","desc":"739"},{"messageId":"734","fix":"756","desc":"736"},{"messageId":"737","fix":"757","desc":"739"},{"messageId":"734","fix":"758","desc":"736"},{"messageId":"737","fix":"759","desc":"739"},{"messageId":"734","fix":"760","desc":"736"},{"messageId":"737","fix":"761","desc":"739"},{"messageId":"734","fix":"762","desc":"736"},{"messageId":"737","fix":"763","desc":"739"},{"messageId":"734","fix":"764","desc":"736"},{"messageId":"737","fix":"765","desc":"739"},{"messageId":"734","fix":"766","desc":"736"},{"messageId":"737","fix":"767","desc":"739"},{"messageId":"734","fix":"768","desc":"736"},{"messageId":"737","fix":"769","desc":"739"},{"messageId":"734","fix":"770","desc":"736"},{"messageId":"737","fix":"771","desc":"739"},{"messageId":"734","fix":"772","desc":"736"},{"messageId":"737","fix":"773","desc":"739"},{"messageId":"734","fix":"774","desc":"736"},{"messageId":"737","fix":"775","desc":"739"},{"messageId":"734","fix":"776","desc":"736"},{"messageId":"737","fix":"777","desc":"739"},{"messageId":"734","fix":"778","desc":"736"},{"messageId":"737","fix":"779","desc":"739"},{"messageId":"734","fix":"780","desc":"736"},{"messageId":"737","fix":"781","desc":"739"},{"messageId":"734","fix":"782","desc":"736"},{"messageId":"737","fix":"783","desc":"739"},{"messageId":"734","fix":"784","desc":"736"},{"messageId":"737","fix":"785","desc":"739"},{"messageId":"734","fix":"786","desc":"736"},{"messageId":"737","fix":"787","desc":"739"},{"messageId":"734","fix":"788","desc":"736"},{"messageId":"737","fix":"789","desc":"739"},{"messageId":"734","fix":"790","desc":"736"},{"messageId":"737","fix":"791","desc":"739"},{"messageId":"734","fix":"792","desc":"736"},{"messageId":"737","fix":"793","desc":"739"},{"messageId":"734","fix":"794","desc":"736"},{"messageId":"737","fix":"795","desc":"739"},{"messageId":"734","fix":"796","desc":"736"},{"messageId":"737","fix":"797","desc":"739"},{"messageId":"734","fix":"798","desc":"736"},{"messageId":"737","fix":"799","desc":"739"},{"messageId":"734","fix":"800","desc":"736"},{"messageId":"737","fix":"801","desc":"739"},{"messageId":"734","fix":"802","desc":"736"},{"messageId":"737","fix":"803","desc":"739"},{"messageId":"734","fix":"804","desc":"736"},{"messageId":"737","fix":"805","desc":"739"},{"messageId":"734","fix":"806","desc":"736"},{"messageId":"737","fix":"807","desc":"739"},{"messageId":"734","fix":"808","desc":"736"},{"messageId":"737","fix":"809","desc":"739"},{"messageId":"734","fix":"810","desc":"736"},{"messageId":"737","fix":"811","desc":"739"},{"messageId":"734","fix":"812","desc":"736"},{"messageId":"737","fix":"813","desc":"739"},{"messageId":"734","fix":"814","desc":"736"},{"messageId":"737","fix":"815","desc":"739"},{"messageId":"734","fix":"816","desc":"736"},{"messageId":"737","fix":"817","desc":"739"},{"messageId":"734","fix":"818","desc":"736"},{"messageId":"737","fix":"819","desc":"739"},{"messageId":"734","fix":"820","desc":"736"},{"messageId":"737","fix":"821","desc":"739"},{"messageId":"734","fix":"822","desc":"736"},{"messageId":"737","fix":"823","desc":"739"},{"messageId":"734","fix":"824","desc":"736"},{"messageId":"737","fix":"825","desc":"739"},{"messageId":"734","fix":"826","desc":"736"},{"messageId":"737","fix":"827","desc":"739"},{"messageId":"734","fix":"828","desc":"736"},{"messageId":"737","fix":"829","desc":"739"},{"desc":"830","fix":"831"},"removeEscape",{"range":"832","text":"833"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"834","text":"835"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"836","text":"833"},{"range":"837","text":"835"},{"range":"838","text":"833"},{"range":"839","text":"835"},{"range":"840","text":"833"},{"range":"841","text":"835"},{"range":"842","text":"833"},{"range":"843","text":"835"},{"range":"844","text":"833"},{"range":"845","text":"835"},{"range":"846","text":"833"},{"range":"847","text":"835"},{"range":"848","text":"833"},{"range":"849","text":"835"},{"range":"850","text":"833"},{"range":"851","text":"835"},{"range":"852","text":"833"},{"range":"853","text":"835"},{"range":"854","text":"833"},{"range":"855","text":"835"},{"range":"856","text":"833"},{"range":"857","text":"835"},{"range":"858","text":"833"},{"range":"859","text":"835"},{"range":"860","text":"833"},{"range":"861","text":"835"},{"range":"862","text":"833"},{"range":"863","text":"835"},{"range":"864","text":"833"},{"range":"865","text":"835"},{"range":"866","text":"833"},{"range":"867","text":"835"},{"range":"868","text":"833"},{"range":"869","text":"835"},{"range":"870","text":"833"},{"range":"871","text":"835"},{"range":"872","text":"833"},{"range":"873","text":"835"},{"range":"874","text":"833"},{"range":"875","text":"835"},{"range":"876","text":"833"},{"range":"877","text":"835"},{"range":"878","text":"833"},{"range":"879","text":"835"},{"range":"880","text":"833"},{"range":"881","text":"835"},{"range":"882","text":"833"},{"range":"883","text":"835"},{"range":"884","text":"833"},{"range":"885","text":"835"},{"range":"886","text":"833"},{"range":"887","text":"835"},{"range":"888","text":"833"},{"range":"889","text":"835"},{"range":"890","text":"833"},{"range":"891","text":"835"},{"range":"892","text":"833"},{"range":"893","text":"835"},{"range":"894","text":"833"},{"range":"895","text":"835"},{"range":"896","text":"833"},{"range":"897","text":"835"},{"range":"898","text":"833"},{"range":"899","text":"835"},{"range":"900","text":"833"},{"range":"901","text":"835"},{"range":"902","text":"833"},{"range":"903","text":"835"},{"range":"904","text":"833"},{"range":"905","text":"835"},{"range":"906","text":"833"},{"range":"907","text":"835"},{"range":"908","text":"833"},{"range":"909","text":"835"},{"range":"910","text":"833"},{"range":"911","text":"835"},{"range":"912","text":"833"},{"range":"913","text":"835"},{"range":"914","text":"833"},{"range":"915","text":"835"},{"range":"916","text":"833"},{"range":"917","text":"835"},{"range":"918","text":"833"},{"range":"919","text":"835"},{"range":"920","text":"833"},{"range":"921","text":"835"},{"range":"922","text":"833"},{"range":"923","text":"835"},{"range":"924","text":"833"},{"range":"925","text":"835"},"Update the dependencies array to be: [props.mobile]",{"range":"926","text":"927"},[975,976],"",[975,975],"\\",[1056,1057],[1056,1056],[1121,1122],[1121,1121],[1148,1149],[1148,1148],[1169,1170],[1169,1169],[1207,1208],[1207,1207],[1241,1242],[1241,1241],[1310,1311],[1310,1310],[1333,1334],[1333,1333],[1338,1339],[1338,1338],[1376,1377],[1376,1376],[1389,1390],[1389,1389],[1414,1415],[1414,1414],[1423,1424],[1423,1423],[1456,1457],[1456,1456],[1480,1481],[1480,1480],[1584,1585],[1584,1584],[1628,1629],[1628,1628],[1649,1650],[1649,1649],[1691,1692],[1691,1691],[1744,1745],[1744,1744],[1841,1842],[1841,1841],[1926,1927],[1926,1926],[1961,1962],[1961,1961],[1990,1991],[1990,1990],[1996,1997],[1996,1996],[2018,2019],[2018,2018],[2027,2028],[2027,2027],[2101,2102],[2101,2101],[2108,2109],[2108,2108],[2123,2124],[2123,2123],[2147,2148],[2147,2147],[2159,2160],[2159,2159],[2167,2168],[2167,2167],[2217,2218],[2217,2217],[2221,2222],[2221,2221],[2274,2275],[2274,2274],[2280,2281],[2280,2280],[2295,2296],[2295,2295],[2299,2300],[2299,2299],[2321,2322],[2321,2321],[2333,2334],[2333,2333],[2394,2395],[2394,2394],[2452,2453],[2452,2452],[2499,2500],[2499,2499],[2515,2516],[2515,2515],[586,588],"[props.mobile]"]