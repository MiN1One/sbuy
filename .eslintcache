[{"E:\\dec-exp-01-20\\src\\index.js":"1","E:\\dec-exp-01-20\\src\\reportWebVitals.js":"2","E:\\dec-exp-01-20\\src\\containers\\App.js":"3","E:\\dec-exp-01-20\\src\\store\\reducers\\reducer_data.js":"4","E:\\dec-exp-01-20\\src\\store\\reducers\\reducer_localization.js":"5","E:\\dec-exp-01-20\\src\\containers\\Layout.js":"6","E:\\dec-exp-01-20\\src\\containers\\Header.js":"7","E:\\dec-exp-01-20\\src\\containers\\Main.js":"8","E:\\dec-exp-01-20\\src\\containers\\Post.js":"9","E:\\dec-exp-01-20\\src\\containers\\Authorization\\AuthSignup.js":"10","E:\\dec-exp-01-20\\src\\containers\\Authorization\\AuthSignin.js":"11","E:\\dec-exp-01-20\\src\\containers\\Authorization\\ResetPass.js":"12","E:\\dec-exp-01-20\\src\\UI\\LoadingScreen.js":"13","E:\\dec-exp-01-20\\src\\store\\actions\\actionTypes.js":"14","E:\\dec-exp-01-20\\src\\hoc\\asyncComponent\\asyncComponent.js":"15","E:\\dec-exp-01-20\\src\\components\\Profile\\Profile.js":"16","E:\\dec-exp-01-20\\src\\store\\Categories\\categories_en.js":"17","E:\\dec-exp-01-20\\src\\store\\Categories\\categories_ru.js":"18","E:\\dec-exp-01-20\\src\\store\\Categories\\categories_uz.js":"19","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\business_and_services.js":"20","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\electronics.js":"21","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\fashion_and_style.js":"22","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\for_kids.js":"23","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\home_and_garden.js":"24","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\jobs.js":"25","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\real_estate.js":"26","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\pets.js":"27","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\sports_hobby_and_comfort.js":"28","E:\\dec-exp-01-20\\src\\components\\Searchbar.js":"29","E:\\dec-exp-01-20\\src\\containers\\Navigation.js":"30","E:\\dec-exp-01-20\\src\\containers\\Footer.js":"31","E:\\dec-exp-01-20\\src\\components\\Card.js":"32","E:\\dec-exp-01-20\\src\\components\\Filter.js":"33","E:\\dec-exp-01-20\\src\\components\\Categories.js":"34","E:\\dec-exp-01-20\\src\\components\\Adview.js":"35","E:\\dec-exp-01-20\\src\\UI\\Backdrop.js":"36","E:\\dec-exp-01-20\\src\\components\\Dropdown.js":"37","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\transport_auto.js":"38","E:\\dec-exp-01-20\\src\\components\\Language.js":"39","E:\\dec-exp-01-20\\src\\components\\Logo.js":"40","E:\\dec-exp-01-20\\src\\utilities\\utilities.js":"41","E:\\dec-exp-01-20\\src\\components\\Profile\\Settings.js":"42","E:\\dec-exp-01-20\\src\\components\\Profile\\Favourites.js":"43","E:\\dec-exp-01-20\\src\\components\\Profile\\Main.js":"44","E:\\dec-exp-01-20\\src\\components\\Profile\\Payments.js":"45","E:\\dec-exp-01-20\\src\\components\\Profile\\Promotions.js":"46","E:\\dec-exp-01-20\\src\\components\\Profile\\Messages.js":"47","E:\\dec-exp-01-20\\src\\components\\Profile\\Ads\\Ads.js":"48","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\business_and_services.js":"49","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\electronics.js":"50","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\fashion_and_style.js":"51","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\for_kids.js":"52","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\home_and_garden.js":"53","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\jobs.js":"54","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\pets.js":"55","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\real_estate.js":"56","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\sports_hobby_and_comfort.js":"57","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\transport_auto.js":"58","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\business_and_services.js":"59","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\electronics.js":"60","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\fashion_and_style.js":"61","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\for_kids.js":"62","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\home_and_garden.js":"63","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\jobs.js":"64","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\pets.js":"65","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\real_estate.js":"66","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\sports_hobby_and_comfort.js":"67","E:\\dec-exp-01-20\\src\\store\\actions\\index.js":"68","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\transport_auto.js":"69","E:\\dec-exp-01-20\\src\\components\\RegionsDropdown.js":"70","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\sports_hobby_and_comfort.js":"71","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\real_estate.js":"72","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\pets.js":"73","E:\\dec-exp-01-20\\src\\UI\\Tooltip.js":"74","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\jobs.js":"75","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\home_and_garden.js":"76","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\for_kids.js":"77","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\fashion_and_style.js":"78","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\electronics.js":"79","E:\\dec-exp-01-20\\src\\UI\\LoadingSub.js":"80","E:\\dec-exp-01-20\\src\\components\\Profile\\Ads\\AdCard.js":"81","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\transport_auto.js":"82","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\business_and_services.js":"83","E:\\dec-exp-01-20\\src\\store\\actions\\actions_data.js":"84","E:\\dec-exp-01-20\\src\\store\\actions\\actions_localization.js":"85"},{"size":1180,"mtime":1611237865621,"results":"86","hashOfConfig":"87"},{"size":362,"mtime":499162500000,"results":"88","hashOfConfig":"87"},{"size":2009,"mtime":1611516999294,"results":"89","hashOfConfig":"87"},{"size":5330,"mtime":1611497068128,"results":"90","hashOfConfig":"87"},{"size":1000,"mtime":1610904727000,"results":"91","hashOfConfig":"87"},{"size":351,"mtime":1611510457935,"results":"92","hashOfConfig":"87"},{"size":6223,"mtime":1611517589534,"results":"93","hashOfConfig":"87"},{"size":8148,"mtime":1611504826958,"results":"94","hashOfConfig":"87"},{"size":37572,"mtime":1611072176000,"results":"95","hashOfConfig":"87"},{"size":10929,"mtime":1611254660715,"results":"96","hashOfConfig":"87"},{"size":5847,"mtime":1611336634293,"results":"97","hashOfConfig":"87"},{"size":7348,"mtime":1611256978603,"results":"98","hashOfConfig":"87"},{"size":824,"mtime":1611241818888,"results":"99","hashOfConfig":"87"},{"size":542,"mtime":1611497068129,"results":"100","hashOfConfig":"87"},{"size":1376,"mtime":1611242854903,"results":"101","hashOfConfig":"87"},{"size":12252,"mtime":1611513928799,"results":"102","hashOfConfig":"87"},{"size":8293,"mtime":1611473406579,"results":"103","hashOfConfig":"87"},{"size":8607,"mtime":1611472712543,"results":"104","hashOfConfig":"87"},{"size":8564,"mtime":1610995247000,"results":"105","hashOfConfig":"87"},{"size":14011,"mtime":1611048094000,"results":"106","hashOfConfig":"87"},{"size":7441,"mtime":1611048094000,"results":"107","hashOfConfig":"87"},{"size":6512,"mtime":1611048094000,"results":"108","hashOfConfig":"87"},{"size":6116,"mtime":1611048094000,"results":"109","hashOfConfig":"87"},{"size":9265,"mtime":1611048094000,"results":"110","hashOfConfig":"87"},{"size":18487,"mtime":1611048094000,"results":"111","hashOfConfig":"87"},{"size":4654,"mtime":1611048094000,"results":"112","hashOfConfig":"87"},{"size":10158,"mtime":1611048094000,"results":"113","hashOfConfig":"87"},{"size":6526,"mtime":1611048232000,"results":"114","hashOfConfig":"87"},{"size":3713,"mtime":1611341527132,"results":"115","hashOfConfig":"87"},{"size":9446,"mtime":1611515908260,"results":"116","hashOfConfig":"87"},{"size":2272,"mtime":1609948916000,"results":"117","hashOfConfig":"87"},{"size":3361,"mtime":1611499885074,"results":"118","hashOfConfig":"87"},{"size":11673,"mtime":1611515990744,"results":"119","hashOfConfig":"87"},{"size":6802,"mtime":1611502251430,"results":"120","hashOfConfig":"87"},{"size":31693,"mtime":1611517492601,"results":"121","hashOfConfig":"87"},{"size":218,"mtime":1609688274000,"results":"122","hashOfConfig":"87"},{"size":167,"mtime":1609686174000,"results":"123","hashOfConfig":"87"},{"size":11133,"mtime":1611048232000,"results":"124","hashOfConfig":"87"},{"size":1885,"mtime":1611117590000,"results":"125","hashOfConfig":"87"},{"size":673,"mtime":1610361582000,"results":"126","hashOfConfig":"87"},{"size":2257,"mtime":1611485700149,"results":"127","hashOfConfig":"87"},{"size":7991,"mtime":1610796560000,"results":"128","hashOfConfig":"87"},{"size":554,"mtime":1611513461337,"results":"129","hashOfConfig":"87"},{"size":13493,"mtime":1611513122754,"results":"130","hashOfConfig":"87"},{"size":472,"mtime":1610782046000,"results":"131","hashOfConfig":"87"},{"size":436,"mtime":1610630361000,"results":"132","hashOfConfig":"87"},{"size":1161,"mtime":1610630582000,"results":"133","hashOfConfig":"87"},{"size":2479,"mtime":1610632037000,"results":"134","hashOfConfig":"87"},{"size":18267,"mtime":1610981347000,"results":"135","hashOfConfig":"87"},{"size":8116,"mtime":1610981347000,"results":"136","hashOfConfig":"87"},{"size":7113,"mtime":1610981347000,"results":"137","hashOfConfig":"87"},{"size":7311,"mtime":1610983215000,"results":"138","hashOfConfig":"87"},{"size":11074,"mtime":1610981384000,"results":"139","hashOfConfig":"87"},{"size":20007,"mtime":1610981759000,"results":"140","hashOfConfig":"87"},{"size":10997,"mtime":1610981758000,"results":"141","hashOfConfig":"87"},{"size":5078,"mtime":1610981756000,"results":"142","hashOfConfig":"87"},{"size":7166,"mtime":1610981754000,"results":"143","hashOfConfig":"87"},{"size":11089,"mtime":1610981801000,"results":"144","hashOfConfig":"87"},{"size":18870,"mtime":1610982129000,"results":"145","hashOfConfig":"87"},{"size":8364,"mtime":1610982129000,"results":"146","hashOfConfig":"87"},{"size":7330,"mtime":1610982129000,"results":"147","hashOfConfig":"87"},{"size":5602,"mtime":1610983195000,"results":"148","hashOfConfig":"87"},{"size":11417,"mtime":1610982129000,"results":"149","hashOfConfig":"87"},{"size":20629,"mtime":1610982129000,"results":"150","hashOfConfig":"87"},{"size":11338,"mtime":1610982129000,"results":"151","hashOfConfig":"87"},{"size":4958,"mtime":1610982129000,"results":"152","hashOfConfig":"87"},{"size":6998,"mtime":1610982129000,"results":"153","hashOfConfig":"87"},{"size":289,"mtime":1611497211360,"results":"154","hashOfConfig":"87"},{"size":10825,"mtime":1610982682000,"results":"155","hashOfConfig":"87"},{"size":742,"mtime":1610703967000,"results":"156","hashOfConfig":"87"},{"size":6998,"mtime":1610982682000,"results":"157","hashOfConfig":"87"},{"size":4958,"mtime":1610982682000,"results":"158","hashOfConfig":"87"},{"size":10733,"mtime":1610982682000,"results":"159","hashOfConfig":"87"},{"size":248,"mtime":1609685576000,"results":"160","hashOfConfig":"87"},{"size":19529,"mtime":1610982682000,"results":"161","hashOfConfig":"87"},{"size":10812,"mtime":1610982682000,"results":"162","hashOfConfig":"87"},{"size":7828,"mtime":1610982737000,"results":"163","hashOfConfig":"87"},{"size":7330,"mtime":1610982682000,"results":"164","hashOfConfig":"87"},{"size":8364,"mtime":1610982682000,"results":"165","hashOfConfig":"87"},{"size":135,"mtime":1611512624671,"results":"166","hashOfConfig":"87"},{"size":7596,"mtime":1611516319189,"results":"167","hashOfConfig":"87"},{"size":10825,"mtime":1610982129000,"results":"168","hashOfConfig":"87"},{"size":18825,"mtime":1610982682000,"results":"169","hashOfConfig":"87"},{"size":800,"mtime":1611497068128,"results":"170","hashOfConfig":"87"},{"size":377,"mtime":1611497068127,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},"1vbhs4a",{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"175"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"175"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"175"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"175"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"175"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"175"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"175"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"175"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"175"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"175"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"175"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"E:\\dec-exp-01-20\\src\\index.js",["355"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\n\nimport localization from './store/reducers/reducer_localization';\nimport data from './store/reducers/reducer_data';\n\nimport App from './containers/App';\nimport './index.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  localization,\n  data\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["356","357"],"E:\\dec-exp-01-20\\src\\reportWebVitals.js",[],"E:\\dec-exp-01-20\\src\\containers\\App.js",["358"],"E:\\dec-exp-01-20\\src\\store\\reducers\\reducer_data.js",[],"E:\\dec-exp-01-20\\src\\store\\reducers\\reducer_localization.js",[],"E:\\dec-exp-01-20\\src\\containers\\Layout.js",[],"E:\\dec-exp-01-20\\src\\containers\\Header.js",[],"E:\\dec-exp-01-20\\src\\containers\\Main.js",["359","360","361","362","363"],"import React, { PureComponent } from 'react';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport Filter from '../components/Filter';\r\nimport Adview from '../components/Adview';\r\nimport Card from '../components/Card';\r\nimport Searchbar from '../components/Searchbar';\r\nimport * as utils from '../utilities/utilities';\r\nimport LoadingScreen from '../UI/LoadingScreen';\r\nimport * as actions from '../store/actions';\r\n\r\nclass Main extends PureComponent {\r\n    state = {\r\n        loading: false,\r\n        data: [...this.props.data],\r\n        page: parseInt(utils.getQueryParamValue('page')),\r\n        numberOfPages: 7\r\n    }\r\n        \r\n    fetchData = async () => {\r\n        try {\r\n            this.setState({ loading: true });\r\n            const data = await axios(`https://jsonplaceholder.typicode.com/todos/${this.state.page}`);\r\n            console.log(data);\r\n            setTimeout(() => {\r\n                this.setState({ loading: false });\r\n            }, 0);\r\n            return data;\r\n        } catch(er) {\r\n            console.log(er);\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    setPageIfNone = () => {\r\n        if (!this.state.page) {\r\n            this.setState({ page: 1 }, () => {\r\n                this.props.history.push('?page=1');\r\n            });\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setPageIfNone();\r\n        const data = await this.fetchData();\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if (!utils.getQueryParamValue('page') && !this.props.match.params.id) this.props.history.push(`?page=${this.state.page}`);\r\n        else if (this.props.match.params.id) window.location.search = '';\r\n\r\n        if (prevProps.filters !== this.props.filters) {\r\n            const data = await this.fetchData();\r\n            console.log(data);\r\n            // this.setState({ data });\r\n        }\r\n    }\r\n\r\n    onGoToPage = (page) => {\r\n        if (page !== this.state.page) {\r\n            document.documentElement.scrollTop = 130;\r\n            this.setState({ page }, async () => {\r\n                const data = await this.fetchData();\r\n                this.setState({ data: this.props.data });\r\n                this.props.history.push(`?page=${page}`);\r\n            });\r\n        }\r\n    }\r\n\r\n    onClickPageNext = () => {\r\n        document.documentElement.scrollTop = 130;\r\n        this.setState(prevState => ({ page: prevState.page + 1 }), \r\n            async () => {\r\n                const data = await this.fetchData();\r\n                this.setState({ data: this.props.data });\r\n                this.props.history.push(`?page=${this.state.page}`);\r\n            });\r\n    }\r\n\r\n    onClickPagePrev = () => {\r\n        document.documentElement.scrollTop = 130;\r\n        if (this.state.page > 1) \r\n            this.setState(prevState => ({ page: prevState.page - 1 }),\r\n                async () => {\r\n                    const data = await this.fetchData();\r\n                    this.setState({ data: this.props.data });\r\n                    this.props.history.push(`?page=${this.state.page}`);\r\n                });\r\n    }\r\n\r\n    onLoadMore = () => {\r\n        this.setState(prevState => ({ page: prevState.page + 1 }), \r\n            async () => {\r\n                this.props.history.push(`?page=${this.state.page}`);\r\n                const data = await this.fetchData();\r\n                this.setState(prevState => ({ data: [...prevState.data, ...this.props.data] }));\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const premiumArr = this.state.data.filter(el => el.premium === true);\r\n        const premium = premiumArr.map((el, i) => <Card data={el} key={i} />);\r\n\r\n        const usualAdsArr = this.state.data.filter(el => el.premium === false);\r\n        const usualAds = usualAdsArr.map((el, i) => <Card data={el} key={i} />);\r\n\r\n        const pagesListArr = [];\r\n        for (let i = 0; i < this.state.numberOfPages; i++) pagesListArr.push('');\r\n        const pagesList = pagesListArr.map((el, i) => {\r\n            return <li className={`main__page-item${i+1 === this.state.page ? ' main__page-item--active' : ''}`} onClick={() => this.onGoToPage(i+1)}>{i+1}</li>\r\n        });\r\n\r\n        let view = <LoadingScreen />;\r\n        if (!this.state.loading) {\r\n            view = (\r\n                <React.Fragment>\r\n                    <Route path=\"/:category/:subcategory/:id\" exact render={() => <Adview {...this.props} data={this.props.data} />} />\r\n                    <main className=\"main\">\r\n                        <div className=\"container\">\r\n                            <div className=\"main__wrapper\">\r\n                                <div className=\"main__head\">\r\n                                    <div className=\"main__group\">\r\n                                        <h2 className=\"heading heading__2 main__heading mb-5 mr-1\">Premiuim ads</h2>\r\n                                        <Link to=\"/\" className=\"filter__btn filter__btn--close main__link\">See all</Link>\r\n                                    </div>\r\n                                    <span className=\"main__subhead\">Found 1,354 ads in this category</span>\r\n                                </div>\r\n                                <div className=\"main__list\">{premium}</div>\r\n                                <div className=\"main__head\">\r\n                                    <h2 className=\"heading heading__2 main__heading mb-5\">Usual ads</h2>\r\n                                    <span className=\"main__subhead\">Found 4,635 ads in this category</span>\r\n                                </div>\r\n                                <div className=\"main__list\">{usualAds}</div>\r\n                                <div className=\"main__pagination\">\r\n                                    <div>\r\n                                        <span className=\"main__subhead d-flex mb-1\">Page: </span>\r\n                                        <div className=\"d-flex ac\">\r\n                                            <button className=\"main__page-item main__page-item--btn\" onClick={() => this.onClickPagePrev()}>\r\n                                                <svg className=\"icon icon--dark\" dangerouslySetInnerHTML={{__html: utils.use('chevrons-left')}} />\r\n                                            </button>\r\n                                            <ul className=\"main__page-list\">\r\n                                                {pagesList}\r\n                                            </ul>\r\n                                            <button className=\"main__page-item main__page-item--btn\" onClick={() => this.onClickPageNext()}>\r\n                                                <svg className=\"icon icon--dark\" dangerouslySetInnerHTML={{__html: utils.use('chevrons-right')}} />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button className=\"btn btn__primary btn__primary--outline main__btn\" onClick={() => this.onLoadMore()}>\r\n                                        Load more\r\n                                        <svg className=\"icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('chevrons-down')}} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Searchbar />\r\n                <Filter />\r\n                {view}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data.data,\r\n    filters: state.data.filters,\r\n    favorites: state.data.favoriteAds\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onSetFavorites: (list) => dispatch(actions.setFavorites(list)),\r\n    onLoading: () => dispatch(actions.setLoading())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(React.memo(Main)));","E:\\dec-exp-01-20\\src\\containers\\Post.js",["364"],"import React, { PureComponent } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as utils from '../utilities/utilities';\r\nimport Backdrop from '../UI/Backdrop';\r\nimport Dropdown from \"../components/Dropdown\";\r\n\r\nclass Publish extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            // -------- Data -----------\r\n\r\n            business_type: 'Individual',\r\n            adType: 'sell',\r\n            mainTitle: '',\r\n            description: '',\r\n            currency: 'uzsom',\r\n            numbers: ['+998994886928'],\r\n            email: '',\r\n            name: '',\r\n            images: [],\r\n\r\n\r\n            mileage: '',\r\n            year: '',\r\n            condition: 'new',\r\n            type: 'boys',\r\n\r\n\r\n            // -------------------------\r\n\r\n            types: {\r\n                sell: 'Sell',\r\n                exchange: 'Exchange',\r\n                give: 'Give away'\r\n            },\r\n            showCat: false,\r\n            activeSubCat: null,\r\n            subCatTitle: null,\r\n            activeAfter: null,\r\n            activeCat: null,\r\n            error: null,\r\n\r\n            categories: {},\r\n            filterObj: null,\r\n        };\r\n\r\n        this.fileRef = React.createRef();\r\n        this.priceInputRef = React.createRef();\r\n    }\r\n\r\n    importCategories = () => {\r\n        import(`../store/Categories/categories_${this.props.lang.val}`)\r\n            .then(res => {\r\n                this.setState({ categories: res.default });\r\n            })\r\n            .catch(er => console.log(er));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.importCategories();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.activeAfter !== prevState.activeAfter) {\r\n            const category = this.state.categories[this.state.activeAfter].val;\r\n            console.log(category);\r\n\r\n            this.setState({ activeSubCat: null }, () => {\r\n                console.log('hey')\r\n                import(`../store/PostFilters/${this.props.lang.val}/${category}`)\r\n                    .then(filter => {\r\n                        this.setState({ filterObj: filter.default }, () => {\r\n                            console.log(this.state.filterObj);\r\n                        });\r\n                    })\r\n                    .catch(er => {\r\n                        \r\n                    });\r\n            });\r\n        }\r\n        if (this.props.lang.val !== prevProps.lang.val) this.importCategories();\r\n    }\r\n\r\n    onAddNumber = () => {\r\n        if (this.state.numbers.length < 3) {\r\n            this.setState(prevState => {\r\n                const newNums = [...prevState.numbers, ''];\r\n                return { numbers: newNums };\r\n            });\r\n        }\r\n    }\r\n    \r\n    onInputNumber = (val, index) => {\r\n        if (utils.isNum(parseInt(val)) || val === '' || val === '+') {\r\n            this.setState(prevState => {\r\n                const numbers = prevState.numbers.map((el, i) => {\r\n                    if (i === index) return el = val;\r\n                    else return el;\r\n                });\r\n                return { numbers };\r\n            });\r\n        }\r\n    }\r\n\r\n    onInputDescription = (e) => this.setState({ description: e.target.value });\r\n    onInputTitle = (e) => this.setState({ mainTitle: e.target.value });\r\n\r\n\r\n    onChangeCurrency = (c) => this.setState({ currency: c });\r\n    onChangeBusinessType = (type) => this.setState({ business_type: type });\r\n    onChangeAdType = (type) => this.setState({ adType: type });\r\n\r\n    onOpenCatPop = () => this.setState({ showCat: true });\r\n    onCloseCatPop = () => this.setState({ showCat: false });\r\n\r\n    setActiveCat = (cat) => this.setState({ activeCat: cat, activeAfter: cat, activeSubCat: null });\r\n    unsetActiveCat = () => this.setState({ activeCat: null });\r\n\r\n    onSelectSubCat = (subCat) => {\r\n        this.setState({\r\n            activeSubCat: subCat\r\n        }, () => this.setState({ showCat: false, activeCat: null }));\r\n    }\r\n\r\n    appendImage = (el, files) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(files);\r\n        reader.onload = () => {\r\n\r\n            const imgInitial = el.querySelector('.post__img');\r\n            if (imgInitial) imgInitial.remove();\r\n\r\n            const img = document.createElement('img');\r\n            img.classList.add('post__img');\r\n            img.src = reader.result;\r\n            el.appendChild(img);\r\n        };\r\n    }\r\n\r\n    onDeleteImage = (index) => {\r\n        this.setState(prevState => {\r\n            const images = prevState.images.filter((el, i) => i !== index);\r\n            return { images };\r\n        }, () => {\r\n            const photoContainers = Array.from(document.querySelectorAll('.post__figure'));\r\n            photoContainers[index].querySelector('.post__img').remove();\r\n\r\n            console.log(this.state.images);\r\n\r\n            this.state.images.forEach((el, i) => this.appendImage(photoContainers[i], el));\r\n\r\n            const imageAfter = photoContainers[index + 1].querySelector('.post__img');\r\n            if (imageAfter) imageAfter.remove();\r\n\r\n            const imageLast = photoContainers[this.state.images.length].querySelector('.post__img');\r\n            if (imageLast) imageLast.remove();\r\n        });\r\n    }\r\n\r\n    onImageUpload = () => {\r\n        const files = this.fileRef.current.files;\r\n\r\n        if (files.length && this.state.images.length < 7) {\r\n            let photos = Array.from(files).slice(0, 7);\r\n\r\n            const largeFile = photos.find(el => el.size > 2000000);\r\n\r\n            const fileTypeArr = photos.map(el => el.type.startsWith('image/'));\r\n            const typeOk = !fileTypeArr.some(el => el === false);\r\n\r\n            if (typeOk) {\r\n                if (!largeFile) {\r\n                    this.setState(prevState => {\r\n                        return { images: [...prevState.images, ...photos] };\r\n                    }, () => {\r\n                        const photoContainers = Array.from(document.querySelectorAll('.post__figure'));\r\n    \r\n                        this.state.images.forEach((el, i) => this.appendImage(photoContainers[i], el));\r\n                    });\r\n                } else this.setState({ error: `File \"${largeFile.name}\" exceeded maximum size of 2MB` });\r\n            } else this.setState({ error: 'Only image files are allowed' });\r\n        }\r\n    }\r\n\r\n    onSubmitPost = () => {\r\n        // this.state.mainTitle;\r\n        // this.state.description;\r\n        // this.state.type;\r\n        // this.state.email;\r\n        // this.state.name;\r\n        // const numbers = this.state.numbers.filter(el => {\r\n        //      if (el !== '') return el;\r\n        //      return null;\r\n        // });\r\n        const price = this.priceInputRef.current.value;\r\n        let category = this.state.categories[this.state.activeAfter];\r\n        let subcategory = this.state.activeSubCat;\r\n        \r\n        if ((this.state.mainTitle && this.state.description && this.state.name) !== '' && (category.val && subcategory)) {\r\n            if ((this.state.adType === 'sell') && (this.state.price !== '')) {\r\n                console.log('nu che sellnem');\r\n            }\r\n            console.log(this.state);\r\n            \r\n    \r\n            const formatData = new FormData();\r\n            this.state.images.forEach(el => formatData.append('photos[]', el));\r\n        }\r\n    }\r\n\r\n    onSetSpecification = (param, val) => {\r\n        this.setState({ [param]: val }, () => console.log(this.state[param]));\r\n    }\r\n\r\n    render() {\r\n        const typesArr = [];\r\n        for (let key in this.state.types) {\r\n            typesArr.push({\r\n                id: key,\r\n                value: this.state.types[key]\r\n            })\r\n        }\r\n        const types = typesArr.map(el => {\r\n            return (\r\n                <div className=\"dropdown__item\" key={el.id} onClick={() => this.onChangeAdType(el.id)}>\r\n                    <div className=\"dropdown__link post__dropitem\">{el.value}</div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let subOptions = null;\r\n        let inputItems = null;\r\n        if (this.state.filterObj && this.state.activeSubCat) {\r\n\r\n            subOptions = this.state.filterObj.items[this.state.activeSubCat].sub.map((obj, index) => {\r\n                \r\n                const dropItems = obj.items.map((el, i) => {\r\n                    return (\r\n                        <div className=\"dropdown__item\" key={i}>\r\n                            <div className=\"dropdown__link post__dropitem\" onClick={() => this.onSetSpecification(obj.val, el.val)}>{utils.capitalize(el.title)}</div>\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                const defaultTitle = obj.items.find(el => el.val === this.state[obj.val]).title;\r\n\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        <p className=\"post__title mb-1\">{obj.title}</p>\r\n                        <div className=\"post__box\">\r\n                            <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                {defaultTitle}\r\n                                <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                            </div>\r\n                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                {dropItems}\r\n                            </Dropdown>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            });\r\n        \r\n            inputItems = this.state.filterObj.items[this.state.activeSubCat].inputs.map((el, i) => {\r\n                return (\r\n                    <div className=\"mb-15\" key={i}>\r\n                        <p className=\"post__title mb-1\">{el.title}</p>\r\n                        <input type=\"text\" placeholder={el.title} className=\"post__input\" onChange={() => {}} />\r\n                    </div>\r\n                );\r\n            });\r\n\r\n        }\r\n\r\n        const catItemsArr = [];\r\n        let subItems = null;\r\n        let catItems = null;\r\n        if (this.state.categories) {\r\n            for (let key in this.state.categories) {\r\n                catItemsArr.push({\r\n                    id: key,\r\n                    title: this.state.categories[key].title,\r\n                    icon: this.state.categories[key].icon\r\n                });\r\n            }\r\n    \r\n            catItems = catItemsArr.map((el) => {\r\n                return (\r\n                    <li \r\n                        className=\"categories__item\"\r\n                        key={el.id}\r\n                        onClick={() => this.setActiveCat(el.id)}>\r\n                        <div className=\"categories__link\">\r\n                            <div className=\"categories__group\">\r\n                                <svg className=\"categories__icon categories__icon--cat\" dangerouslySetInnerHTML={{__html: utils.useCat(el.icon)}} />\r\n                                {el.title}\r\n                            </div>\r\n                            <svg className=\"categories__icon categories__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                        </div>\r\n                    </li>\r\n                );\r\n            });\r\n            \r\n            if (this.state.activeCat) {\r\n                subItems = this.state.categories[this.state.activeCat].subCategories.map((el, i) => {\r\n                    return (\r\n                        <li className=\"categories__subitem\" key={i}>\r\n                            <div className=\"categories__link categories__link--sub\" onClick={() => this.onSelectSubCat(el.val)}>\r\n                                <svg className=\"categories__icon categories__icon--sub\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                {el.title}\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let title = null;\r\n        if (this.state.activeSubCat && this.state.activeAfter) {\r\n            title = this.state.categories[this.state.activeAfter].subCategories.find(el => el.val === this.state.activeSubCat).title;\r\n        }\r\n\r\n        const numbers = this.state.numbers.slice(1).map((el, i) => {\r\n            return (\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Your contact number\" \r\n                    className=\"post__input post__input--singlebtn mb-15\" \r\n                    value={this.state.numbers[i + 1]} \r\n                    onChange={(e) => this.onInputNumber(e.target.value, i + 1)} \r\n                    maxLength={15} />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"post\">\r\n                    <div className=\"container\">\r\n                        <div className=\"post__wrapper\">\r\n                            <div className=\"post__head\">\r\n                                <h2 className=\"heading heading__2 mb-1\">Post new add</h2>\r\n                                <span className=\"post__text\">\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id tellus a eros vulputate euismod in at orci. Ut felis ipsum, bibendum vitae elit viverra, consectetur tincidunt lorem. Donec lectus.\r\n                                </span>\r\n                            </div>\r\n                            {this.state.error && <p className=\"post__hint post__hint--red mb-2\">{this.state.error}</p>}\r\n                            <div className=\"post__main\">\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Add photos</p>\r\n                                    <div className=\"post__uploadbox\">\r\n                                        <input \r\n                                            className=\"post__input d-none\" \r\n                                            type=\"file\" \r\n                                            multiple \r\n                                            ref={this.fileRef} \r\n                                            onChange={() => this.onImageUpload()} />\r\n                                        <div className=\"post__imagebox  post__imagebox--main\">\r\n                                            <figure className=\"post__figure post__figure--main\" onClick={() => this.fileRef.current.click()}>\r\n                                                <svg className=\"post__icon post__icon--main mb-1\" dangerouslySetInnerHTML={{__html: utils.use('image')}} />\r\n                                                <span className=\"post__prompt\">Click here to uload main photo</span>\r\n                                            </figure>\r\n                                            {this.state.images[0] && <div className=\"post__overlay\">\r\n                                                <button className=\"post__btn post__btn--delete\" onClick={() => this.onDeleteImage(0)}>\r\n                                                    <svg className=\"post__icon post__icon--cat\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                </button>\r\n                                            </div>}\r\n                                        </div>\r\n                                        <div className=\"post__row\">\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[1] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(1)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[2] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(2)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[3] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(3)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[4] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(4)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[5] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(5)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[6] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(6)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <p className=\"post__hint post__hint--left mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt nec nibh non porta. Donec.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Main title</p>\r\n                                    <label className=\"post__label\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"post__input post__input--title\"\r\n                                            placeholder=\"Enter Ad title\"\r\n                                            onChange={(e) => this.onInputTitle(e)}\r\n                                            value={this.state.mainTitle} \r\n                                            maxLength=\"30\" />\r\n                                        <span className=\"post__counter mt-1\">{30 - this.state.mainTitle.length} characters left</span>\r\n                                    </label>\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam maximus nibh vel hendrerit maximus. Proin imperdiet elit ipsum, in maximus lectus faucibus in. Praesent eu nunc ut quam mattis rhoncus.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Category</p>\r\n                                    <button className=\"post__input post__input--cat post__input--cat-main\" onClick={() => this.onOpenCatPop()}>\r\n                                        <span className=\"post__val\">\r\n                                            {this.state.activeAfter && <svg className=\"post__icon post__icon--cat icon__dark mr-1\" dangerouslySetInnerHTML={{__html: utils.useCat(this.state.categories[this.state.activeAfter].icon)}} />}\r\n                                            {title ? title : 'Select category'}\r\n                                        </span>\r\n                                        <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                    </button>\r\n                                    {this.state.activeAfter &&\r\n                                        <React.Fragment>\r\n                                            <div className=\"post__catselected post__input mt-1\" onClick={() => this.onOpenCatPop()}>\r\n                                                <ul className=\"post__list\">\r\n                                                    <li className=\"post__item\">{this.state.categories[this.state.activeAfter].title}</li>\r\n                                                    <li className=\"post__item\">{title}</li>\r\n                                                </ul>\r\n                                                <button className=\"post__btn post__btn--catitems\">\r\n                                                    <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevrons-right')}} />\r\n                                                </button>\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt nec nibh non porta. Donec.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group post__group--details m-0\">\r\n                                    <div className=\"post__group\">\r\n                                        <div className=\"mb-15\">\r\n                                            <p className=\"post__title mb-1\">Price</p>\r\n                                            <div className=\"post__box\">\r\n                                                <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                                    {this.state.types[this.state.adType]}\r\n                                                    <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                                </div>\r\n                                                <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                    {types}\r\n                                                </Dropdown>\r\n                                            </div>\r\n                                            {this.state.adType === 'sell' &&\r\n                                                <div className=\"post__double-form mb-1\">\r\n                                                    <input type=\"text\" placeholder=\"Price\" className=\"post__input post__input--price mr-1\" ref={this.priceInputRef} />\r\n                                                    <div className=\"post__box\">\r\n                                                        <div className=\"post__input post__input--cat post__input--cur\" tabIndex=\"0\">\r\n                                                            {this.state.currency.toUpperCase()}\r\n                                                            <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                                        </div>\r\n                                                        <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                            <div className=\"dropdown__item\" onClick={() => this.onChangeCurrency('usd')}>\r\n                                                                <div className=\"dropdown__link post__dropitem post__dropitem--cur\">USD</div>\r\n                                                            </div>\r\n                                                            <div className=\"dropdown__item\" onClick={() => this.onChangeCurrency('uzsom')}>\r\n                                                                <div className=\"dropdown__link post__dropitem post__dropitem--cur\">UZSOM</div>\r\n                                                            </div>\r\n                                                        </Dropdown>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        <p className=\"post__title mb-1\">Type of business</p>\r\n                                        <div className=\"post__box\">\r\n                                            <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                                {utils.capitalize(this.state.business_type)}\r\n                                                <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                            </div>\r\n                                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                <div className=\"dropdown__item\" onClick={() => this.onChangeBusinessType('individual')}>\r\n                                                    <div className=\"dropdown__link post__dropitem\">Individual</div>\r\n                                                </div>\r\n                                                <div className=\"dropdown__item\" onClick={() => this.onChangeBusinessType('business')}>\r\n                                                    <div className=\"dropdown__link post__dropitem\">Business</div>\r\n                                                </div>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"post__group\">{subOptions}</div>\r\n                                    <div className=\"post__group\">{inputItems}</div>\r\n                                </div>\r\n                                <div className=\"post__group post__group--des\">\r\n                                    <p className=\"post__title mb-1\">Personalized description</p>\r\n                                    <label className=\"post__label\">\r\n                                        <textarea \r\n                                            className=\"post__input post__input--des\" \r\n                                            placeholder=\" \" \r\n                                            value={this.state.description}\r\n                                            onChange={(e) => this.onInputDescription(e)}\r\n                                            maxLength=\"4500\"></textarea>\r\n                                        <span className=\"post__counter mt-1\">{4500 - this.state.description.length} characters left</span>\r\n                                    </label>\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In id nulla porta, rutrum enim eget, luctus neque. Cras scelerisque imperdiet.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post__head post__head--doubleline\">\r\n                                <h2 className=\"heading heading__2 mb-1\">Contact details</h2>\r\n                                <span className=\"post__text\">\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc mattis.\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"post__main\">\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Contact numbers</p>\r\n                                    {this.state.numbers.length > 1 && <p className=\"post__text mb-1\">If you do not want to add a number laeve number field empty</p>}\r\n                                    <div className=\"post__double-form\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            placeholder=\"Your contact number\" \r\n                                            className=\"post__input post__input--singlebtn mr-1\" \r\n                                            value={this.state.numbers[0]} \r\n                                            onChange={(e) => this.onInputNumber(e.target.value, 0)} \r\n                                            maxLength={15} />\r\n                                        <button className=\"post__input post__input--btn post__input--cat\" onClick={() => this.onAddNumber()}>\r\n                                            Add\r\n                                            <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                        </button>\r\n                                    </div>\r\n                                    {numbers}\r\n                                    <p className=\"post__title mb-1 mt-15\">Email address</p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        placeholder=\"Your email address (optional)\"\r\n                                        className=\"post__input mb-15\"\r\n                                        value={this.state.email}\r\n                                        onChange={(e) => this.setState({ email: e.target.value })} />\r\n                                    <p className=\"post__title mb-1\">Contact Name</p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        placeholder=\"Your contact name\"\r\n                                        className=\"post__input mb-15\" \r\n                                        value={this.state.name}\r\n                                        onChange={(e) => this.setState({ name: e.target.value })} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"post__footer\">\r\n                            <div className=\"container\">\r\n                                <div className=\"post__footwrap\">\r\n                                    <button className=\"btn post__btn-main btn__primary\" onClick={() => this.onSubmitPost()}>\r\n                                        Post\r\n                                        <svg className=\"icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('check-circle')}} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {this.state.showCat &&\r\n                    <div className=\"categories__container\">\r\n                        <Backdrop z={96} click={this.onCloseCatPop} />\r\n                        {this.state.activeCat && <Backdrop z={9} click={this.unsetActiveCat} />}\r\n                        <div className=\"categories categories--fix\">\r\n                            <ul className=\"categories__list categories__list--select\">{catItems}</ul>\r\n                            {this.state.activeCat && \r\n                                <div className=\"categories__panel\">\r\n                                    <div className=\"categories__subhead\">\r\n                                        <h2 className=\"categories__heading categories__heading--sub\">\r\n                                            {this.state.categories[this.state.activeCat].title}\r\n                                            <svg className=\"categories__icon--large\" dangerouslySetInnerHTML={{__html: utils.useCat(this.state.categories[this.state.activeCat].icon)}} />\r\n                                        </h2>\r\n                                        <button className=\"categories__btn categories__btn--sub\" onClick={() => this.unsetActiveCat()}>\r\n                                            <svg className=\"categories__icon categories__icon--close\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                        </button>\r\n                                    </div>\r\n                                    <ul className=\"categories__sublist\">\r\n                                        {subItems}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.localization.lang\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Publish);","E:\\dec-exp-01-20\\src\\containers\\Authorization\\AuthSignup.js",["365"],"import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport emailValidator from 'email-validator';\r\nimport axios from 'axios';\r\n\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport Language from '../../components/Language';\r\nimport Logo from '../../components/Logo';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nclass AuthSignup extends Component {\r\n    constructor(props) { \r\n        super(props);\r\n        \r\n        this.state = {\r\n            inputFocused: false,\r\n            error: null,\r\n            success: false,\r\n            proceed: false,\r\n            verified: true,\r\n            number: ''\r\n        }\r\n\r\n        this.checkboxRef = React.createRef();\r\n        this.numInputRef = React.createRef();\r\n        this.passRef = React.createRef();\r\n        this.passConfirmRef = React.createRef();\r\n        this.nameRef = React.createRef();\r\n        this.lNameRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.location.hash = '';\r\n    }\r\n\r\n    clearErrorHighlight = () => {\r\n        this.numInputRef.current.setCustomValidity('');\r\n        this.nameRef.current.setCustomValidity('');\r\n        this.lNameRef.current.setCustomValidity('');\r\n        this.passRef.current.setCustomValidity('');\r\n        this.passConfirmRef.current.setCustomValidity('');\r\n        this.setState({ error: null });\r\n    }\r\n\r\n    validated = (filled, validNum, validPass, passwordsMatch, agree) => {\r\n\r\n        if (filled) {\r\n            if (!validNum) {\r\n                this.numInputRef.current.setCustomValidity('Invalid phone number');\r\n                this.numInputRef.current.focus();\r\n                this.setState({ error: 'Invalid phone number' });\r\n                return false;\r\n            } else if (!validPass) {\r\n                this.passRef.current.setCustomValidity('Password length is less than 6');\r\n                this.passRef.current.focus();\r\n                this.setState({ error: 'Password length must be at least 6 characters in length' });\r\n                return false;\r\n            } else if (!passwordsMatch) {\r\n                this.passRef.current.setCustomValidity('Passwords do not match');\r\n                this.passConfirmRef.current.setCustomValidity('Passwords do not match');\r\n                this.passRef.current.focus();\r\n                this.setState({ error: 'Passwords do not match' });\r\n                return false;\r\n            } else if (!agree) {\r\n                this.setState({ error: 'You you have to accept website terms of use' });\r\n                return false;\r\n            } else {\r\n                this.clearErrorHighlight();\r\n                return true;\r\n            }\r\n        } else {\r\n            this.numInputRef.current.setCustomValidity('Empty');\r\n            this.nameRef.current.setCustomValidity('Empty');\r\n            this.lNameRef.current.setCustomValidity('Empty');\r\n            this.passRef.current.setCustomValidity('Empty');\r\n            this.passConfirmRef.current.setCustomValidity('Empty');\r\n            this.nameRef.current.focus();\r\n            this.setState({ error: 'Please fill out all the fields' });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSignUp = (e) => {\r\n        e.preventDefault();\r\n        const password = this.passRef.current;\r\n        const passwordConf = this.passConfirmRef.current;\r\n\r\n        const number = this.state.number;\r\n        const lastName = this.lNameRef.current;\r\n        const name = this.nameRef.current;\r\n        \r\n        if ((password.value && passwordConf.value && number && name.value && lastName.value) !== '') {\r\n\r\n            const validNum = number.length > 7;\r\n            const validPass = password.value.length >= 6;\r\n            const passwordsMatch = passwordConf.value === password.value;\r\n\r\n            if (this.validated(true, validNum, validPass, passwordsMatch, true)) {\r\n                const data = {\r\n                    phone: number,\r\n                    password: password.value,\r\n                    email: 'test@mail.eu',\r\n                    firstname: name.value,\r\n                    lastname: lastName.value\r\n                };\r\n                axios.post('http://api.soybaliq.uz/api/auth/register', data)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        window.location.hash = '#confirm';\r\n                    }).catch(er => {\r\n                        console.log(er);\r\n                        this.setState({ error: er.message });\r\n                    });\r\n            }\r\n        } else this.validated(false);\r\n    }\r\n\r\n    onProceed = (e) => {\r\n        e.preventDefault();\r\n        const number = this.state.number;\r\n        const agree = this.checkboxRef.current.checked;\r\n        const name = this.nameRef.current;\r\n        const lastName = this.lNameRef.current;\r\n\r\n        const validNum = number.length > 7;\r\n\r\n        if ((number && name.value && lastName.value) !== '') {\r\n\r\n            if (this.validated(true, validNum, true, true, agree)) {\r\n                console.log(number);\r\n                console.log(agree);\r\n\r\n                // ---------------------------------\r\n                \r\n                // ........\r\n                // this.props.history.push('#second-face');\r\n                window.location.hash = 'second-face';\r\n            }\r\n        } else this.validated(false);\r\n    }\r\n\r\n    onInputnumber = (val) => {\r\n        if (utils.isNum(parseInt(val)) || val === '+' || val === '') this.setState({ number: val });\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"authorization\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"authorization__lang\" dropClass=\"dropdown--left-fix\" />\r\n                <div className=\"authorization__wrapper authorization__wrapper--high\" onClick={() => this.onFocus()}>\r\n                    <div className=\"authorization__head\">\r\n                        <Logo classImg=\"logo__figure--nav\" />\r\n                        <Link to=\"/signin\" className=\"authorization__info authorization__info--heading\">\r\n                            <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use('log-in')}} />\r\n                            Sign in\r\n                        </Link>\r\n                    </div>\r\n                    {this.state.error && <p className=\"authorization__error mb-1\">{this.state.error}</p>}\r\n                    <form className=\"authorization__form\" id=\"second-face\">\r\n                        <p className=\"authorization__info authorization__info--heading mb-1\">Set your password</p>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"password\" \r\n                                placeholder=\"Enter your password\" \r\n                                ref={this.passRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Your password</p>\r\n                        </label>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"password\" \r\n                                placeholder=\"Confirm your password\"\r\n                                ref={this.passConfirmRef} />\r\n                            <p className=\"authorization__label authorization__label--abs mb-2\">Confirm your password</p>\r\n                        </label>\r\n                        <button className=\"btn btn__primary authorization__btn mt-1 mb-1\" onClick={(e) => this.onSignUp(e)}>\r\n                            Proceed\r\n                            <svg className=\"icon ml-5 icon--8\" dangerouslySetInnerHTML={{__html: utils.use('user-plus')}} />\r\n                        </button>\r\n                    </form>\r\n                    <form className=\"authorization__form\" id=\"first-face\">\r\n                        <p className=\"authorization__info authorization__info--heading mb-1\">Sign up</p>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"First name\"\r\n                                ref={this.nameRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">First name</p>\r\n                        </label>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Last name\"\r\n                                ref={this.lNameRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Last name</p>\r\n                        </label>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Your phone number\" \r\n                                ref={this.numInputRef}\r\n                                value={this.state.number} \r\n                                onChange={(e) => this.onInputnumber(e.target.value)} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Your number or email</p>\r\n                        </label>\r\n                        <div className=\"authorization__item\">\r\n                            <input type=\"checkbox\" id=\"terms\" className=\"checkbox\" ref={this.checkboxRef} />\r\n                            <label htmlFor=\"terms\" className=\"label\">\r\n                                <span></span>\r\n                                Agree to terms of use\r\n                            </label>\r\n                        </div>\r\n                        <button className=\"btn btn__primary authorization__btn mb-1\" onClick={(e) => this.onProceed(e)}>\r\n                            Proceed\r\n                            <svg className=\"icon ml-5 icon--8\" dangerouslySetInnerHTML={{__html: utils.use('user-plus')}} />\r\n                        </button>\r\n                        <p className=\"authorization__info\">Existing user? <Link to=\"/signin\" className=\"authorization__info--high\">Sign in</Link></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AuthSignup);","E:\\dec-exp-01-20\\src\\containers\\Authorization\\AuthSignin.js",["366","367"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as emailValidator from 'email-validator';\r\nimport axios from 'axios';\r\n\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport Language from '../../components/Language';\r\nimport Logo from '../../components/Logo';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nclass AuthSignin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputFocused: false,\r\n            error: null,\r\n            number: ''\r\n        }\r\n\r\n        this.checkboxRef = React.createRef();\r\n        this.passRef = React.createRef();\r\n        this.loginRef = React.createRef();\r\n    }\r\n\r\n    clearErrorHighlight = () => {\r\n        this.loginRef.current.setCustomValidity('');\r\n        this.passRef.current.setCustomValidity('');\r\n        this.setState({ error: null });\r\n    }\r\n\r\n    onProceed = (e) => {\r\n        e.preventDefault();\r\n        const mainInput = this.state.number;\r\n        const password = this.passRef.current;\r\n        const remember = this.checkboxRef.current.checked;\r\n\r\n        if ((mainInput && password.value) !== '') {\r\n\r\n            console.log(mainInput);\r\n            console.log(password.value);\r\n            console.log(remember);\r\n\r\n            // --------------------------------------------\r\n            \r\n            // ..........\r\n        } else {\r\n            this.loginRef.current.setCustomValidity('Empty');\r\n            this.passRef.current.setCustomValidity('Empty');\r\n            this.loginRef.current.focus();\r\n            this.setState({ error: 'Please fill out all of the fields' });\r\n        }\r\n    }\r\n\r\n    onInputNumber = (val) => {\r\n        if (utils.isNum(parseInt(val)) || val === '+' || val === '') this.setState({ number: val });\r\n    }\r\n\r\n    onTogglePass = (e) => {\r\n        if (this.passRef.current.value !== '') {\r\n            if (this.passRef.current.type === 'password') this.passRef.current.type = 'text';\r\n            else this.passRef.current.type = 'password';\r\n        }\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    render() {\r\n        const wrapClass = ['authorization__wrapper'];\r\n        if (this.state.inputFocused) wrapClass.push('authorization__wrapper--animate');\r\n\r\n        return (\r\n            <div className=\"authorization\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"authorization__lang\" dropClass=\"dropdown--left-fix\"/>\r\n                <div className={wrapClass.join(' ')} onClick={() => this.onFocus()}>\r\n                    <div className=\"authorization__head\">\r\n                        <Logo classImg=\"logo__figure--nav\" />\r\n                        <Link to=\"/signup\" className=\"authorization__info authorization__info--heading\">\r\n                            <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use('user-plus')}} />\r\n                            Sign up\r\n                        </Link>\r\n                    </div>\r\n                    {this.state.error && <p className=\"authorization__error mb-1\">{this.state.error}</p>}\r\n                    <form className=\"authorization__form\">\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Your phone number\" \r\n                                ref={this.loginRef}\r\n                                value={this.state.number} \r\n                                onChange={(e) => this.onInputNumber(e.target.value)} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Your number or email</p>\r\n                        </label>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"password\" \r\n                                placeholder=\"Enter your password\"\r\n                                ref={this.passRef} />\r\n                            <button type=\"button\" className=\"authorization__btn--abs\" onClick={(e) => this.onTogglePass(e)}>\r\n                                <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use('eye-off')}} />\r\n                            </button>\r\n                            <p className=\"authorization__label authorization__label--abs\">Your password</p>\r\n                        </label>\r\n                        <div className=\"authorization__item mb-1\">\r\n                            <input type=\"checkbox\" id=\"remember\" className=\"checkbox\" ref={this.checkboxRef} />\r\n                            <label htmlFor=\"remember\" className=\"label\">\r\n                                <span></span>\r\n                                Stay logged in\r\n                            </label>\r\n                        </div>\r\n                        <button className=\"btn btn__primary authorization__btn mb-1\" onClick={(e) => this.onProceed(e)}>\r\n                            Sign in\r\n                            <svg className=\"icon ml-5 icon--8\" dangerouslySetInnerHTML={{__html: utils.use('log-in')}} />\r\n                        </button>\r\n                        <Link to=\"/password-reset\" className=\"authorization__info mb-15\">Reset password</Link>\r\n                        <p className=\"authorization__info\">Do not have an account? <Link to=\"/signup\" className=\"authorization__info--high\">Sign up</Link></p>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthSignin;","E:\\dec-exp-01-20\\src\\containers\\Authorization\\ResetPass.js",["368"],"import React, { Component } from 'react';\r\nimport * as emailValidator from 'email-validator';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport Language from '../../components/Language';\r\nimport Logo from '../../components/Logo';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nclass ResetPass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputFocused: false,\r\n            showNextStep: false,\r\n            error: null,\r\n            success: false,\r\n            attempted: false,\r\n            number: false,\r\n            time: 300\r\n        }\r\n\r\n        this.phoneRef = React.createRef();\r\n        this.codeFieldRef = React.createRef();\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    timerWait = () => {\r\n        if (this.state.time > 0) \r\n            this.setState((prevState) => {\r\n                return { time: prevState.time - 1 }\r\n            });\r\n    }\r\n\r\n    validate = (num, email) => {\r\n        if (num && num.length < 9) {\r\n            this.phoneRef.current.setCustomValidity('Invalid phone number');\r\n            this.setState({ error: 'Please, enter valid phone number' });\r\n            return false;\r\n        } else if (email && !emailValidator.validate(this.phoneRef.current.value)) {\r\n            this.phoneRef.current.setCustomValidity('Please, enter valid email address');\r\n            this.setState({ error: 'Please, enter valid email address' });\r\n            return false;\r\n        } else {\r\n            this.phoneRef.current.setCustomValidity('');\r\n            this.setState({ error: null });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    makeHttp = (login, query) => {\r\n        window.location.hash = '#reset';\r\n    }\r\n\r\n    onProceed = (e) => {\r\n        e.preventDefault();\r\n        const mainInput = this.phoneRef.current;\r\n        const code = this.codeFieldRef.current;\r\n\r\n        if (mainInput.value !== '') {\r\n            let isNum = utils.isNum(parseInt(mainInput.value));\r\n            if (mainInput.value.includes('+')) isNum = true;\r\n\r\n            let query = isNum ? 'phone' : 'email';\r\n            if (isNum) this.setState({ number: true });\r\n            let valid = false;\r\n            if (isNum) valid = this.validate(mainInput.value);\r\n            else valid = this.validate(null, mainInput.value);\r\n\r\n            if (!this.state.attempted) {\r\n    \r\n                if (valid) {\r\n                    const timer = setInterval(this.timerWait, 1000);\r\n                    this.setState({\r\n                        showNextStep: true,\r\n                        attempted: true\r\n                    });\r\n                }\r\n\r\n            } else if (this.state.attempted && valid) {\r\n                if (code.value !== '') this.makeHttp(mainInput.value, query);\r\n                else if (this.state.time === 0) {\r\n                    this.setState({ time: 300 });\r\n                    code.focus();\r\n                }\r\n            }\r\n        } else {\r\n            mainInput.focus();\r\n            mainInput.setCustomValidity('Please, enter your email address or phone number');\r\n            return this.setState({ error: 'Please, enter your email address or phone number' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const wrapClass = ['authorization__wrapper'];\r\n        if (this.state.inputFocused) wrapClass.push('authorization__wrapper--animate');\r\n\r\n        return (\r\n            <div className=\"authorization\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"authorization__lang\" dropClass=\"dropdown--left-fix\"/>\r\n                <form className={wrapClass.join(' ')} onClick={() => this.onFocus()}>\r\n                    <div className=\"authorization__head\">\r\n                        <Logo classImg=\"logo__figure--nav\" />\r\n                        <Link to=\"/signin\" className=\"authorization__info authorization__info--heading\">\r\n                            <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use('log-in')}} />\r\n                            Sign in\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"authorization__form\">\r\n                        <p className=\"authorization__info authorization__info--heading mb-1\">Reset password</p>\r\n                        {this.state.attempted && \r\n                            <p className=\"authorization__error authorization__error--success mb-2\">\r\n                                <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use(this.state.number ? 'phone' : 'mail')}} />\r\n                                The code is sent to your {this.state.number ? 'phone number' : 'email'}\r\n                            </p>\r\n                        }\r\n                        {this.state.error && <p className=\"authorization__error mb-1\">{this.state.error}</p>}\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input authorization__input--res input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Your number or email\"\r\n                                ref={this.phoneRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Your number or email</p>\r\n                        </label>\r\n                        {this.state.showNextStep && \r\n                            <React.Fragment>\r\n                                <label className=\"authorization__label\">\r\n                                    <input \r\n                                        className=\"authorization__input authorization__input--res input\" \r\n                                        type=\"text\" \r\n                                        placeholder=\"Enter the code\" \r\n                                        required\r\n                                        autoFocus \r\n                                        ref={this.codeFieldRef} />\r\n                                    <p className=\"authorization__label authorization__label--abs\">The code your recieved</p>\r\n                                </label>\r\n                            </React.Fragment>\r\n                        }\r\n                        <button className=\"btn btn__primary btn__primary--green authorization__btn\" onClick={(e) => this.onProceed(e)}>\r\n                            Reset Password\r\n                            <svg className=\"icon ml-5 icon--8\" dangerouslySetInnerHTML={{__html: utils.use('key')}} />\r\n                        </button>\r\n                        {!this.state.showNextStep && \r\n                            <p className=\"authorization__info mt-1\">Do not have an account?&nbsp;<Link to=\"/signup\" className=\"authorization__info--high\">Sign up</Link></p>\r\n                        }\r\n                        {(this.state.attempted && this.state.time > 0) && <p className=\"authorization__label authorization__label--timer mt-1\">You can request another code in {this.state.time}</p>}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPass);","E:\\dec-exp-01-20\\src\\UI\\LoadingScreen.js",[],"E:\\dec-exp-01-20\\src\\store\\actions\\actionTypes.js",[],"E:\\dec-exp-01-20\\src\\hoc\\asyncComponent\\asyncComponent.js",["369"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport LoadingScreen from '../../UI/LoadingScreen';\r\n\r\nconst asyncComponent = importedComponent => {\r\n    class LazyComp extends Component {\r\n        state = {\r\n            component: null,\r\n            loading: false\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.props.onSetLoading(true);\r\n            importedComponent()\r\n                .then(cmp => {\r\n                    this.setState({ component: cmp.default });\r\n                    this.props.onSetLoading(false);\r\n                })\r\n                .catch(er => {\r\n                    this.props.onError(er);\r\n                    this.props.onSetLoading(false);\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const Comp = this.state.component;\r\n            return (\r\n                <React.Fragment>\r\n                    {Comp && <Comp {...this.props} />}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    const mapDispatchToProps = dispatch => {\r\n        return {\r\n            onSetLoading: (val) => dispatch(actions.setLoadingForLazy(val)),\r\n            onError: () => dispatch(actions.handleError())\r\n        }\r\n    };\r\n\r\n    return connect(null, mapDispatchToProps)(LazyComp);\r\n};\r\n\r\n\r\n\r\nexport default asyncComponent;","E:\\dec-exp-01-20\\src\\components\\Profile\\Profile.js",["370","371","372"],"import React, { PureComponent } from 'react';\r\nimport { withRouter, Route, Switch, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\n\r\nimport Main from './Main';\r\nimport * as utils from '../../utilities/utilities';\r\nimport { ActiveAds, InactiveAds, PromotedAds } from './Ads/Ads';\r\nimport Favorites from './Favourites';\r\nimport Settings from './Settings';\r\nimport Payments from './Payments';\r\nimport Promotions from './Promotions';\r\nimport { Inbox, Sentbox, Spam } from './Messages';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass Profile extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.subAdsList = React.createRef();\r\n        this.subMessagesList = React.createRef();\r\n        this.subFavouritesList = React.createRef();\r\n\r\n        this.slideSubLists = this.slideSubLists.bind(this);\r\n        this.scrollToTop = this.scrollToTop.bind(this);\r\n    }\r\n\r\n    scrollToTop() { document.documentElement.scrollTop = 0; }\r\n\r\n    slideSubLists() {\r\n        if (this.props.match.params.section === 'ads') $(this.subAdsList.current).slideDown({ duration: 300 });\r\n        else $(this.subAdsList.current).slideUp({ duration: 300 });\r\n\r\n        if (this.props.match.params.section === 'messages') $(this.subMessagesList.current).slideDown({ duration: 300 });\r\n        else $(this.subMessagesList.current).slideUp({ duration: 300 });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.slideSubLists();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        this.slideSubLists();\r\n        if (this.props.match !== prevProps.match) this.scrollToTop();\r\n    }\r\n\r\n    render() {\r\n        const Ads = (\r\n            <React.Fragment>\r\n                <ActiveAds {...this.props} />\r\n                <InactiveAds {...this.props} />\r\n                <PromotedAds {...this.props} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        const Messages = (\r\n            <React.Fragment>\r\n                <Inbox {...this.props} />\r\n                <Sentbox {...this.props} />\r\n                <Spam {...this.props} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        const activeAdsCount = this.props.data.length;\r\n        const promotedAdsCount = this.props.data.filter(el => el.premium === true).length;\r\n        const inactiveAdsCount = this.props.data.length;\r\n\r\n        const favAdsCount = this.props.data.filter(el => el.favorite === true).length;\r\n        const favSearchesCount = 0;\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"container\">\r\n                    <div className=\"profile__wrapper\">\r\n                        <div className=\"profile__head\">\r\n                            <h2 className=\"heading heading__2\">Profile</h2>\r\n                            <div className=\"profile__nav\">\r\n                                Profile nav\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile__main\">\r\n                            <div className=\"profile__group profile__panel\">\r\n                                <h5 className=\"profile__link profile__link--heading\">{this.props.match.params.section}</h5>\r\n                                <ul className=\"profile__list\">\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/profile\" className=\"profile__link\" activeClassName=\"profile__link--active\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('user')}} />\r\n                                            Profile\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/ads\" activeClassName=\"profile__link--active-cursored\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('layout')}} />\r\n                                            My Ads\r\n                                        </NavLink>\r\n                                        <div className=\"profile__item profile__item--sub\" ref={this.subAdsList}>\r\n                                            <NavLink to=\"/user/ads/active\" activeClassName=\"profile__link--sub-active\" className=\"profile__link message-badge\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('message-square')}} />\r\n                                                Active\r\n                                                {activeAdsCount > 0 && <span className=\"message-badge__counter profile__mes-badge\">{activeAdsCount}</span>}\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/ads/inactive\" activeClassName=\"profile__link--sub-active\" className=\"profile__link message-badge\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('archive')}} />\r\n                                                Inactive\r\n                                                {inactiveAdsCount > 0 && <span className=\"message-badge__counter profile__mes-badge\">{inactiveAdsCount}</span>}\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/ads/promoted\" activeClassName=\"profile__link--sub-active\" className=\"profile__link message-badge\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('corner-right-up')}} />\r\n                                                Promoted\r\n                                                {promotedAdsCount > 0 && <span className=\"message-badge__counter profile__mes-badge\">{promotedAdsCount}</span>}\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/messages\" activeClassName=\"profile__link--active-cursored\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('mail')}} />\r\n                                            Messages\r\n                                        </NavLink>\r\n                                        <div className=\"profile__item profile__item--sub\" ref={this.subMessagesList}>\r\n                                            <NavLink to=\"/user/messages/inbox\" activeClassName=\"profile__link--sub-active\" className=\"profile__link\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('inbox')}} />\r\n                                                Inbox\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/messages/sentbox\" activeClassName=\"profile__link--sub-active\" className=\"profile__link\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('check-circle')}} />\r\n                                                Sentbox\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/messages/spam\" activeClassName=\"profile__link--sub-active\" className=\"profile__link\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('trash')}} />\r\n                                                Spam\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/favorites\" activeClassName=\"profile__link--active-cursored\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('heart')}} />\r\n                                            Favorites\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/settings\" activeClassName=\"profile__link--active\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('settings')}} />\r\n                                            Settings\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/payments\" activeClassName=\"profile__link--active\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('credit-card')}} />\r\n                                            Payments\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/promotions\" activeClassName=\"profile__link--active\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('trending-up')}} />\r\n                                            Promotions\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"profile__group profile__header\">\r\n                                <Switch>\r\n                                    <Route path=\"/user/profile\" render={() => <Main />}/>\r\n                                    <Route path=\"/user/ads\" exact render={() => Ads} />\r\n                                    <Route path=\"/user/ads/active\" render={() => <ActiveAds {...this.props} />} />\r\n                                    <Route path=\"/user/ads/inactive\" render={() => <InactiveAds {...this.props} />} />\r\n                                    <Route path=\"/user/ads/promoted\" render={() => <PromotedAds {...this.props} />} />\r\n                                    <Route path=\"/user/messages\" exact render={() => Messages}/>\r\n                                    <Route path=\"/user/messages/inbox\" exact render={() => <Inbox {...this.props} />}/>\r\n                                    <Route path=\"/user/messages/sentbox\" render={() => <Sentbox {...this.props} />}/>\r\n                                    <Route path=\"/user/messages/spam\" render={() => <Spam {...this.props} />}/>\r\n                                    <Route path=\"/user/favorites\" exact render={() => <Favorites {...this.props} />}/>\r\n                                    <Route path=\"/user/settings\" render={() => <Settings {...this.props} />}/>\r\n                                    <Route path=\"/user/payments\" render={() => <Payments {...this.props} />}/>\r\n                                    <Route path=\"/user/promotions\" render={() => <Promotions {...this.props} />}/>\r\n                                    <Route path=\"*\" render={() => <h1>404 Not Found</h1>} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.data.data,\r\n        searchLocation: state.localization.searchLocation\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));","E:\\dec-exp-01-20\\src\\store\\Categories\\categories_en.js",[],"E:\\dec-exp-01-20\\src\\store\\Categories\\categories_ru.js",[],"E:\\dec-exp-01-20\\src\\store\\Categories\\categories_uz.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\business_and_services.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\electronics.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\fashion_and_style.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\for_kids.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\home_and_garden.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\jobs.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\real_estate.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\pets.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\sports_hobby_and_comfort.js",[],"E:\\dec-exp-01-20\\src\\components\\Searchbar.js",[],"E:\\dec-exp-01-20\\src\\containers\\Navigation.js",[],"E:\\dec-exp-01-20\\src\\containers\\Footer.js",["373"],"import React from 'react';\r\n\r\nimport Logo from '../components/Logo';\r\nimport Language from '../components/Language';\r\n\r\nimport * as utils from '../utilities/utilities';\r\n\r\nconst Footer = props => {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    const navs = ['Help', 'Enterprise Adverts', 'Terms of use', 'Privacy Policy', 'SBUY Guide', 'Security measures', 'Site map', 'Map of regions', 'Career', 'Feedback'];\r\n\r\n    const navItems = navs.map((el, i) => {\r\n        return (\r\n            <li className=\"footer__item\" key={i}>\r\n                <a href=\"#\" className=\"footer__link\">{el}</a>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__head\">\r\n                <div className=\"container\">\r\n                    <div className=\"footer__headwrap\">\r\n                        <div className=\"navigation__item\">\r\n                            <svg className=\"footer__icon\" dangerouslySetInnerHTML={{__html: utils.use('home')}} />\r\n                            <h5 className=\"footer__heading\">Home</h5>\r\n                        </div>\r\n                        <Language class=\"navigation__item navigation__item--drop\" dropClass=\"dropdown--right-fix\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"footer__wrapper\">\r\n                    <div className=\"footer__body\">\r\n                        <div div className=\"footer__group\">\r\n                            <Logo class=\"footer__logo\" />\r\n                            <ul className=\"footer__list\">\r\n                                {navItems}\r\n                            </ul>\r\n                            <p className=\"footer__info\">\r\n                                For all questions, you can contact us<br/> at any convenient time by phone or email<br/>\r\n                                +998 (71) 240-60-50 <br/>\r\n                                sbuy@retail.uz\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"footer__info\">{year} SBUY&copy;</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default React.memo(Footer);","E:\\dec-exp-01-20\\src\\components\\Card.js",[],"E:\\dec-exp-01-20\\src\\components\\Filter.js",["374","375","376","377","378","379","380","381"],"E:\\dec-exp-01-20\\src\\components\\Categories.js",[],"E:\\dec-exp-01-20\\src\\components\\Adview.js",["382"],"E:\\dec-exp-01-20\\src\\UI\\Backdrop.js",[],"E:\\dec-exp-01-20\\src\\components\\Dropdown.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\transport_auto.js",[],"E:\\dec-exp-01-20\\src\\components\\Language.js",[],"E:\\dec-exp-01-20\\src\\components\\Logo.js",[],"E:\\dec-exp-01-20\\src\\utilities\\utilities.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Settings.js",["383"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport * as utils from '../../utilities/utilities';\r\nimport LoadingSub from '../../UI/LoadingSub';\r\nimport RegionsDropdown from '../RegionsDropdown';\r\n\r\nconst Settings = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    const [passTime, setPassTime] = useState('05.07.2021 16:43');\r\n    const [region, setRegion] = useState('Tashkent');\r\n\r\n    const passwordOldInputRef = useRef();\r\n    const passwordInputRef = useRef();\r\n    const passwordConfirmInputRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n    const prevRegionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        prevRegionRef.current = region;\r\n    });\r\n\r\n    const prevRegion = prevRegionRef.current;\r\n\r\n    const onTogglePass = (e) => {\r\n        if (passwordInputRef.current.value !== '') {\r\n            if (passwordInputRef.current.type === 'password') passwordInputRef.current.type = 'text';\r\n            else passwordInputRef.current.type = 'password';\r\n        }\r\n    };\r\n\r\n    const onDiscardChanges = () => {\r\n        setRegion(prevRegion);\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onSaveChanges = () => {\r\n        const old = passwordOldInputRef.current;\r\n        const newP = passwordInputRef.current;\r\n        const conf = passwordConfirmInputRef.current;\r\n\r\n        if (old.value !== '') {\r\n            if ((newP.value && conf.value) !== '') {\r\n                if (newP.value.length >= 6) {\r\n                    if (newP.value === conf.value) {\r\n                        clearErrorHighlight();\r\n\r\n                        // ------------------------\r\n\r\n\r\n                        // ........\r\n                        const d = new Date();\r\n\r\n                        let month = d.getMonth()+1;\r\n                        if (month < 10) month = `0${month}`;\r\n                        \r\n                        setPassTime(`${d.getDate()}.${month}.${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`);\r\n                        setEditMode(false);\r\n                        \r\n                    } else {\r\n                        newP.setCustomValidity('Passwords do not match');\r\n                        conf.setCustomValidity('Passwords do not match');\r\n                        setError('Passwords do not match');\r\n                        newP.focus();\r\n                    }\r\n                } else {\r\n                    newP.focus();\r\n                    setError('Password length should not be less than 6');\r\n                }\r\n\r\n            } else {\r\n                newP.setCustomValidity('Type in a new password');\r\n                conf.setCustomValidity('Type in a new password');\r\n                setError('Type in a new password');\r\n                newP.focus();\r\n            }\r\n        } else setEditMode(false);\r\n    };\r\n\r\n    function clearErrorHighlight() {\r\n        passwordInputRef.current.setCustomValidity('');\r\n        passwordOldInputRef.current.setCustomValidity('');\r\n        passwordConfirmInputRef.current.setCustomValidity('');\r\n        setError(null);\r\n    };\r\n\r\n    let regionView = <span className=\"heading heading__5 profile__main-text\">Region, {region}</span>;\r\n    if (editMode) {\r\n        regionView = (\r\n            <React.Fragment>\r\n                <span className=\"profile__title\">Region</span>\r\n                <div className=\"pos-rel\">\r\n                    <div className=\"profile__input profile__input--reg input\" tabIndex=\"0\">{region}</div>\r\n                    <RegionsDropdown click={(reg) => setRegion(reg)} class={['dropdown--full dropdown--left-fix profile__reg-dropdown dropdown--close']}/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    let passView = <span className=\"heading heading__5 profile__main-text\">Password was last changed on {passTime}</span>;\r\n    if (editMode) {\r\n        passView = (\r\n            <React.Fragment>\r\n                {error && \r\n                    <div className=\"profile__text profile__text--error fdr ac\">\r\n                        <svg className=\"profile__icon icon--red mr-5\" dangerouslySetInnerHTML={{__html: utils.use('alert-triangle')}} />\r\n                        {error}\r\n                    </div>\r\n                }\r\n                <p className=\"profile__ad-details mb-2\">If you do not want to change the password leave the fields empty.</p>\r\n                <p className=\"profile__text\">\r\n                    <label className=\"profile__title\">Enter your old password</label>\r\n                    <input className=\"profile__input input\" type=\"password\" placeholder=\"Old password\" ref={passwordOldInputRef} />\r\n                </p>\r\n                <div className=\"profile__text\">\r\n                    <label className=\"profile__title\">New password</label>\r\n                    <label className=\"pos-rel\">\r\n                        <input className=\"profile__input input\" type=\"password\" placeholder=\"New password\" ref={passwordInputRef} minLength=\"6\" />\r\n                        <button className=\"profile__btn profile__btn--abs\" onClick={(e) => onTogglePass(e)}>\r\n                            <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('eye-off')}} />\r\n                        </button>\r\n                    </label>\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <label className=\"profile__title\">Confirm password</label>\r\n                    <input className=\"profile__input input\" type=\"password\" placeholder=\"Confirm password\" ref={passwordConfirmInputRef} />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Settings</h2>\r\n                {!editMode && <button className=\"profile__btn profile__btn--rounded\" onClick={() => setEditMode(true)}>\r\n                    <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('edit-2')}} />\r\n                </button>}\r\n                {editMode && <button className=\"profile__btn profile__btn--rounded\" onClick={() => onDiscardChanges()}>\r\n                    <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                </button>}\r\n            </div>\r\n            <div className=\"profile__content fdc\">\r\n                {regionView}\r\n            </div>\r\n            <div className=\"profile__content profile__content--mid fdc\">\r\n                {passView}\r\n            </div>\r\n            {editMode && \r\n                <React.Fragment>\r\n                    <div className=\"profile__content profile__content--mid\">\r\n                        <div className=\"profile__text m-0\">\r\n                            <label className=\"profile__title mb-1\">Change email address</label>\r\n                            <input className=\"profile__input input\" type=\"text\" placeholder=\"Email address\" ref={emailInputRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile__footer mt-15\">\r\n                        {loading && <LoadingSub />}\r\n                        <button className=\"ml-2 btn btn__primary\" onClick={() => onSaveChanges()}>\r\n                            Save\r\n                            <svg className=\"icon icon--8 ml-5\" dangerouslySetInnerHTML={{__html: utils.use('save')}} />\r\n                        </button>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n            {!editMode &&\r\n                <div className=\"profile__content profile__content--mid\">\r\n                    <span className=\"heading heading__5 profile__main-text\">Email, johndoe@mail.eu</span>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Settings;","E:\\dec-exp-01-20\\src\\components\\Profile\\Favourites.js",["384"],"import React, { PureComponent } from \"react\";\r\nimport { AdFull } from \"./Ads/AdCard\";\r\n\r\nexport const FavAds = (props) => {\r\n\r\n    const ads = props.data.filter(el => el.favorite === true).map(el => <AdFull el={el} favs />)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Favourite Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {ads}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport const FavSearches = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Favourite Searches</h2>\r\n            </div>\r\n            <div className=\"profile__content\">\r\n                <ul className=\"profile__fav-list\">\r\n                    <li className=\"profile__fav-item\">\r\n                        \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};","E:\\dec-exp-01-20\\src\\components\\Profile\\Main.js",["385","386","387","388","389","390","391"],"E:\\dec-exp-01-20\\src\\components\\Profile\\Payments.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Promotions.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Messages.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Ads\\Ads.js",["392","393","394","395","396"],"import React from 'react';\r\n\r\nimport { AdsCard } from './AdCard';\r\n\r\nconst ActiveAds = React.memo((props) => {\r\n\r\n    const onDeactivate = (id) => {\r\n\r\n        // ----------------------\r\n\r\n        // .....\r\n    }\r\n\r\n    const ads = props.data.map((el, i) => <AdsCard el={el} view=\"active\" key={el.id} />);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Active Ads</h2>\r\n            </div>\r\n                {/* <div className=\"profile__extra mb-2\">\r\n                    Sort by:\r\n                    <div className=\"profile__sort ml-1\">\r\n                        Date\r\n                        <svg className=\"profile__icon profile__icon--small ml-5\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"profile__ads\">\r\n                    {ads}\r\n                </div>\r\n        </React.Fragment>      \r\n    )\r\n});\r\n\r\nconst InactiveAds = React.memo((props) => {\r\n\r\n    const onActivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const onRemove = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const ads = props.data.map((el, i) => <AdsCard el={el} view=\"inactive\" key={el.id} />);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Inactive Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {ads}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nconst PromotedAds = React.memo((props) => {\r\n\r\n    const onDeactivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const onActivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const ads = props.data.filter(el => el.premium === true).map(el => <AdsCard el={el} view=\"active\" key={el.id} />);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Promoted Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {ads}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nexport { ActiveAds, InactiveAds, PromotedAds };\r\n","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\business_and_services.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\electronics.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\fashion_and_style.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\for_kids.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\home_and_garden.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\jobs.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\pets.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\real_estate.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\sports_hobby_and_comfort.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\transport_auto.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\business_and_services.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\electronics.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\fashion_and_style.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\for_kids.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\home_and_garden.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\jobs.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\pets.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\real_estate.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\sports_hobby_and_comfort.js",[],"E:\\dec-exp-01-20\\src\\store\\actions\\index.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\transport_auto.js",[],"E:\\dec-exp-01-20\\src\\components\\RegionsDropdown.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\sports_hobby_and_comfort.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\real_estate.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\pets.js",[],"E:\\dec-exp-01-20\\src\\UI\\Tooltip.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\jobs.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\home_and_garden.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\for_kids.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\fashion_and_style.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\electronics.js",[],"E:\\dec-exp-01-20\\src\\UI\\LoadingSub.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Ads\\AdCard.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\transport_auto.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\business_and_services.js",[],"E:\\dec-exp-01-20\\src\\store\\actions\\actions_data.js",[],"E:\\dec-exp-01-20\\src\\store\\actions\\actions_localization.js",[],{"ruleId":"397","severity":1,"message":"398","line":5,"column":25,"nodeType":"399","messageId":"400","endLine":5,"endColumn":35},{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"397","severity":1,"message":"405","line":1,"column":17,"nodeType":"399","messageId":"400","endLine":1,"endColumn":25},{"ruleId":"397","severity":1,"message":"406","line":63,"column":15,"nodeType":"399","messageId":"400","endLine":63,"endColumn":19},{"ruleId":"397","severity":1,"message":"406","line":81,"column":23,"nodeType":"399","messageId":"400","endLine":81,"endColumn":27},{"ruleId":"397","severity":1,"message":"406","line":92,"column":23,"nodeType":"399","messageId":"400","endLine":92,"endColumn":27},{"ruleId":"397","severity":1,"message":"406","line":103,"column":27,"nodeType":"399","messageId":"400","endLine":103,"endColumn":31},{"ruleId":"397","severity":1,"message":"406","line":113,"column":23,"nodeType":"399","messageId":"400","endLine":113,"endColumn":27},{"ruleId":"397","severity":1,"message":"407","line":199,"column":15,"nodeType":"399","messageId":"400","endLine":199,"endColumn":20},{"ruleId":"397","severity":1,"message":"408","line":3,"column":8,"nodeType":"399","messageId":"400","endLine":3,"endColumn":22},{"ruleId":"397","severity":1,"message":"408","line":3,"column":13,"nodeType":"399","messageId":"400","endLine":3,"endColumn":27},{"ruleId":"397","severity":1,"message":"409","line":4,"column":8,"nodeType":"399","messageId":"400","endLine":4,"endColumn":13},{"ruleId":"397","severity":1,"message":"410","line":75,"column":27,"nodeType":"399","messageId":"400","endLine":75,"endColumn":32},{"ruleId":"397","severity":1,"message":"411","line":4,"column":8,"nodeType":"399","messageId":"400","endLine":4,"endColumn":21},{"ruleId":"397","severity":1,"message":"412","line":14,"column":13,"nodeType":"399","messageId":"400","endLine":14,"endColumn":20},{"ruleId":"397","severity":1,"message":"413","line":68,"column":15,"nodeType":"399","messageId":"400","endLine":68,"endColumn":26},{"ruleId":"397","severity":1,"message":"414","line":69,"column":15,"nodeType":"399","messageId":"400","endLine":69,"endColumn":31},{"ruleId":"415","severity":1,"message":"416","line":17,"column":17,"nodeType":"417","endLine":17,"endColumn":54},{"ruleId":"397","severity":1,"message":"418","line":1,"column":32,"nodeType":"399","messageId":"400","endLine":1,"endColumn":41},{"ruleId":"397","severity":1,"message":"409","line":9,"column":8,"nodeType":"399","messageId":"400","endLine":9,"endColumn":13},{"ruleId":"397","severity":1,"message":"419","line":10,"column":8,"nodeType":"399","messageId":"400","endLine":10,"endColumn":17},{"ruleId":"415","severity":1,"message":"416","line":196,"column":37,"nodeType":"417","endLine":196,"endColumn":93},{"ruleId":"415","severity":1,"message":"416","line":199,"column":37,"nodeType":"417","endLine":199,"endColumn":93},{"ruleId":"415","severity":1,"message":"416","line":202,"column":37,"nodeType":"417","endLine":202,"endColumn":93},{"ruleId":"415","severity":1,"message":"416","line":205,"column":37,"nodeType":"417","endLine":205,"endColumn":93},{"ruleId":"415","severity":1,"message":"416","line":208,"column":37,"nodeType":"417","endLine":208,"endColumn":93},{"ruleId":"397","severity":1,"message":"418","line":1,"column":17,"nodeType":"399","messageId":"400","endLine":1,"endColumn":26},{"ruleId":"397","severity":1,"message":"420","line":10,"column":21,"nodeType":"399","messageId":"400","endLine":10,"endColumn":31},{"ruleId":"397","severity":1,"message":"421","line":1,"column":17,"nodeType":"399","messageId":"400","endLine":1,"endColumn":30},{"ruleId":"397","severity":1,"message":"422","line":43,"column":15,"nodeType":"399","messageId":"400","endLine":43,"endColumn":19},{"ruleId":"397","severity":1,"message":"423","line":44,"column":15,"nodeType":"399","messageId":"400","endLine":44,"endColumn":20},{"ruleId":"397","severity":1,"message":"424","line":45,"column":15,"nodeType":"399","messageId":"400","endLine":45,"endColumn":21},{"ruleId":"397","severity":1,"message":"425","line":46,"column":15,"nodeType":"399","messageId":"400","endLine":46,"endColumn":22},{"ruleId":"397","severity":1,"message":"426","line":57,"column":15,"nodeType":"399","messageId":"400","endLine":57,"endColumn":26},{"ruleId":"397","severity":1,"message":"427","line":58,"column":15,"nodeType":"399","messageId":"400","endLine":58,"endColumn":27},{"ruleId":"397","severity":1,"message":"428","line":59,"column":15,"nodeType":"399","messageId":"400","endLine":59,"endColumn":28},{"ruleId":"397","severity":1,"message":"429","line":7,"column":11,"nodeType":"399","messageId":"400","endLine":7,"endColumn":23},{"ruleId":"397","severity":1,"message":"430","line":37,"column":11,"nodeType":"399","messageId":"400","endLine":37,"endColumn":21},{"ruleId":"397","severity":1,"message":"431","line":44,"column":11,"nodeType":"399","messageId":"400","endLine":44,"endColumn":19},{"ruleId":"397","severity":1,"message":"429","line":67,"column":11,"nodeType":"399","messageId":"400","endLine":67,"endColumn":23},{"ruleId":"397","severity":1,"message":"430","line":74,"column":11,"nodeType":"399","messageId":"400","endLine":74,"endColumn":21},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["432"],"no-negated-in-lhs",["433"],"'useState' is defined but never used.","'data' is assigned a value but never used.","'price' is assigned a value but never used.","'emailValidator' is defined but never used.","'axios' is defined but never used.","'timer' is assigned a value but never used.","'LoadingScreen' is defined but never used.","'actions' is defined but never used.","'favAdsCount' is assigned a value but never used.","'favSearchesCount' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'Searchbar' is defined but never used.","'setLoading' is assigned a value but never used.","'PureComponent' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'number' is assigned a value but never used.","'company' is assigned a value but never used.","'nameCompany' is assigned a value but never used.","'emailCompany' is assigned a value but never used.","'numberCompany' is assigned a value but never used.","'onDeactivate' is assigned a value but never used.","'onActivate' is assigned a value but never used.","'onRemove' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]