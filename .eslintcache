[{"E:\\dec-exp-01-20\\src\\index.js":"1","E:\\dec-exp-01-20\\src\\reportWebVitals.js":"2","E:\\dec-exp-01-20\\src\\containers\\App.js":"3","E:\\dec-exp-01-20\\src\\store\\reducers\\reducer_data.js":"4","E:\\dec-exp-01-20\\src\\store\\reducers\\reducer_localization.js":"5","E:\\dec-exp-01-20\\src\\containers\\Layout.js":"6","E:\\dec-exp-01-20\\src\\containers\\Header.js":"7","E:\\dec-exp-01-20\\src\\containers\\Main.js":"8","E:\\dec-exp-01-20\\src\\containers\\Post.js":"9","E:\\dec-exp-01-20\\src\\containers\\Authorization\\AuthSignup.js":"10","E:\\dec-exp-01-20\\src\\containers\\Authorization\\AuthSignin.js":"11","E:\\dec-exp-01-20\\src\\containers\\Authorization\\ResetPass.js":"12","E:\\dec-exp-01-20\\src\\UI\\LoadingScreen.js":"13","E:\\dec-exp-01-20\\src\\store\\actions\\actionTypes.js":"14","E:\\dec-exp-01-20\\src\\hoc\\asyncComponent\\asyncComponent.js":"15","E:\\dec-exp-01-20\\src\\components\\Profile\\Profile.js":"16","E:\\dec-exp-01-20\\src\\store\\Categories\\categories_en.js":"17","E:\\dec-exp-01-20\\src\\store\\Categories\\categories_ru.js":"18","E:\\dec-exp-01-20\\src\\store\\Categories\\categories_uz.js":"19","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\business_and_services.js":"20","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\electronics.js":"21","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\fashion_and_style.js":"22","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\for_kids.js":"23","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\home_and_garden.js":"24","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\jobs.js":"25","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\real_estate.js":"26","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\pets.js":"27","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\sports_hobby_and_comfort.js":"28","E:\\dec-exp-01-20\\src\\components\\Searchbar.js":"29","E:\\dec-exp-01-20\\src\\containers\\Navigation.js":"30","E:\\dec-exp-01-20\\src\\containers\\Footer.js":"31","E:\\dec-exp-01-20\\src\\components\\Card.js":"32","E:\\dec-exp-01-20\\src\\components\\Filter.js":"33","E:\\dec-exp-01-20\\src\\components\\Categories.js":"34","E:\\dec-exp-01-20\\src\\components\\Adview.js":"35","E:\\dec-exp-01-20\\src\\UI\\Backdrop.js":"36","E:\\dec-exp-01-20\\src\\components\\Dropdown.js":"37","E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\transport_auto.js":"38","E:\\dec-exp-01-20\\src\\components\\Language.js":"39","E:\\dec-exp-01-20\\src\\components\\Logo.js":"40","E:\\dec-exp-01-20\\src\\utilities\\utilities.js":"41","E:\\dec-exp-01-20\\src\\components\\Profile\\Settings.js":"42","E:\\dec-exp-01-20\\src\\components\\Profile\\Favourites.js":"43","E:\\dec-exp-01-20\\src\\components\\Profile\\Main.js":"44","E:\\dec-exp-01-20\\src\\components\\Profile\\Payments.js":"45","E:\\dec-exp-01-20\\src\\components\\Profile\\Promotions.js":"46","E:\\dec-exp-01-20\\src\\components\\Profile\\Messages.js":"47","E:\\dec-exp-01-20\\src\\components\\Profile\\Ads\\Ads.js":"48","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\business_and_services.js":"49","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\electronics.js":"50","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\fashion_and_style.js":"51","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\for_kids.js":"52","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\home_and_garden.js":"53","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\jobs.js":"54","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\pets.js":"55","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\real_estate.js":"56","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\sports_hobby_and_comfort.js":"57","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\transport_auto.js":"58","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\business_and_services.js":"59","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\electronics.js":"60","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\fashion_and_style.js":"61","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\for_kids.js":"62","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\home_and_garden.js":"63","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\jobs.js":"64","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\pets.js":"65","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\real_estate.js":"66","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\sports_hobby_and_comfort.js":"67","E:\\dec-exp-01-20\\src\\store\\actions\\index.js":"68","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\transport_auto.js":"69","E:\\dec-exp-01-20\\src\\components\\RegionsDropdown.js":"70","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\sports_hobby_and_comfort.js":"71","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\real_estate.js":"72","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\pets.js":"73","E:\\dec-exp-01-20\\src\\UI\\Tooltip.js":"74","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\jobs.js":"75","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\home_and_garden.js":"76","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\for_kids.js":"77","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\fashion_and_style.js":"78","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\electronics.js":"79","E:\\dec-exp-01-20\\src\\UI\\LoadingSub.js":"80","E:\\dec-exp-01-20\\src\\components\\Profile\\Ads\\AdCard.js":"81","E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\transport_auto.js":"82","E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\business_and_services.js":"83","E:\\dec-exp-01-20\\src\\store\\actions\\actions_data.js":"84","E:\\dec-exp-01-20\\src\\store\\actions\\actions_localization.js":"85"},{"size":1180,"mtime":1611237865621,"results":"86","hashOfConfig":"87"},{"size":362,"mtime":499162500000,"results":"88","hashOfConfig":"87"},{"size":2065,"mtime":1611242242543,"results":"89","hashOfConfig":"87"},{"size":5309,"mtime":1611316620134,"results":"90","hashOfConfig":"87"},{"size":1000,"mtime":1610904727000,"results":"91","hashOfConfig":"87"},{"size":638,"mtime":1611291694068,"results":"92","hashOfConfig":"87"},{"size":4690,"mtime":1611163948689,"results":"93","hashOfConfig":"87"},{"size":5964,"mtime":1611341784165,"results":"94","hashOfConfig":"87"},{"size":37572,"mtime":1611072176000,"results":"95","hashOfConfig":"87"},{"size":10929,"mtime":1611254660715,"results":"96","hashOfConfig":"87"},{"size":5847,"mtime":1611336634293,"results":"97","hashOfConfig":"87"},{"size":7348,"mtime":1611256978603,"results":"98","hashOfConfig":"87"},{"size":824,"mtime":1611241818888,"results":"99","hashOfConfig":"87"},{"size":499,"mtime":1611310807851,"results":"100","hashOfConfig":"87"},{"size":1376,"mtime":1611242854903,"results":"101","hashOfConfig":"87"},{"size":14218,"mtime":1610797584000,"results":"102","hashOfConfig":"87"},{"size":8107,"mtime":1610995247000,"results":"103","hashOfConfig":"87"},{"size":8607,"mtime":1610995247000,"results":"104","hashOfConfig":"87"},{"size":8564,"mtime":1610995247000,"results":"105","hashOfConfig":"87"},{"size":14011,"mtime":1611048094000,"results":"106","hashOfConfig":"87"},{"size":7441,"mtime":1611048094000,"results":"107","hashOfConfig":"87"},{"size":6512,"mtime":1611048094000,"results":"108","hashOfConfig":"87"},{"size":6116,"mtime":1611048094000,"results":"109","hashOfConfig":"87"},{"size":9265,"mtime":1611048094000,"results":"110","hashOfConfig":"87"},{"size":18487,"mtime":1611048094000,"results":"111","hashOfConfig":"87"},{"size":4654,"mtime":1611048094000,"results":"112","hashOfConfig":"87"},{"size":10158,"mtime":1611048094000,"results":"113","hashOfConfig":"87"},{"size":6526,"mtime":1611048232000,"results":"114","hashOfConfig":"87"},{"size":3713,"mtime":1611341527132,"results":"115","hashOfConfig":"87"},{"size":8620,"mtime":1611341071614,"results":"116","hashOfConfig":"87"},{"size":2272,"mtime":1609948916000,"results":"117","hashOfConfig":"87"},{"size":2312,"mtime":1611173043842,"results":"118","hashOfConfig":"87"},{"size":11605,"mtime":1611342480202,"results":"119","hashOfConfig":"87"},{"size":6321,"mtime":1610912210000,"results":"120","hashOfConfig":"87"},{"size":32216,"mtime":1611121867000,"results":"121","hashOfConfig":"87"},{"size":218,"mtime":1609688274000,"results":"122","hashOfConfig":"87"},{"size":167,"mtime":1609686174000,"results":"123","hashOfConfig":"87"},{"size":11133,"mtime":1611048232000,"results":"124","hashOfConfig":"87"},{"size":1885,"mtime":1611117590000,"results":"125","hashOfConfig":"87"},{"size":673,"mtime":1610361582000,"results":"126","hashOfConfig":"87"},{"size":2088,"mtime":1611149789669,"results":"127","hashOfConfig":"87"},{"size":7991,"mtime":1610796560000,"results":"128","hashOfConfig":"87"},{"size":1086,"mtime":1610631917000,"results":"129","hashOfConfig":"87"},{"size":13427,"mtime":1610783298000,"results":"130","hashOfConfig":"87"},{"size":472,"mtime":1610782046000,"results":"131","hashOfConfig":"87"},{"size":436,"mtime":1610630361000,"results":"132","hashOfConfig":"87"},{"size":1161,"mtime":1610630582000,"results":"133","hashOfConfig":"87"},{"size":2479,"mtime":1610632037000,"results":"134","hashOfConfig":"87"},{"size":18267,"mtime":1610981347000,"results":"135","hashOfConfig":"87"},{"size":8116,"mtime":1610981347000,"results":"136","hashOfConfig":"87"},{"size":7113,"mtime":1610981347000,"results":"137","hashOfConfig":"87"},{"size":7311,"mtime":1610983215000,"results":"138","hashOfConfig":"87"},{"size":11074,"mtime":1610981384000,"results":"139","hashOfConfig":"87"},{"size":20007,"mtime":1610981759000,"results":"140","hashOfConfig":"87"},{"size":10997,"mtime":1610981758000,"results":"141","hashOfConfig":"87"},{"size":5078,"mtime":1610981756000,"results":"142","hashOfConfig":"87"},{"size":7166,"mtime":1610981754000,"results":"143","hashOfConfig":"87"},{"size":11089,"mtime":1610981801000,"results":"144","hashOfConfig":"87"},{"size":18870,"mtime":1610982129000,"results":"145","hashOfConfig":"87"},{"size":8364,"mtime":1610982129000,"results":"146","hashOfConfig":"87"},{"size":7330,"mtime":1610982129000,"results":"147","hashOfConfig":"87"},{"size":5602,"mtime":1610983195000,"results":"148","hashOfConfig":"87"},{"size":11417,"mtime":1610982129000,"results":"149","hashOfConfig":"87"},{"size":20629,"mtime":1610982129000,"results":"150","hashOfConfig":"87"},{"size":11338,"mtime":1610982129000,"results":"151","hashOfConfig":"87"},{"size":4958,"mtime":1610982129000,"results":"152","hashOfConfig":"87"},{"size":6998,"mtime":1610982129000,"results":"153","hashOfConfig":"87"},{"size":270,"mtime":1611310843994,"results":"154","hashOfConfig":"87"},{"size":10825,"mtime":1610982682000,"results":"155","hashOfConfig":"87"},{"size":742,"mtime":1610703967000,"results":"156","hashOfConfig":"87"},{"size":6998,"mtime":1610982682000,"results":"157","hashOfConfig":"87"},{"size":4958,"mtime":1610982682000,"results":"158","hashOfConfig":"87"},{"size":10733,"mtime":1610982682000,"results":"159","hashOfConfig":"87"},{"size":248,"mtime":1609685576000,"results":"160","hashOfConfig":"87"},{"size":19529,"mtime":1610982682000,"results":"161","hashOfConfig":"87"},{"size":10812,"mtime":1610982682000,"results":"162","hashOfConfig":"87"},{"size":7828,"mtime":1610982737000,"results":"163","hashOfConfig":"87"},{"size":7330,"mtime":1610982682000,"results":"164","hashOfConfig":"87"},{"size":8364,"mtime":1610982682000,"results":"165","hashOfConfig":"87"},{"size":130,"mtime":1610128085000,"results":"166","hashOfConfig":"87"},{"size":7975,"mtime":1610634195000,"results":"167","hashOfConfig":"87"},{"size":10825,"mtime":1610982129000,"results":"168","hashOfConfig":"87"},{"size":18825,"mtime":1610982682000,"results":"169","hashOfConfig":"87"},{"size":896,"mtime":1611311691403,"results":"170","hashOfConfig":"87"},{"size":462,"mtime":1610904727000,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},"1vbhs4a",{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"175"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"175"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"175"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"175"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"175"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"175"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"175"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"175"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"175"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"175"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"175"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"175"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"175"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"175"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"E:\\dec-exp-01-20\\src\\index.js",["358"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\n\nimport localization from './store/reducers/reducer_localization';\nimport data from './store/reducers/reducer_data';\n\nimport App from './containers/App';\nimport './index.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  localization,\n  data\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["359","360"],"E:\\dec-exp-01-20\\src\\reportWebVitals.js",[],"E:\\dec-exp-01-20\\src\\containers\\App.js",["361","362"],"import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Main from './Main';\nimport Header from './Header';\nimport asyncComponent from '../hoc/asyncComponent/asyncComponent';\nimport Layout from './Layout';\nimport LoadingScreen from '../UI/LoadingScreen';\nimport { connect } from 'react-redux';\n\nconst AsyncAuthSignin = asyncComponent(() => import('./Authorization/AuthSignin'));\nconst AsyncAuthSignup = asyncComponent(() => import('./Authorization/AuthSignup'));\nconst AsyncResetPass = asyncComponent(() => import('./Authorization/ResetPass'));\nconst AsyncPost = asyncComponent(() => import('./Post'));\nconst AsyncProfile = asyncComponent(() => import('../components/Profile/Profile'));\n\nfunction App(props) {\n  const [loading, setLoading] = useState(true);\n  \n  const header = (\n    <Layout>\n      <Header />\n    </Layout>\n  );\n\n  const main = (\n    <Layout>\n      <Main />\n    </Layout>\n  );\n\n  const singleCategory = (\n    <Layout>\n      <h1>All</h1>\n    </Layout>\n  );\n\n  const post = (\n    <Layout>\n      <AsyncPost />\n    </Layout>\n  );\n\n  const profile = (\n    <Layout>\n      <AsyncProfile />\n    </Layout>\n  );\n  \n  return (\n    <div className=\"App\">\n      {props.loaingLazy && <LoadingScreen class=\"loadingScreen--abs\" /> }\n      <Switch>\n        <Route path=\"/\" exact render={() => header} />\n        <Route path=\"/signin\" exact component={AsyncAuthSignin} />\n        <Route path=\"/password-reset\" exact component={AsyncResetPass} />\n        <Route path=\"/signup\" exact component={AsyncAuthSignup} />\n        <Route path=\"/user/:section\" render={() => profile} />\n        <Route path=\"/post-new\" exact render={() => post} />\n        <Route path=\"/all/:category\" exact render={() => singleCategory} />\n        <Route path=\"/:category/:subcategory\" render={() => main} />\n        <Route path=\"*\" render={() => <h1>404 Not Found</h1>} />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loadingLazy: state.data.loadingLazy\n  }\n};\n\nexport default connect(mapStateToProps)(App);\n","E:\\dec-exp-01-20\\src\\store\\reducers\\reducer_data.js",[],"E:\\dec-exp-01-20\\src\\store\\reducers\\reducer_localization.js",[],"E:\\dec-exp-01-20\\src\\containers\\Layout.js",["363"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Footer from './Footer';\r\nimport Navigation from './Navigation';\r\nimport Searchbar from '../components/Searchbar';\r\nimport LoadingScreen from '../UI/LoadingScreen';\r\n\r\nconst Layout = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Navigation />\r\n                {props.loading ? <LoadingScreen /> : props.children}\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.data.loading\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","E:\\dec-exp-01-20\\src\\containers\\Header.js",[],"E:\\dec-exp-01-20\\src\\containers\\Main.js",[],"E:\\dec-exp-01-20\\src\\containers\\Post.js",["364"],"import React, { PureComponent } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as utils from '../utilities/utilities';\r\nimport Backdrop from '../UI/Backdrop';\r\nimport Dropdown from \"../components/Dropdown\";\r\n\r\nclass Publish extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            // -------- Data -----------\r\n\r\n            business_type: 'Individual',\r\n            adType: 'sell',\r\n            mainTitle: '',\r\n            description: '',\r\n            currency: 'uzsom',\r\n            numbers: ['+998994886928'],\r\n            email: '',\r\n            name: '',\r\n            images: [],\r\n\r\n\r\n            mileage: '',\r\n            year: '',\r\n            condition: 'new',\r\n            type: 'boys',\r\n\r\n\r\n            // -------------------------\r\n\r\n            types: {\r\n                sell: 'Sell',\r\n                exchange: 'Exchange',\r\n                give: 'Give away'\r\n            },\r\n            showCat: false,\r\n            activeSubCat: null,\r\n            subCatTitle: null,\r\n            activeAfter: null,\r\n            activeCat: null,\r\n            error: null,\r\n\r\n            categories: {},\r\n            filterObj: null,\r\n        };\r\n\r\n        this.fileRef = React.createRef();\r\n        this.priceInputRef = React.createRef();\r\n    }\r\n\r\n    importCategories = () => {\r\n        import(`../store/Categories/categories_${this.props.lang.val}`)\r\n            .then(res => {\r\n                this.setState({ categories: res.default });\r\n            })\r\n            .catch(er => console.log(er));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.importCategories();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.activeAfter !== prevState.activeAfter) {\r\n            const category = this.state.categories[this.state.activeAfter].val;\r\n            console.log(category);\r\n\r\n            this.setState({ activeSubCat: null }, () => {\r\n                console.log('hey')\r\n                import(`../store/PostFilters/${this.props.lang.val}/${category}`)\r\n                    .then(filter => {\r\n                        this.setState({ filterObj: filter.default }, () => {\r\n                            console.log(this.state.filterObj);\r\n                        });\r\n                    })\r\n                    .catch(er => {\r\n                        \r\n                    });\r\n            });\r\n        }\r\n        if (this.props.lang.val !== prevProps.lang.val) this.importCategories();\r\n    }\r\n\r\n    onAddNumber = () => {\r\n        if (this.state.numbers.length < 3) {\r\n            this.setState(prevState => {\r\n                const newNums = [...prevState.numbers, ''];\r\n                return { numbers: newNums };\r\n            });\r\n        }\r\n    }\r\n    \r\n    onInputNumber = (val, index) => {\r\n        if (utils.isNum(parseInt(val)) || val === '' || val === '+') {\r\n            this.setState(prevState => {\r\n                const numbers = prevState.numbers.map((el, i) => {\r\n                    if (i === index) return el = val;\r\n                    else return el;\r\n                });\r\n                return { numbers };\r\n            });\r\n        }\r\n    }\r\n\r\n    onInputDescription = (e) => this.setState({ description: e.target.value });\r\n    onInputTitle = (e) => this.setState({ mainTitle: e.target.value });\r\n\r\n\r\n    onChangeCurrency = (c) => this.setState({ currency: c });\r\n    onChangeBusinessType = (type) => this.setState({ business_type: type });\r\n    onChangeAdType = (type) => this.setState({ adType: type });\r\n\r\n    onOpenCatPop = () => this.setState({ showCat: true });\r\n    onCloseCatPop = () => this.setState({ showCat: false });\r\n\r\n    setActiveCat = (cat) => this.setState({ activeCat: cat, activeAfter: cat, activeSubCat: null });\r\n    unsetActiveCat = () => this.setState({ activeCat: null });\r\n\r\n    onSelectSubCat = (subCat) => {\r\n        this.setState({\r\n            activeSubCat: subCat\r\n        }, () => this.setState({ showCat: false, activeCat: null }));\r\n    }\r\n\r\n    appendImage = (el, files) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(files);\r\n        reader.onload = () => {\r\n\r\n            const imgInitial = el.querySelector('.post__img');\r\n            if (imgInitial) imgInitial.remove();\r\n\r\n            const img = document.createElement('img');\r\n            img.classList.add('post__img');\r\n            img.src = reader.result;\r\n            el.appendChild(img);\r\n        };\r\n    }\r\n\r\n    onDeleteImage = (index) => {\r\n        this.setState(prevState => {\r\n            const images = prevState.images.filter((el, i) => i !== index);\r\n            return { images };\r\n        }, () => {\r\n            const photoContainers = Array.from(document.querySelectorAll('.post__figure'));\r\n            photoContainers[index].querySelector('.post__img').remove();\r\n\r\n            console.log(this.state.images);\r\n\r\n            this.state.images.forEach((el, i) => this.appendImage(photoContainers[i], el));\r\n\r\n            const imageAfter = photoContainers[index + 1].querySelector('.post__img');\r\n            if (imageAfter) imageAfter.remove();\r\n\r\n            const imageLast = photoContainers[this.state.images.length].querySelector('.post__img');\r\n            if (imageLast) imageLast.remove();\r\n        });\r\n    }\r\n\r\n    onImageUpload = () => {\r\n        const files = this.fileRef.current.files;\r\n\r\n        if (files.length && this.state.images.length < 7) {\r\n            let photos = Array.from(files).slice(0, 7);\r\n\r\n            const largeFile = photos.find(el => el.size > 2000000);\r\n\r\n            const fileTypeArr = photos.map(el => el.type.startsWith('image/'));\r\n            const typeOk = !fileTypeArr.some(el => el === false);\r\n\r\n            if (typeOk) {\r\n                if (!largeFile) {\r\n                    this.setState(prevState => {\r\n                        return { images: [...prevState.images, ...photos] };\r\n                    }, () => {\r\n                        const photoContainers = Array.from(document.querySelectorAll('.post__figure'));\r\n    \r\n                        this.state.images.forEach((el, i) => this.appendImage(photoContainers[i], el));\r\n                    });\r\n                } else this.setState({ error: `File \"${largeFile.name}\" exceeded maximum size of 2MB` });\r\n            } else this.setState({ error: 'Only image files are allowed' });\r\n        }\r\n    }\r\n\r\n    onSubmitPost = () => {\r\n        // this.state.mainTitle;\r\n        // this.state.description;\r\n        // this.state.type;\r\n        // this.state.email;\r\n        // this.state.name;\r\n        // const numbers = this.state.numbers.filter(el => {\r\n        //      if (el !== '') return el;\r\n        //      return null;\r\n        // });\r\n        const price = this.priceInputRef.current.value;\r\n        let category = this.state.categories[this.state.activeAfter];\r\n        let subcategory = this.state.activeSubCat;\r\n        \r\n        if ((this.state.mainTitle && this.state.description && this.state.name) !== '' && (category.val && subcategory)) {\r\n            if ((this.state.adType === 'sell') && (this.state.price !== '')) {\r\n                console.log('nu che sellnem');\r\n            }\r\n            console.log(this.state);\r\n            \r\n    \r\n            const formatData = new FormData();\r\n            this.state.images.forEach(el => formatData.append('photos[]', el));\r\n        }\r\n    }\r\n\r\n    onSetSpecification = (param, val) => {\r\n        this.setState({ [param]: val }, () => console.log(this.state[param]));\r\n    }\r\n\r\n    render() {\r\n        const typesArr = [];\r\n        for (let key in this.state.types) {\r\n            typesArr.push({\r\n                id: key,\r\n                value: this.state.types[key]\r\n            })\r\n        }\r\n        const types = typesArr.map(el => {\r\n            return (\r\n                <div className=\"dropdown__item\" key={el.id} onClick={() => this.onChangeAdType(el.id)}>\r\n                    <div className=\"dropdown__link post__dropitem\">{el.value}</div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let subOptions = null;\r\n        let inputItems = null;\r\n        if (this.state.filterObj && this.state.activeSubCat) {\r\n\r\n            subOptions = this.state.filterObj.items[this.state.activeSubCat].sub.map((obj, index) => {\r\n                \r\n                const dropItems = obj.items.map((el, i) => {\r\n                    return (\r\n                        <div className=\"dropdown__item\" key={i}>\r\n                            <div className=\"dropdown__link post__dropitem\" onClick={() => this.onSetSpecification(obj.val, el.val)}>{utils.capitalize(el.title)}</div>\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                const defaultTitle = obj.items.find(el => el.val === this.state[obj.val]).title;\r\n\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        <p className=\"post__title mb-1\">{obj.title}</p>\r\n                        <div className=\"post__box\">\r\n                            <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                {defaultTitle}\r\n                                <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                            </div>\r\n                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                {dropItems}\r\n                            </Dropdown>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            });\r\n        \r\n            inputItems = this.state.filterObj.items[this.state.activeSubCat].inputs.map((el, i) => {\r\n                return (\r\n                    <div className=\"mb-15\" key={i}>\r\n                        <p className=\"post__title mb-1\">{el.title}</p>\r\n                        <input type=\"text\" placeholder={el.title} className=\"post__input\" onChange={() => {}} />\r\n                    </div>\r\n                );\r\n            });\r\n\r\n        }\r\n\r\n        const catItemsArr = [];\r\n        let subItems = null;\r\n        let catItems = null;\r\n        if (this.state.categories) {\r\n            for (let key in this.state.categories) {\r\n                catItemsArr.push({\r\n                    id: key,\r\n                    title: this.state.categories[key].title,\r\n                    icon: this.state.categories[key].icon\r\n                });\r\n            }\r\n    \r\n            catItems = catItemsArr.map((el) => {\r\n                return (\r\n                    <li \r\n                        className=\"categories__item\"\r\n                        key={el.id}\r\n                        onClick={() => this.setActiveCat(el.id)}>\r\n                        <div className=\"categories__link\">\r\n                            <div className=\"categories__group\">\r\n                                <svg className=\"categories__icon categories__icon--cat\" dangerouslySetInnerHTML={{__html: utils.useCat(el.icon)}} />\r\n                                {el.title}\r\n                            </div>\r\n                            <svg className=\"categories__icon categories__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                        </div>\r\n                    </li>\r\n                );\r\n            });\r\n            \r\n            if (this.state.activeCat) {\r\n                subItems = this.state.categories[this.state.activeCat].subCategories.map((el, i) => {\r\n                    return (\r\n                        <li className=\"categories__subitem\" key={i}>\r\n                            <div className=\"categories__link categories__link--sub\" onClick={() => this.onSelectSubCat(el.val)}>\r\n                                <svg className=\"categories__icon categories__icon--sub\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                {el.title}\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let title = null;\r\n        if (this.state.activeSubCat && this.state.activeAfter) {\r\n            title = this.state.categories[this.state.activeAfter].subCategories.find(el => el.val === this.state.activeSubCat).title;\r\n        }\r\n\r\n        const numbers = this.state.numbers.slice(1).map((el, i) => {\r\n            return (\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Your contact number\" \r\n                    className=\"post__input post__input--singlebtn mb-15\" \r\n                    value={this.state.numbers[i + 1]} \r\n                    onChange={(e) => this.onInputNumber(e.target.value, i + 1)} \r\n                    maxLength={15} />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"post\">\r\n                    <div className=\"container\">\r\n                        <div className=\"post__wrapper\">\r\n                            <div className=\"post__head\">\r\n                                <h2 className=\"heading heading__2 mb-1\">Post new add</h2>\r\n                                <span className=\"post__text\">\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id tellus a eros vulputate euismod in at orci. Ut felis ipsum, bibendum vitae elit viverra, consectetur tincidunt lorem. Donec lectus.\r\n                                </span>\r\n                            </div>\r\n                            {this.state.error && <p className=\"post__hint post__hint--red mb-2\">{this.state.error}</p>}\r\n                            <div className=\"post__main\">\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Add photos</p>\r\n                                    <div className=\"post__uploadbox\">\r\n                                        <input \r\n                                            className=\"post__input d-none\" \r\n                                            type=\"file\" \r\n                                            multiple \r\n                                            ref={this.fileRef} \r\n                                            onChange={() => this.onImageUpload()} />\r\n                                        <div className=\"post__imagebox  post__imagebox--main\">\r\n                                            <figure className=\"post__figure post__figure--main\" onClick={() => this.fileRef.current.click()}>\r\n                                                <svg className=\"post__icon post__icon--main mb-1\" dangerouslySetInnerHTML={{__html: utils.use('image')}} />\r\n                                                <span className=\"post__prompt\">Click here to uload main photo</span>\r\n                                            </figure>\r\n                                            {this.state.images[0] && <div className=\"post__overlay\">\r\n                                                <button className=\"post__btn post__btn--delete\" onClick={() => this.onDeleteImage(0)}>\r\n                                                    <svg className=\"post__icon post__icon--cat\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                </button>\r\n                                            </div>}\r\n                                        </div>\r\n                                        <div className=\"post__row\">\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[1] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(1)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[2] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(2)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[3] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(3)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[4] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(4)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[5] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(5)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                            <div className=\"post__imagebox\">\r\n                                                <figure className=\"post__figure post__figure--small\" onClick={() => this.fileRef.current.click()}>\r\n                                                    <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                                </figure>\r\n                                                {this.state.images[6] && <div className=\"post__overlay\">\r\n                                                    <button className=\"post__btn post__btn--sm post__btn--delete\" onClick={() => this.onDeleteImage(6)}>\r\n                                                        <svg className=\"post__icon post__icon--cat post__icon--sm\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                                    </button>\r\n                                                </div>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <p className=\"post__hint post__hint--left mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt nec nibh non porta. Donec.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Main title</p>\r\n                                    <label className=\"post__label\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"post__input post__input--title\"\r\n                                            placeholder=\"Enter Ad title\"\r\n                                            onChange={(e) => this.onInputTitle(e)}\r\n                                            value={this.state.mainTitle} \r\n                                            maxLength=\"30\" />\r\n                                        <span className=\"post__counter mt-1\">{30 - this.state.mainTitle.length} characters left</span>\r\n                                    </label>\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam maximus nibh vel hendrerit maximus. Proin imperdiet elit ipsum, in maximus lectus faucibus in. Praesent eu nunc ut quam mattis rhoncus.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Category</p>\r\n                                    <button className=\"post__input post__input--cat post__input--cat-main\" onClick={() => this.onOpenCatPop()}>\r\n                                        <span className=\"post__val\">\r\n                                            {this.state.activeAfter && <svg className=\"post__icon post__icon--cat icon__dark mr-1\" dangerouslySetInnerHTML={{__html: utils.useCat(this.state.categories[this.state.activeAfter].icon)}} />}\r\n                                            {title ? title : 'Select category'}\r\n                                        </span>\r\n                                        <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                    </button>\r\n                                    {this.state.activeAfter &&\r\n                                        <React.Fragment>\r\n                                            <div className=\"post__catselected post__input mt-1\" onClick={() => this.onOpenCatPop()}>\r\n                                                <ul className=\"post__list\">\r\n                                                    <li className=\"post__item\">{this.state.categories[this.state.activeAfter].title}</li>\r\n                                                    <li className=\"post__item\">{title}</li>\r\n                                                </ul>\r\n                                                <button className=\"post__btn post__btn--catitems\">\r\n                                                    <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevrons-right')}} />\r\n                                                </button>\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt nec nibh non porta. Donec.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group post__group--details m-0\">\r\n                                    <div className=\"post__group\">\r\n                                        <div className=\"mb-15\">\r\n                                            <p className=\"post__title mb-1\">Price</p>\r\n                                            <div className=\"post__box\">\r\n                                                <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                                    {this.state.types[this.state.adType]}\r\n                                                    <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                                </div>\r\n                                                <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                    {types}\r\n                                                </Dropdown>\r\n                                            </div>\r\n                                            {this.state.adType === 'sell' &&\r\n                                                <div className=\"post__double-form mb-1\">\r\n                                                    <input type=\"text\" placeholder=\"Price\" className=\"post__input post__input--price mr-1\" ref={this.priceInputRef} />\r\n                                                    <div className=\"post__box\">\r\n                                                        <div className=\"post__input post__input--cat post__input--cur\" tabIndex=\"0\">\r\n                                                            {this.state.currency.toUpperCase()}\r\n                                                            <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                                        </div>\r\n                                                        <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                            <div className=\"dropdown__item\" onClick={() => this.onChangeCurrency('usd')}>\r\n                                                                <div className=\"dropdown__link post__dropitem post__dropitem--cur\">USD</div>\r\n                                                            </div>\r\n                                                            <div className=\"dropdown__item\" onClick={() => this.onChangeCurrency('uzsom')}>\r\n                                                                <div className=\"dropdown__link post__dropitem post__dropitem--cur\">UZSOM</div>\r\n                                                            </div>\r\n                                                        </Dropdown>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        <p className=\"post__title mb-1\">Type of business</p>\r\n                                        <div className=\"post__box\">\r\n                                            <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                                {utils.capitalize(this.state.business_type)}\r\n                                                <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                            </div>\r\n                                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                <div className=\"dropdown__item\" onClick={() => this.onChangeBusinessType('individual')}>\r\n                                                    <div className=\"dropdown__link post__dropitem\">Individual</div>\r\n                                                </div>\r\n                                                <div className=\"dropdown__item\" onClick={() => this.onChangeBusinessType('business')}>\r\n                                                    <div className=\"dropdown__link post__dropitem\">Business</div>\r\n                                                </div>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"post__group\">{subOptions}</div>\r\n                                    <div className=\"post__group\">{inputItems}</div>\r\n                                </div>\r\n                                <div className=\"post__group post__group--des\">\r\n                                    <p className=\"post__title mb-1\">Personalized description</p>\r\n                                    <label className=\"post__label\">\r\n                                        <textarea \r\n                                            className=\"post__input post__input--des\" \r\n                                            placeholder=\" \" \r\n                                            value={this.state.description}\r\n                                            onChange={(e) => this.onInputDescription(e)}\r\n                                            maxLength=\"4500\"></textarea>\r\n                                        <span className=\"post__counter mt-1\">{4500 - this.state.description.length} characters left</span>\r\n                                    </label>\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In id nulla porta, rutrum enim eget, luctus neque. Cras scelerisque imperdiet.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post__head post__head--doubleline\">\r\n                                <h2 className=\"heading heading__2 mb-1\">Contact details</h2>\r\n                                <span className=\"post__text\">\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc mattis.\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"post__main\">\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Contact numbers</p>\r\n                                    {this.state.numbers.length > 1 && <p className=\"post__text mb-1\">If you do not want to add a number laeve number field empty</p>}\r\n                                    <div className=\"post__double-form\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            placeholder=\"Your contact number\" \r\n                                            className=\"post__input post__input--singlebtn mr-1\" \r\n                                            value={this.state.numbers[0]} \r\n                                            onChange={(e) => this.onInputNumber(e.target.value, 0)} \r\n                                            maxLength={15} />\r\n                                        <button className=\"post__input post__input--btn post__input--cat\" onClick={() => this.onAddNumber()}>\r\n                                            Add\r\n                                            <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                        </button>\r\n                                    </div>\r\n                                    {numbers}\r\n                                    <p className=\"post__title mb-1 mt-15\">Email address</p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        placeholder=\"Your email address (optional)\"\r\n                                        className=\"post__input mb-15\"\r\n                                        value={this.state.email}\r\n                                        onChange={(e) => this.setState({ email: e.target.value })} />\r\n                                    <p className=\"post__title mb-1\">Contact Name</p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        placeholder=\"Your contact name\"\r\n                                        className=\"post__input mb-15\" \r\n                                        value={this.state.name}\r\n                                        onChange={(e) => this.setState({ name: e.target.value })} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"post__footer\">\r\n                            <div className=\"container\">\r\n                                <div className=\"post__footwrap\">\r\n                                    <button className=\"btn post__btn-main btn__primary\" onClick={() => this.onSubmitPost()}>\r\n                                        Post\r\n                                        <svg className=\"icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('check-circle')}} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {this.state.showCat &&\r\n                    <div className=\"categories__container\">\r\n                        <Backdrop z={96} click={this.onCloseCatPop} />\r\n                        {this.state.activeCat && <Backdrop z={9} click={this.unsetActiveCat} />}\r\n                        <div className=\"categories categories--fix\">\r\n                            <ul className=\"categories__list categories__list--select\">{catItems}</ul>\r\n                            {this.state.activeCat && \r\n                                <div className=\"categories__panel\">\r\n                                    <div className=\"categories__subhead\">\r\n                                        <h2 className=\"categories__heading categories__heading--sub\">\r\n                                            {this.state.categories[this.state.activeCat].title}\r\n                                            <svg className=\"categories__icon--large\" dangerouslySetInnerHTML={{__html: utils.useCat(this.state.categories[this.state.activeCat].icon)}} />\r\n                                        </h2>\r\n                                        <button className=\"categories__btn categories__btn--sub\" onClick={() => this.unsetActiveCat()}>\r\n                                            <svg className=\"categories__icon categories__icon--close\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                        </button>\r\n                                    </div>\r\n                                    <ul className=\"categories__sublist\">\r\n                                        {subItems}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.localization.lang\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Publish);","E:\\dec-exp-01-20\\src\\containers\\Authorization\\AuthSignup.js",["365"],"import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport emailValidator from 'email-validator';\r\nimport axios from 'axios';\r\n\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport Language from '../../components/Language';\r\nimport Logo from '../../components/Logo';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nclass AuthSignup extends Component {\r\n    constructor(props) { \r\n        super(props);\r\n        \r\n        this.state = {\r\n            inputFocused: false,\r\n            error: null,\r\n            success: false,\r\n            proceed: false,\r\n            verified: true,\r\n            number: ''\r\n        }\r\n\r\n        this.checkboxRef = React.createRef();\r\n        this.numInputRef = React.createRef();\r\n        this.passRef = React.createRef();\r\n        this.passConfirmRef = React.createRef();\r\n        this.nameRef = React.createRef();\r\n        this.lNameRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.location.hash = '';\r\n    }\r\n\r\n    clearErrorHighlight = () => {\r\n        this.numInputRef.current.setCustomValidity('');\r\n        this.nameRef.current.setCustomValidity('');\r\n        this.lNameRef.current.setCustomValidity('');\r\n        this.passRef.current.setCustomValidity('');\r\n        this.passConfirmRef.current.setCustomValidity('');\r\n        this.setState({ error: null });\r\n    }\r\n\r\n    validated = (filled, validNum, validPass, passwordsMatch, agree) => {\r\n\r\n        if (filled) {\r\n            if (!validNum) {\r\n                this.numInputRef.current.setCustomValidity('Invalid phone number');\r\n                this.numInputRef.current.focus();\r\n                this.setState({ error: 'Invalid phone number' });\r\n                return false;\r\n            } else if (!validPass) {\r\n                this.passRef.current.setCustomValidity('Password length is less than 6');\r\n                this.passRef.current.focus();\r\n                this.setState({ error: 'Password length must be at least 6 characters in length' });\r\n                return false;\r\n            } else if (!passwordsMatch) {\r\n                this.passRef.current.setCustomValidity('Passwords do not match');\r\n                this.passConfirmRef.current.setCustomValidity('Passwords do not match');\r\n                this.passRef.current.focus();\r\n                this.setState({ error: 'Passwords do not match' });\r\n                return false;\r\n            } else if (!agree) {\r\n                this.setState({ error: 'You you have to accept website terms of use' });\r\n                return false;\r\n            } else {\r\n                this.clearErrorHighlight();\r\n                return true;\r\n            }\r\n        } else {\r\n            this.numInputRef.current.setCustomValidity('Empty');\r\n            this.nameRef.current.setCustomValidity('Empty');\r\n            this.lNameRef.current.setCustomValidity('Empty');\r\n            this.passRef.current.setCustomValidity('Empty');\r\n            this.passConfirmRef.current.setCustomValidity('Empty');\r\n            this.nameRef.current.focus();\r\n            this.setState({ error: 'Please fill out all the fields' });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSignUp = (e) => {\r\n        e.preventDefault();\r\n        const password = this.passRef.current;\r\n        const passwordConf = this.passConfirmRef.current;\r\n\r\n        const number = this.state.number;\r\n        const lastName = this.lNameRef.current;\r\n        const name = this.nameRef.current;\r\n        \r\n        if ((password.value && passwordConf.value && number && name.value && lastName.value) !== '') {\r\n\r\n            const validNum = number.length > 7;\r\n            const validPass = password.value.length >= 6;\r\n            const passwordsMatch = passwordConf.value === password.value;\r\n\r\n            if (this.validated(true, validNum, validPass, passwordsMatch, true)) {\r\n                const data = {\r\n                    phone: number,\r\n                    password: password.value,\r\n                    email: 'test@mail.eu',\r\n                    firstname: name.value,\r\n                    lastname: lastName.value\r\n                };\r\n                axios.post('http://api.soybaliq.uz/api/auth/register', data)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        window.location.hash = '#confirm';\r\n                    }).catch(er => {\r\n                        console.log(er);\r\n                        this.setState({ error: er.message });\r\n                    });\r\n            }\r\n        } else this.validated(false);\r\n    }\r\n\r\n    onProceed = (e) => {\r\n        e.preventDefault();\r\n        const number = this.state.number;\r\n        const agree = this.checkboxRef.current.checked;\r\n        const name = this.nameRef.current;\r\n        const lastName = this.lNameRef.current;\r\n\r\n        const validNum = number.length > 7;\r\n\r\n        if ((number && name.value && lastName.value) !== '') {\r\n\r\n            if (this.validated(true, validNum, true, true, agree)) {\r\n                console.log(number);\r\n                console.log(agree);\r\n\r\n                // ---------------------------------\r\n                \r\n                // ........\r\n                // this.props.history.push('#second-face');\r\n                window.location.hash = 'second-face';\r\n            }\r\n        } else this.validated(false);\r\n    }\r\n\r\n    onInputnumber = (val) => {\r\n        if (utils.isNum(parseInt(val)) || val === '+' || val === '') this.setState({ number: val });\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"authorization\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"authorization__lang\" dropClass=\"dropdown--left-fix\" />\r\n                <div className=\"authorization__wrapper authorization__wrapper--high\" onClick={() => this.onFocus()}>\r\n                    <div className=\"authorization__head\">\r\n                        <Logo classImg=\"logo__figure--nav\" />\r\n                        <Link to=\"/signin\" className=\"authorization__info authorization__info--heading\">\r\n                            <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use('log-in')}} />\r\n                            Sign in\r\n                        </Link>\r\n                    </div>\r\n                    {this.state.error && <p className=\"authorization__error mb-1\">{this.state.error}</p>}\r\n                    <form className=\"authorization__form\" id=\"second-face\">\r\n                        <p className=\"authorization__info authorization__info--heading mb-1\">Set your password</p>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"password\" \r\n                                placeholder=\"Enter your password\" \r\n                                ref={this.passRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Your password</p>\r\n                        </label>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"password\" \r\n                                placeholder=\"Confirm your password\"\r\n                                ref={this.passConfirmRef} />\r\n                            <p className=\"authorization__label authorization__label--abs mb-2\">Confirm your password</p>\r\n                        </label>\r\n                        <button className=\"btn btn__primary authorization__btn mt-1 mb-1\" onClick={(e) => this.onSignUp(e)}>\r\n                            Proceed\r\n                            <svg className=\"icon ml-5 icon--8\" dangerouslySetInnerHTML={{__html: utils.use('user-plus')}} />\r\n                        </button>\r\n                    </form>\r\n                    <form className=\"authorization__form\" id=\"first-face\">\r\n                        <p className=\"authorization__info authorization__info--heading mb-1\">Sign up</p>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"First name\"\r\n                                ref={this.nameRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">First name</p>\r\n                        </label>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Last name\"\r\n                                ref={this.lNameRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Last name</p>\r\n                        </label>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Your phone number\" \r\n                                ref={this.numInputRef}\r\n                                value={this.state.number} \r\n                                onChange={(e) => this.onInputnumber(e.target.value)} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Your number or email</p>\r\n                        </label>\r\n                        <div className=\"authorization__item\">\r\n                            <input type=\"checkbox\" id=\"terms\" className=\"checkbox\" ref={this.checkboxRef} />\r\n                            <label htmlFor=\"terms\" className=\"label\">\r\n                                <span></span>\r\n                                Agree to terms of use\r\n                            </label>\r\n                        </div>\r\n                        <button className=\"btn btn__primary authorization__btn mb-1\" onClick={(e) => this.onProceed(e)}>\r\n                            Proceed\r\n                            <svg className=\"icon ml-5 icon--8\" dangerouslySetInnerHTML={{__html: utils.use('user-plus')}} />\r\n                        </button>\r\n                        <p className=\"authorization__info\">Existing user? <Link to=\"/signin\" className=\"authorization__info--high\">Sign in</Link></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AuthSignup);","E:\\dec-exp-01-20\\src\\containers\\Authorization\\AuthSignin.js",["366","367"],"E:\\dec-exp-01-20\\src\\containers\\Authorization\\ResetPass.js",["368"],"import React, { Component } from 'react';\r\nimport * as emailValidator from 'email-validator';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nimport Backdrop from '../../UI/Backdrop';\r\nimport Language from '../../components/Language';\r\nimport Logo from '../../components/Logo';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nclass ResetPass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputFocused: false,\r\n            showNextStep: false,\r\n            error: null,\r\n            success: false,\r\n            attempted: false,\r\n            number: false,\r\n            time: 300\r\n        }\r\n\r\n        this.phoneRef = React.createRef();\r\n        this.codeFieldRef = React.createRef();\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    timerWait = () => {\r\n        if (this.state.time > 0) \r\n            this.setState((prevState) => {\r\n                return { time: prevState.time - 1 }\r\n            });\r\n    }\r\n\r\n    validate = (num, email) => {\r\n        if (num && num.length < 9) {\r\n            this.phoneRef.current.setCustomValidity('Invalid phone number');\r\n            this.setState({ error: 'Please, enter valid phone number' });\r\n            return false;\r\n        } else if (email && !emailValidator.validate(this.phoneRef.current.value)) {\r\n            this.phoneRef.current.setCustomValidity('Please, enter valid email address');\r\n            this.setState({ error: 'Please, enter valid email address' });\r\n            return false;\r\n        } else {\r\n            this.phoneRef.current.setCustomValidity('');\r\n            this.setState({ error: null });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    makeHttp = (login, query) => {\r\n        window.location.hash = '#reset';\r\n    }\r\n\r\n    onProceed = (e) => {\r\n        e.preventDefault();\r\n        const mainInput = this.phoneRef.current;\r\n        const code = this.codeFieldRef.current;\r\n\r\n        if (mainInput.value !== '') {\r\n            let isNum = utils.isNum(parseInt(mainInput.value));\r\n            if (mainInput.value.includes('+')) isNum = true;\r\n\r\n            let query = isNum ? 'phone' : 'email';\r\n            if (isNum) this.setState({ number: true });\r\n            let valid = false;\r\n            if (isNum) valid = this.validate(mainInput.value);\r\n            else valid = this.validate(null, mainInput.value);\r\n\r\n            if (!this.state.attempted) {\r\n    \r\n                if (valid) {\r\n                    const timer = setInterval(this.timerWait, 1000);\r\n                    this.setState({\r\n                        showNextStep: true,\r\n                        attempted: true\r\n                    });\r\n                }\r\n\r\n            } else if (this.state.attempted && valid) {\r\n                if (code.value !== '') this.makeHttp(mainInput.value, query);\r\n                else if (this.state.time === 0) {\r\n                    this.setState({ time: 300 });\r\n                    code.focus();\r\n                }\r\n            }\r\n        } else {\r\n            mainInput.focus();\r\n            mainInput.setCustomValidity('Please, enter your email address or phone number');\r\n            return this.setState({ error: 'Please, enter your email address or phone number' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const wrapClass = ['authorization__wrapper'];\r\n        if (this.state.inputFocused) wrapClass.push('authorization__wrapper--animate');\r\n\r\n        return (\r\n            <div className=\"authorization\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"authorization__lang\" dropClass=\"dropdown--left-fix\"/>\r\n                <form className={wrapClass.join(' ')} onClick={() => this.onFocus()}>\r\n                    <div className=\"authorization__head\">\r\n                        <Logo classImg=\"logo__figure--nav\" />\r\n                        <Link to=\"/signin\" className=\"authorization__info authorization__info--heading\">\r\n                            <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use('log-in')}} />\r\n                            Sign in\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"authorization__form\">\r\n                        <p className=\"authorization__info authorization__info--heading mb-1\">Reset password</p>\r\n                        {this.state.attempted && \r\n                            <p className=\"authorization__error authorization__error--success mb-2\">\r\n                                <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use(this.state.number ? 'phone' : 'mail')}} />\r\n                                The code is sent to your {this.state.number ? 'phone number' : 'email'}\r\n                            </p>\r\n                        }\r\n                        {this.state.error && <p className=\"authorization__error mb-1\">{this.state.error}</p>}\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input authorization__input--res input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Your number or email\"\r\n                                ref={this.phoneRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Your number or email</p>\r\n                        </label>\r\n                        {this.state.showNextStep && \r\n                            <React.Fragment>\r\n                                <label className=\"authorization__label\">\r\n                                    <input \r\n                                        className=\"authorization__input authorization__input--res input\" \r\n                                        type=\"text\" \r\n                                        placeholder=\"Enter the code\" \r\n                                        required\r\n                                        autoFocus \r\n                                        ref={this.codeFieldRef} />\r\n                                    <p className=\"authorization__label authorization__label--abs\">The code your recieved</p>\r\n                                </label>\r\n                            </React.Fragment>\r\n                        }\r\n                        <button className=\"btn btn__primary btn__primary--green authorization__btn\" onClick={(e) => this.onProceed(e)}>\r\n                            Reset Password\r\n                            <svg className=\"icon ml-5 icon--8\" dangerouslySetInnerHTML={{__html: utils.use('key')}} />\r\n                        </button>\r\n                        {!this.state.showNextStep && \r\n                            <p className=\"authorization__info mt-1\">Do not have an account?&nbsp;<Link to=\"/signup\" className=\"authorization__info--high\">Sign up</Link></p>\r\n                        }\r\n                        {(this.state.attempted && this.state.time > 0) && <p className=\"authorization__label authorization__label--timer mt-1\">You can request another code in {this.state.time}</p>}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPass);","E:\\dec-exp-01-20\\src\\UI\\LoadingScreen.js",[],"E:\\dec-exp-01-20\\src\\store\\actions\\actionTypes.js",[],"E:\\dec-exp-01-20\\src\\hoc\\asyncComponent\\asyncComponent.js",["369"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport LoadingScreen from '../../UI/LoadingScreen';\r\n\r\nconst asyncComponent = importedComponent => {\r\n    class LazyComp extends Component {\r\n        state = {\r\n            component: null,\r\n            loading: false\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.props.onSetLoading(true);\r\n            importedComponent()\r\n                .then(cmp => {\r\n                    this.setState({ component: cmp.default });\r\n                    this.props.onSetLoading(false);\r\n                })\r\n                .catch(er => {\r\n                    this.props.onError(er);\r\n                    this.props.onSetLoading(false);\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const Comp = this.state.component;\r\n            return (\r\n                <React.Fragment>\r\n                    {Comp && <Comp {...this.props} />}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    const mapDispatchToProps = dispatch => {\r\n        return {\r\n            onSetLoading: (val) => dispatch(actions.setLoadingForLazy(val)),\r\n            onError: () => dispatch(actions.handleError())\r\n        }\r\n    };\r\n\r\n    return connect(null, mapDispatchToProps)(LazyComp);\r\n};\r\n\r\n\r\n\r\nexport default asyncComponent;","E:\\dec-exp-01-20\\src\\components\\Profile\\Profile.js",["370"],"import React, { PureComponent } from 'react';\r\nimport { withRouter, Route, Switch, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\n\r\nimport Main from './Main';\r\nimport * as utils from '../../utilities/utilities';\r\nimport { ActiveAds, InactiveAds, PromotedAds } from './Ads/Ads';\r\nimport { FavAds, FavSearches } from './Favourites';\r\nimport Settings from './Settings';\r\nimport Payments from './Payments';\r\nimport Promotions from './Promotions';\r\nimport { Inbox, Sentbox, Spam } from './Messages';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass Profile extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.subAdsList = React.createRef();\r\n        this.subMessagesList = React.createRef();\r\n        this.subFavouritesList = React.createRef();\r\n\r\n        this.slideSubLists = this.slideSubLists.bind(this);\r\n        this.scrollToTop = this.scrollToTop.bind(this);\r\n    }\r\n\r\n    scrollToTop() { document.documentElement.scrollTop = 0; }\r\n\r\n    slideSubLists() {\r\n        if (this.props.match.params.section === 'ads') $(this.subAdsList.current).slideDown({ duration: 300 });\r\n        else $(this.subAdsList.current).slideUp({ duration: 300 });\r\n        if (this.props.match.params.section === 'messages') $(this.subMessagesList.current).slideDown({ duration: 300 });\r\n        else $(this.subMessagesList.current).slideUp({ duration: 300 });\r\n        if (this.props.match.params.section === 'favourites') $(this.subFavouritesList.current).slideDown({ duration: 300 });\r\n        else $(this.subFavouritesList.current).slideUp({ duration: 300 });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.slideSubLists();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        this.slideSubLists();\r\n        if (this.props.match !== prevProps.match) this.scrollToTop();\r\n    }\r\n\r\n    render() {\r\n        const Ads = (\r\n            <React.Fragment>\r\n                <ActiveAds {...this.props} />\r\n                <InactiveAds {...this.props} />\r\n                <PromotedAds {...this.props} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        const Favourites = (\r\n            <React.Fragment>\r\n                <FavAds {...this.props} />\r\n                <FavSearches {...this.props} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        const Messages = (\r\n            <React.Fragment>\r\n                <Inbox {...this.props} />\r\n                <Sentbox {...this.props} />\r\n                <Spam {...this.props} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        const activeAdsCount = this.props.data.length;\r\n        const promotedAdsCount = this.props.data.filter(el => el.premium === true).length;\r\n        const inactiveAdsCount = this.props.data.length;\r\n\r\n        const favAdsCount = this.props.data.filter(el => el.favorite === true).length;\r\n        const favSearchesCount = 0;\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"container\">\r\n                    <div className=\"profile__wrapper\">\r\n                        <div className=\"profile__head\">\r\n                            <h2 className=\"heading heading__2\">Profile</h2>\r\n                            <div className=\"profile__nav\">\r\n                                Profile nav\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile__main\">\r\n                            <div className=\"profile__group profile__panel\">\r\n                                <h5 className=\"profile__link profile__link--heading\">{this.props.match.params.section}</h5>\r\n                                <ul className=\"profile__list\">\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/profile\" className=\"profile__link\" activeClassName=\"profile__link--active\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('user')}} />\r\n                                            Profile\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/ads\" activeClassName=\"profile__link--active-cursored\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('layout')}} />\r\n                                            My Ads\r\n                                        </NavLink>\r\n                                        <div className=\"profile__item profile__item--sub\" ref={this.subAdsList}>\r\n                                            <NavLink to=\"/user/ads/active\" activeClassName=\"profile__link--sub-active\" className=\"profile__link message-badge\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('message-square')}} />\r\n                                                Active\r\n                                                {activeAdsCount !== 0 && <span className=\"message-badge__counter profile__mes-badge\">{activeAdsCount}</span>}\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/ads/inactive\" activeClassName=\"profile__link--sub-active\" className=\"profile__link message-badge\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('archive')}} />\r\n                                                Inactive\r\n                                                {inactiveAdsCount !== 0 && <span className=\"message-badge__counter profile__mes-badge\">{inactiveAdsCount}</span>}\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/ads/promoted\" activeClassName=\"profile__link--sub-active\" className=\"profile__link message-badge\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('corner-right-up')}} />\r\n                                                Promoted\r\n                                                {promotedAdsCount !== 0 && <span className=\"message-badge__counter profile__mes-badge\">{promotedAdsCount}</span>}\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/messages\" activeClassName=\"profile__link--active-cursored\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('mail')}} />\r\n                                            Messages\r\n                                        </NavLink>\r\n                                        <div className=\"profile__item profile__item--sub\" ref={this.subMessagesList}>\r\n                                            <NavLink to=\"/user/messages/inbox\" activeClassName=\"profile__link--sub-active\" className=\"profile__link\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('inbox')}} />\r\n                                                Inbox\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/messages/sentbox\" activeClassName=\"profile__link--sub-active\" className=\"profile__link\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('check-circle')}} />\r\n                                                Sentbox\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/messages/spam\" activeClassName=\"profile__link--sub-active\" className=\"profile__link\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('trash')}} />\r\n                                                Spam\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/favourites\" activeClassName=\"profile__link--active-cursored\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('heart')}} />\r\n                                            Favourites\r\n                                        </NavLink>\r\n                                        <div className=\"profile__item profile__item--sub\" ref={this.subFavouritesList}>\r\n                                            <NavLink to=\"/user/favourites/ads\" activeClassName=\"profile__link--sub-active\" className=\"profile__link message-badge\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('layout')}} />\r\n                                                Ads\r\n                                                {favAdsCount !== 0 && <span className=\"message-badge__counter profile__mes-badge\">{favAdsCount}</span>}\r\n                                            </NavLink>\r\n                                            <NavLink to=\"/user/favourites/searches\" activeClassName=\"profile__link--sub-active\" className=\"profile__link message-badge\">\r\n                                                <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('search')}} />\r\n                                                Searches\r\n                                                {favSearchesCount !== 0 && <span className=\"message-badge__counter profile__mes-badge\">{favSearchesCount}</span>}\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/settings\" activeClassName=\"profile__link--active\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('settings')}} />\r\n                                            Settings\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/payments\" activeClassName=\"profile__link--active\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('credit-card')}} />\r\n                                            Payments\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className=\"profile__item\">\r\n                                        <NavLink to=\"/user/promotions\" activeClassName=\"profile__link--active\" className=\"profile__link\">\r\n                                            <svg className=\"profile__icon\" dangerouslySetInnerHTML={{__html: utils.use('trending-up')}} />\r\n                                            Promotions\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"profile__group profile__header\">\r\n                                <Switch>\r\n                                    <Route path=\"/user/profile\" render={() => <Main />}/>\r\n                                    <Route path=\"/user/ads\" exact render={() => Ads} />\r\n                                    <Route path=\"/user/ads/active\" render={() => <ActiveAds {...this.props} />} />\r\n                                    <Route path=\"/user/ads/inactive\" render={() => <InactiveAds {...this.props} />} />\r\n                                    <Route path=\"/user/ads/promoted\" render={() => <PromotedAds {...this.props} />} />\r\n                                    <Route path=\"/user/messages\" exact render={() => Messages}/>\r\n                                    <Route path=\"/user/messages/inbox\" exact render={() => <Inbox {...this.props} />}/>\r\n                                    <Route path=\"/user/messages/sentbox\" render={() => <Sentbox {...this.props} />}/>\r\n                                    <Route path=\"/user/messages/spam\" render={() => <Spam {...this.props} />}/>\r\n                                    <Route path=\"/user/favourites\" exact render={() => Favourites}/>\r\n                                    <Route path=\"/user/favourites/ads\" render={() => <FavAds {...this.props} />}/>\r\n                                    <Route path=\"/user/favourites/searches\" render={() => <FavSearches {...this.props} />}/>\r\n                                    <Route path=\"/user/settings\" render={() => <Settings {...this.props} />}/>\r\n                                    <Route path=\"/user/payments\" render={() => <Payments {...this.props} />}/>\r\n                                    <Route path=\"/user/promotions\" render={() => <Promotions {...this.props} />}/>\r\n                                    <Route path=\"*\" render={() => <h1>404 Not Found</h1>} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.data.data,\r\n        searchLocation: state.localization.searchLocation\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));","E:\\dec-exp-01-20\\src\\store\\Categories\\categories_en.js",[],"E:\\dec-exp-01-20\\src\\store\\Categories\\categories_ru.js",[],"E:\\dec-exp-01-20\\src\\store\\Categories\\categories_uz.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\business_and_services.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\electronics.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\fashion_and_style.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\for_kids.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\home_and_garden.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\jobs.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\real_estate.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\pets.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\sports_hobby_and_comfort.js",[],"E:\\dec-exp-01-20\\src\\components\\Searchbar.js",[],"E:\\dec-exp-01-20\\src\\containers\\Navigation.js",["371"],"E:\\dec-exp-01-20\\src\\containers\\Footer.js",["372"],"import React from 'react';\r\n\r\nimport Logo from '../components/Logo';\r\nimport Language from '../components/Language';\r\n\r\nimport * as utils from '../utilities/utilities';\r\n\r\nconst Footer = props => {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    const navs = ['Help', 'Enterprise Adverts', 'Terms of use', 'Privacy Policy', 'SBUY Guide', 'Security measures', 'Site map', 'Map of regions', 'Career', 'Feedback'];\r\n\r\n    const navItems = navs.map((el, i) => {\r\n        return (\r\n            <li className=\"footer__item\" key={i}>\r\n                <a href=\"#\" className=\"footer__link\">{el}</a>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__head\">\r\n                <div className=\"container\">\r\n                    <div className=\"footer__headwrap\">\r\n                        <div className=\"navigation__item\">\r\n                            <svg className=\"footer__icon\" dangerouslySetInnerHTML={{__html: utils.use('home')}} />\r\n                            <h5 className=\"footer__heading\">Home</h5>\r\n                        </div>\r\n                        <Language class=\"navigation__item navigation__item--drop\" dropClass=\"dropdown--right-fix\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"footer__wrapper\">\r\n                    <div className=\"footer__body\">\r\n                        <div div className=\"footer__group\">\r\n                            <Logo class=\"footer__logo\" />\r\n                            <ul className=\"footer__list\">\r\n                                {navItems}\r\n                            </ul>\r\n                            <p className=\"footer__info\">\r\n                                For all questions, you can contact us<br/> at any convenient time by phone or email<br/>\r\n                                +998 (71) 240-60-50 <br/>\r\n                                sbuy@retail.uz\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"footer__info\">{year} SBUY&copy;</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default React.memo(Footer);","E:\\dec-exp-01-20\\src\\components\\Card.js",["373","374"],"import React, { useState } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport * as utils from '../utilities/utilities';\r\n\r\nconst Card = (props) => {\r\n    const savedFavorites = JSON.parse(localStorage.getItem('favouritesSBUY'));\r\n\r\n    const [fovorites, setFavorites] = useState(savedFavorites);\r\n\r\n    const onLikeAd = (id) => {\r\n\r\n    };\r\n    // const isFavorite = props.data.find(el => el.favorite)\r\n    const pathname = props.match.url === '/' ? '/' : `${props.match.url}/`;\r\n\r\n    return (\r\n        <div className=\"card\" tabIndex={0}>\r\n            <Link to={`${pathname}${props.data.id}`} className=\"card__wrapper\">\r\n                <figure className=\"card__figure\">\r\n                    <LazyLoadImage \r\n                        src={props.data.img[0]} \r\n                        effect=\"opacity\" \r\n                        alt={props.data.title} \r\n                        className=\"card__img\" \r\n                        height=\"100%\"\r\n                        width=\"100%\" />\r\n                    <span className=\"card__heading card__heading--hidden\">{props.data.title}</span>\r\n                </figure>\r\n                <div className=\"card__list\">\r\n                    <div className=\"card__item card__item--group\" data-premium={props.data.premium}>\r\n                        <span className=\"card__heading\">\r\n                            {utils.limitStrAny(props.data.title, 15)}\r\n                        </span>\r\n                        <span className=\"badge\">TOP</span>\r\n                    </div>\r\n                    <span className=\"card__item\">{props.data.date}</span>\r\n                    <p className=\"card__item card__item--location\">{props.data.location}</p>\r\n                    <div className=\"card__item card__item--space\">\r\n                        <span className=\"price-tag\">{props.data.price}</span>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <button className=\"card__btn\" data-favorite={props.data.favorite} onClick={() => onLikeAd(props.data.id)}>\r\n                <svg className=\"card__icon icon\" dangerouslySetInnerHTML={{__html: utils.use('heart')}} />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(withRouter(Card));","E:\\dec-exp-01-20\\src\\components\\Filter.js",["375","376","377","378","379","380","381","382"],"E:\\dec-exp-01-20\\src\\components\\Categories.js",[],"E:\\dec-exp-01-20\\src\\components\\Adview.js",["383"],"import React, { Component, PureComponent } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\nimport SwiperCore, { Scrollbar, Mousewheel, Pagination, Navigation } from 'swiper';\r\nimport Rating from 'react-rating';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport * as utils from '../utilities/utilities';\r\n\r\nimport avatar from '../assets/images/32.jpg';\r\nimport Backdrop from '../UI/Backdrop';\r\nimport Tooltip from '../UI/Tooltip';\r\n\r\nSwiperCore.use([Scrollbar, Mousewheel, Pagination, Navigation]);\r\n\r\nclass adview extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            index: null,\r\n            rating: 4.5,\r\n            showNum: false,\r\n            showMessageBar: false,\r\n            rotate: null,\r\n            message: '',\r\n            fullScreen: false,\r\n            swiperBegin: true,\r\n            swiperEnd: false,\r\n            activeSwiperImage: 0\r\n        }\r\n        this.categoryPath = `${this.props.match.params.category}/${this.props.match.params.subcategory}`;\r\n        this.id = this.props.match.params.id;\r\n\r\n        this.copyNumRef = React.createRef();\r\n        this.mesTitleRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Initial id: ' + this.id);\r\n        const index = this.props.data.findIndex(el => el.id === this.id);\r\n        if (index === -1) {\r\n            console.log('No such ad exists');\r\n        } else this.setState({ index }, () => console.log('Find index by id: ' + this.state.index));\r\n\r\n        const root = document.documentElement;\r\n        root.style.setProperty('--cat-item-transition', 'none');\r\n        root.style.setProperty('--cat-item-transition-real', 'none');\r\n        \r\n        document.body.style.overflow = 'hidden';\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        this.swiper.update();\r\n        \r\n        if (prevProps !== this.props) {\r\n            const index = this.props.data.findIndex(el => el.id === this.props.match.params.id);\r\n            this.setState({ index });\r\n        }\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.swiper.destroy();\r\n        \r\n        const root = document.documentElement;\r\n        root.style.setProperty('--cat-item-transition', 'all .3s ease');\r\n        root.style.setProperty('--cat-item-transition-real', 'all .1s ease');\r\n\r\n        document.body.style.overflow = 'initial';\r\n    }\r\n\r\n    onNextImage = (img) => {\r\n        if (this.state.activeSwiperImage < img.length - 1) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage + 1 }\r\n            })\r\n        } else this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    onPrevImage = () => {\r\n        if (this.state.activeSwiperImage > 0) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage - 1 }\r\n            })\r\n        }\r\n    }\r\n\r\n    onGoFullScreen = () => this.setState({ fullScreen: true });\r\n    onCloseFullScreen = () => this.setState({ fullScreen: false });\r\n\r\n    onReachBeginSwiper = () => this.setState({ swiperBegin: true, swiperEnd: false }, () => console.log(this.state.swiperBegin, this.state.swiperEnd));\r\n    onReachEndSwiper = () => this.setState({ swiperBegin: false, swiperEnd: true }, () => console.log(this.state.swiperBegin, this.state.swiperEnd));\r\n\r\n    onRotate = () => {\r\n        let i = 0;\r\n        const degrees = [90, 180, 270, 360];\r\n        if (this.state.rotate) {\r\n            i = degrees.findIndex(el => el === this.state.rotate) + 1;\r\n        }\r\n        if (i > degrees.length - 1) i = 0;\r\n        this.setState({ rotate: degrees[i] }, () => console.log(this.state.rotate));\r\n    }\r\n\r\n    onEnterMessage = (e) => {\r\n        this.setState({ message: e.target.value });\r\n    }\r\n\r\n    onSendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.message) {\r\n            this.mesTitleRef.current.textContent = 'Your message is sent!';\r\n            setTimeout(() => {\r\n                this.mesTitleRef.current.textContent = 'Write your message...';\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onShowNumber = () => {\r\n        this.setState({ showNum: true });\r\n    }\r\n\r\n    closePopup = () => {\r\n        this.props.history.replace('/' + this.categoryPath);\r\n    }\r\n\r\n    onShowMessageBar = () => this.setState({ showMessageBar: true });\r\n    onHideMessageBar = () => this.setState({ showMessageBar: false });\r\n\r\n    onCopyNum = (val) => {\r\n        const el = document.createElement('textarea');\r\n        el.value = val;\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        el.setSelectionRange(0, 99999);\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    onHideNum = () => this.setState({ showNum: false });\r\n    \r\n    onClickNext = () => {\r\n        if (this.state.index < this.props.data.length - 1) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index + 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.categoryPath}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n    \r\n    onClickPrev = () => {\r\n        if (this.state.index > 0) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index - 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.props.match.params.category}/${this.props.match.params.subcategory}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    render() {\r\n        const category = `/${this.props.match.params.category}`;\r\n        const subcategory = this.props.match.params.subcategory;\r\n        console.log(subcategory, category);\r\n\r\n        let rotateDegClass = '';\r\n        if (this.state.rotate) rotateDegClass = `adview__rotate--${this.state.rotate}`;\r\n\r\n        const topGradientClass = ['adview__gradient adview__gradient--top'];\r\n        const bottomGradientClass = ['adview__gradient'];\r\n        if (this.state.swiperEnd) topGradientClass.push('adview__gradient--show');\r\n        if (this.state.swiperBegin) bottomGradientClass.push('adview__gradient--show');\r\n        \r\n        const ad = this.props.data[this.state.index];\r\n        if (!ad) return null;\r\n\r\n        const images = ad.img.map((el, i) => (\r\n            <SwiperSlide className={`adview__figmain ${rotateDegClass}`} key={i}>\r\n                <LazyLoadImage \r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className=\"adview__img\"\r\n                    src={el}\r\n                    alt={i}\r\n                    />\r\n            </SwiperSlide>\r\n        ));\r\n\r\n        const adsFrom = this.props.data.map((el, i) => {\r\n            return (\r\n                <Link to={`${category}/${subcategory}/${el.id}`} className=\"adview__card adview__box adview__box--card\" key={i}>\r\n                    <figure className=\"adview__figure adview__figure--card mr-2\">\r\n                        <LazyLoadImage \r\n                            className=\"adview__img adview__img--card\"\r\n                            src={el.img[0]}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            />\r\n                    </figure>\r\n                    <div className=\"adview__group adview__group--col w-max afs\">\r\n                        <span className=\"adview__subheading adview__subheading--card mb-1\">{el.title}</span>\r\n                        <span className=\"adview__title mb-5\">{el.date}</span>\r\n                        <span className=\"adview__title mb-5\">{el.location}</span>\r\n                        <span className=\"price-tag\">{el.price}</span>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        });\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <header className=\"adview\">\r\n                    {/* <Backdrop click={this.closePopup} z={14}/> */}\r\n                        {this.state.fullScreen && \r\n                            <div className=\"adview__fullscreen\">\r\n                                <div className=\"container\">\r\n                                    <Backdrop z={1} click={this.onCloseFullScreen} />\r\n                                    <div className=\"adview__fullscreenwrap\">\r\n                                        <figure className=\"adview__figure adview__figure--full\">\r\n                                            <img src={ad.img[this.state.activeSwiperImage]} alt={ad.title} className=\"adview__img adview__img--full\" />\r\n                                        </figure>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"adview__btn adview__btn--abs adview__btn--grey adview__btn--left\" onClick={() => this.onPrevImage()}>\r\n                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                </button>\r\n                                <button className=\"adview__btn adview__btn--abs adview__btn--grey adview__btn--right\" onClick={() => this.onNextImage(ad.img)}>\r\n                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                        <Swiper \r\n                            className=\"adview__wrapper\"\r\n                            direction=\"vertical\"\r\n                            slidesPerView=\"auto\"\r\n                            freeMode\r\n                            scrollbar={{ el: '#scrollbar', draggable: true, snapOnRelease: false }}\r\n                            mousewheel\r\n                            simulateTouch={false}\r\n                            keyboard={{ enabled: true, onlyInViewport: true }}>\r\n                            <SwiperSlide className=\"adview__content\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"adview__head\">\r\n                                        <div className=\"adview__group\">\r\n                                            <Link to=\"/\" className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">Home</Link>\r\n                                            <Link to={category} className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{utils.capitalize(utils.parseUrl(utils.formatRouteString(category)))}</Link>\r\n                                            <Link to={`${category}/${subcategory}`} className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{utils.capitalize(utils.parseUrl(utils.formatRouteString(subcategory)))}</Link>\r\n                                            <span className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{ad.title}</span>\r\n                                        </div>\r\n                                        <div className=\"adview__group\">\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto afs\" onClick={() => this.onClickPrev()}>\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                                Previous Ad\r\n                                            </button>\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto afs\" onClick={() => this.onClickNext()}>\r\n                                                Next Ad\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                            </button>\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey DTool pos-rel DTool DTool--bottom no-transition\" onClick={() => this.closePopup()}>\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                                <Tooltip>Close</Tooltip>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"adview__main\">\r\n                                        <div className=\"adview__left\">\r\n                                            <div className=\"adview__box adview__box--main\">\r\n                                                <Swiper \r\n                                                    className=\"adview__swiper\"\r\n                                                    slidesPerView={1}\r\n                                                    navigation={{nextEl: '#right', prevEl: '#left', disabledClass: 'adview__btn--disabled'}}\r\n                                                    pagination={{ el: '.swiper-pagination' }}\r\n                                                    onSwiper={(sw) => this.swiper = sw}\r\n                                                    simulateTouch={false}\r\n                                                    preloadImages\r\n                                                    updateOnImagesReady\r\n                                                    onImagesReady={() => this.swiper.update()}\r\n                                                    onSlideChange={(sw) => this.setState({ activeSwiperImage: sw.activeIndex })}\r\n                                                    preventInteractionOnTransition={true}>\r\n                                                    {images}\r\n                                                    <button className=\"adview__btn adview__btn--abs adview__btn--left\" id=\"left\">\r\n                                                        <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                                    </button>\r\n                                                    <button className=\"adview__btn adview__btn--abs adview__btn--right\" id=\"right\">\r\n                                                        <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                                    </button>\r\n                                                    <div className=\"adview__group adview__group--abs\">\r\n                                                        <button className=\"adview__btn DTool adview__btn--rel adview__btn--abs adview__btn--corner mr-2 pos-rel no-transition\" onClick={() => this.onRotate()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('rotate-cw')}} />\r\n                                                            <Tooltip>Rotate the photo</Tooltip>\r\n                                                        </button>\r\n                                                        <button className=\"adview__btn DTool adview__btn--rel adview__btn--abs adview__btn--corner pos-rel no-transition\" onClick={() => this.onGoFullScreen()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('maximize')}} />\r\n                                                            <Tooltip>Full Screen</Tooltip>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div className=\"swiper-pagination\"></div>\r\n                                                </Swiper>\r\n                                                <div className=\"adview__details mb-2\">\r\n                                                    <div className=\"adview__group sb\">\r\n                                                        <div className=\"adview__headingwrap\">\r\n                                                            <h1 className=\"heading heading__1\" data-premium={ad.premium}>\r\n                                                                {ad.title}\r\n                                                                <span className=\"badge ml-1\">\r\n                                                                    Promoted\r\n                                                                </span>\r\n                                                            </h1>\r\n                                                            <div className=\"adview__subheading mb-1\">\r\n                                                                <p className=\"adview__item adview__item--location\">{ad.date}, {ad.location}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"adview__group sb afe\">\r\n                                                        <div>\r\n                                                            <p className=\"price-tag adview__item adview__item--price\">{ad.price}</p>\r\n                                                        </div>\r\n                                                        <div className=\"adview__group\">\r\n                                                            <button className=\"adview__btn adview__btn--rel DTool pos-rel no-transition\">\r\n                                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('share')}} />\r\n                                                                <Tooltip>Share</Tooltip>\r\n                                                            </button>\r\n                                                            <button className=\"adview__btn adview__btn--rel DTool pos-rel no-transition\" data-favorite={ad.favorite}>\r\n                                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('heart')}} />\r\n                                                                <Tooltip>{!ad.favorite ? 'Add to favourites' : 'Remove from favorites'}</Tooltip>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"adview__box adview__box--description\">\r\n                                                <div className=\"adview__subhead sb mb-2\">\r\n                                                    <h2 className=\"heading heading__2 adview__subheading\">Description</h2>\r\n                                                    <p className=\"adview__title\">Number of views: 153&nbsp;&nbsp;|&nbsp;&nbsp;Edited at 13:16</p>\r\n                                                </div>\r\n                                                <div className=\"adview__group adview__group--col afs mb-1\">\r\n                                                    <p className=\"adview__title adview__title--mid mb-1\">Secifications:</p>\r\n                                                    <ul className=\"adview__group adview__group--wrap\">\r\n                                                        <li className=\"tag tag__types mb-1\">Camera: 100MP</li>\r\n                                                        <li className=\"tag tag__types mb-1\">CPU: Snapdragon 865</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Battery: 5000mAh</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Condition: New</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Color: Grey</li>\r\n                                                        <li className=\"tag tag__types mb-1\">ROM: 128GB</li>\r\n                                                        <li className=\"tag tag__types mb-1\">RAM: 8GB</li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div className=\"adview__group adview__group--col afs\">\r\n                                                    <p className=\"adview__title adview__title--mid mb-1\">Personalized description:</p>\r\n                                                    <p className=\"adview__text\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras viverra odio vel risus consequat feugiat. Vivamus nec lorem auctor felis suscipit ullamcorper sit amet non orci. Sed ornare justo eu arcu convallis venenatis. Sed luctus maximus viverra. Nullam sit amet urna fermentum, dignissim urna semper, auctor mi. Mauris pulvinar porta augue, sodales ultricies urna placerat vitae. \r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"adview__right\">\r\n                                            <div className=\"adview__box adview__box--user\">\r\n                                                <figure className=\"adview__figure adview__item\">\r\n                                                    <img className=\"adview__img\" src={avatar} alt={ad.id} />\r\n                                                </figure>\r\n                                                <Link to=\"/user/john_doe\" className=\"adview__item adview__item--name anim-link pos-rel no-transition\">John Doe</Link>\r\n                                                <span className=\"adview__item adview__item--titled\">\r\n                                                    <span className=\"adview__title mb-5\">Enterprise</span>\r\n                                                    <Link to=\"/company\" className=\"adview__item adview__item--lined\">Intech Ltd.</Link>\r\n                                                </span>\r\n                                                <span className=\"adview__item adview__item--titled\">\r\n                                                    <span className=\"adview__title mb-5\">Reviews:</span> \r\n                                                    <span className=\"adview__item\">\r\n                                                        <Rating \r\n                                                            className=\"adview__item--ratingbar\"\r\n                                                            initialRating={this.state.rating} \r\n                                                            fractions={2} \r\n                                                            emptySymbol={ <svg className=\"rating\" dangerouslySetInnerHTML={{__html: utils.useStars('star-empty')}} /> }\r\n                                                            fullSymbol={ <svg className=\"rating rating--fill\" dangerouslySetInnerHTML={{__html: utils.useStars('star-full')}} /> }\r\n                                                            onChange={(r) => this.setState({ rating: r })}\r\n                                                            />\r\n                                                        <span>{(Math.round(this.state.rating * 100) / 100).toFixed(1)}</span>\r\n                                                    </span>\r\n                                                </span>\r\n                                                <div className=\"adview__item pos-rel no-transition\">\r\n                                                    <button className=\"adview__btn--main btn btn__primary\" onClick={() => this.onShowNumber()}>\r\n                                                        Phone number\r\n                                                        <svg className=\"adview__icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('phone-outgoing')}} />\r\n                                                    </button>\r\n                                                    {this.state.showNum && \r\n                                                        <React.Fragment>\r\n                                                            <Backdrop z={98} click={this.onHideNum} />\r\n                                                            <Tooltip class=\"adview__numbox\" click={this.onHideNum}>\r\n                                                                <span className=\"adview__number\">+684 655985 2656</span>\r\n                                                                <button className=\"adview__btn adview__btn--clip ml-1\" onClick={() => this.onCopyNum('+684 655985 2656')} title=\"Copy number\">\r\n                                                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('clipboard')}} />\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                </div>\r\n                                                <button className=\"adview__btn--main adview__item btn btn__secondary\" onClick={() => this.onShowMessageBar()}>\r\n                                                    Write a message\r\n                                                    <svg className=\"adview__icon icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('edit-2')}} />\r\n                                                </button>\r\n                                            </div>\r\n                                            {this.state.showMessageBar && \r\n                                                <div className=\"adview__box adview__box--message\">\r\n                                                    <div className=\"adview__group adview__group--sb mb-1\">\r\n                                                        <p className=\"adview__title adview__title--big\" ref={this.mesTitleRef}>Write your message:</p>\r\n                                                        <button className=\"adview__btn adview__btn--sm adview__btn--rel pos-rel\" onClick={() => this.onHideMessageBar()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <form className=\"adview__form\" onSubmit={(e) => this.onSendMessage(e)}>\r\n                                                        <textarea autoFocus required className=\"adview__input mr-5\" placeholder=\"Message...\" type=\"text\" onChange={(e) => this.onEnterMessage(e)} value={this.state.message} />\r\n                                                        <button className=\"wh-auto btn btn__primary btn__primary--outline\">\r\n                                                            Send\r\n                                                            <svg className=\"adview__icon icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('send')}} />\r\n                                                        </button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            }\r\n                                            <Swiper\r\n                                                className=\"adview__cardscontainer\"\r\n                                                direction=\"vertical\"\r\n                                                slidesPerView=\"auto\"\r\n                                                freeMode\r\n                                                mousewheel\r\n                                                nested\r\n                                                simulateTouch={false}\r\n                                                keyboard={{ enabled: true, onlyInViewport: true }}\r\n                                                onReachBeginning={() => this.onReachBeginSwiper()}\r\n                                                onReachEnd={() => this.onReachEndSwiper()}\r\n                                                scrollbar={{ el: '#scrollbar-2', draggable: true, snapOnRelease: false }}\r\n                                                >\r\n                                                <span className={topGradientClass.join(' ')}></span>\r\n                                                <span className={bottomGradientClass.join(' ')}></span>\r\n                                                <SwiperSlide className=\"adview__cards\">\r\n                                                    {adsFrom}\r\n                                                    <button className=\"adview__card adview__card--btn\">See all</button>\r\n                                                </SwiperSlide>\r\n                                                <div className=\"swiper-scrollbar\" id=\"scrollbar-2\"></div>\r\n                                            </Swiper>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        <div className=\"swiper-scrollbar\" id=\"scrollbar\"></div>\r\n                    </Swiper>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(adview);\r\n\r\n\r\n// var rgb = getAverageRGB(document.getElementById('i'));\r\n// document.body.style.backgroundColor = 'rgb('+rgb.r+','+rgb.g+','+rgb.b+')';\r\n\r\n// function getAverageRGB(imgEl) {\r\n\r\n// var blockSize = 5, // only visit every 5 pixels\r\n//     defaultRGB = {r:0,g:0,b:0}, // for non-supporting envs\r\n//     canvas = document.createElement('canvas'),\r\n//     context = canvas.getContext && canvas.getContext('2d'),\r\n//     data, width, height,\r\n//     i = -4,\r\n//     length,\r\n//     rgb = {r:0,g:0,b:0},\r\n//     count = 0;\r\n    \r\n// if (!context) {\r\n//     return defaultRGB;\r\n// }\r\n\r\n// height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\r\n// width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\r\n\r\n// context.drawImage(imgEl, 0, 0);\r\n\r\n// try {\r\n//     data = context.getImageData(0, 0, width, height);\r\n// } catch(e) {\r\n//     /* security error, img on diff domain */alert('x');\r\n//     return defaultRGB;\r\n// }\r\n\r\n// length = data.data.length;\r\n\r\n// while ( (i += blockSize * 4) < length ) {\r\n//     ++count;\r\n//     rgb.r += data.data[i];\r\n//     rgb.g += data.data[i+1];\r\n//     rgb.b += data.data[i+2];\r\n// }\r\n\r\n// // ~~ used to floor values\r\n// rgb.r = ~~(rgb.r/count);\r\n// rgb.g = ~~(rgb.g/count);\r\n// rgb.b = ~~(rgb.b/count);\r\n\r\n// return rgb;\r\n\r\n// }","E:\\dec-exp-01-20\\src\\UI\\Backdrop.js",[],"E:\\dec-exp-01-20\\src\\components\\Dropdown.js",[],"E:\\dec-exp-01-20\\src\\store\\PostFilters\\en\\transport_auto.js",[],"E:\\dec-exp-01-20\\src\\components\\Language.js",[],"E:\\dec-exp-01-20\\src\\components\\Logo.js",[],"E:\\dec-exp-01-20\\src\\utilities\\utilities.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Settings.js",["384"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport * as utils from '../../utilities/utilities';\r\nimport LoadingSub from '../../UI/LoadingSub';\r\nimport RegionsDropdown from '../RegionsDropdown';\r\n\r\nconst Settings = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    const [passTime, setPassTime] = useState('05.07.2021 16:43');\r\n    const [region, setRegion] = useState('Tashkent');\r\n\r\n    const passwordOldInputRef = useRef();\r\n    const passwordInputRef = useRef();\r\n    const passwordConfirmInputRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n    const prevRegionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        prevRegionRef.current = region;\r\n    });\r\n\r\n    const prevRegion = prevRegionRef.current;\r\n\r\n    const onTogglePass = (e) => {\r\n        if (passwordInputRef.current.value !== '') {\r\n            if (passwordInputRef.current.type === 'password') passwordInputRef.current.type = 'text';\r\n            else passwordInputRef.current.type = 'password';\r\n        }\r\n    };\r\n\r\n    const onDiscardChanges = () => {\r\n        setRegion(prevRegion);\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onSaveChanges = () => {\r\n        const old = passwordOldInputRef.current;\r\n        const newP = passwordInputRef.current;\r\n        const conf = passwordConfirmInputRef.current;\r\n\r\n        if (old.value !== '') {\r\n            if ((newP.value && conf.value) !== '') {\r\n                if (newP.value.length >= 6) {\r\n                    if (newP.value === conf.value) {\r\n                        clearErrorHighlight();\r\n\r\n                        // ------------------------\r\n\r\n\r\n                        // ........\r\n                        const d = new Date();\r\n\r\n                        let month = d.getMonth()+1;\r\n                        if (month < 10) month = `0${month}`;\r\n                        \r\n                        setPassTime(`${d.getDate()}.${month}.${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`);\r\n                        setEditMode(false);\r\n                        \r\n                    } else {\r\n                        newP.setCustomValidity('Passwords do not match');\r\n                        conf.setCustomValidity('Passwords do not match');\r\n                        setError('Passwords do not match');\r\n                        newP.focus();\r\n                    }\r\n                } else {\r\n                    newP.focus();\r\n                    setError('Password length should not be less than 6');\r\n                }\r\n\r\n            } else {\r\n                newP.setCustomValidity('Type in a new password');\r\n                conf.setCustomValidity('Type in a new password');\r\n                setError('Type in a new password');\r\n                newP.focus();\r\n            }\r\n        } else setEditMode(false);\r\n    };\r\n\r\n    function clearErrorHighlight() {\r\n        passwordInputRef.current.setCustomValidity('');\r\n        passwordOldInputRef.current.setCustomValidity('');\r\n        passwordConfirmInputRef.current.setCustomValidity('');\r\n        setError(null);\r\n    };\r\n\r\n    let regionView = <span className=\"heading heading__5 profile__main-text\">Region, {region}</span>;\r\n    if (editMode) {\r\n        regionView = (\r\n            <React.Fragment>\r\n                <span className=\"profile__title\">Region</span>\r\n                <div className=\"pos-rel\">\r\n                    <div className=\"profile__input profile__input--reg input\" tabIndex=\"0\">{region}</div>\r\n                    <RegionsDropdown click={(reg) => setRegion(reg)} class={['dropdown--full dropdown--left-fix profile__reg-dropdown dropdown--close']}/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    let passView = <span className=\"heading heading__5 profile__main-text\">Password was last changed on {passTime}</span>;\r\n    if (editMode) {\r\n        passView = (\r\n            <React.Fragment>\r\n                {error && \r\n                    <div className=\"profile__text profile__text--error fdr ac\">\r\n                        <svg className=\"profile__icon icon--red mr-5\" dangerouslySetInnerHTML={{__html: utils.use('alert-triangle')}} />\r\n                        {error}\r\n                    </div>\r\n                }\r\n                <p className=\"profile__ad-details mb-2\">If you do not want to change the password leave the fields empty.</p>\r\n                <p className=\"profile__text\">\r\n                    <label className=\"profile__title\">Enter your old password</label>\r\n                    <input className=\"profile__input input\" type=\"password\" placeholder=\"Old password\" ref={passwordOldInputRef} />\r\n                </p>\r\n                <div className=\"profile__text\">\r\n                    <label className=\"profile__title\">New password</label>\r\n                    <label className=\"pos-rel\">\r\n                        <input className=\"profile__input input\" type=\"password\" placeholder=\"New password\" ref={passwordInputRef} minLength=\"6\" />\r\n                        <button className=\"profile__btn profile__btn--abs\" onClick={(e) => onTogglePass(e)}>\r\n                            <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('eye-off')}} />\r\n                        </button>\r\n                    </label>\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <label className=\"profile__title\">Confirm password</label>\r\n                    <input className=\"profile__input input\" type=\"password\" placeholder=\"Confirm password\" ref={passwordConfirmInputRef} />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Settings</h2>\r\n                {!editMode && <button className=\"profile__btn profile__btn--rounded\" onClick={() => setEditMode(true)}>\r\n                    <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('edit-2')}} />\r\n                </button>}\r\n                {editMode && <button className=\"profile__btn profile__btn--rounded\" onClick={() => onDiscardChanges()}>\r\n                    <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                </button>}\r\n            </div>\r\n            <div className=\"profile__content fdc\">\r\n                {regionView}\r\n            </div>\r\n            <div className=\"profile__content profile__content--mid fdc\">\r\n                {passView}\r\n            </div>\r\n            {editMode && \r\n                <React.Fragment>\r\n                    <div className=\"profile__content profile__content--mid\">\r\n                        <div className=\"profile__text m-0\">\r\n                            <label className=\"profile__title mb-1\">Change email address</label>\r\n                            <input className=\"profile__input input\" type=\"text\" placeholder=\"Email address\" ref={emailInputRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile__footer mt-15\">\r\n                        {loading && <LoadingSub />}\r\n                        <button className=\"ml-2 btn btn__primary\" onClick={() => onSaveChanges()}>\r\n                            Save\r\n                            <svg className=\"icon icon--8 ml-5\" dangerouslySetInnerHTML={{__html: utils.use('save')}} />\r\n                        </button>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n            {!editMode &&\r\n                <div className=\"profile__content profile__content--mid\">\r\n                    <span className=\"heading heading__5 profile__main-text\">Email, johndoe@mail.eu</span>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Settings;","E:\\dec-exp-01-20\\src\\components\\Profile\\Favourites.js",["385"],"import React, { PureComponent } from \"react\";\r\nimport { AdFull } from \"./Ads/AdCard\";\r\n\r\nexport const FavAds = (props) => {\r\n\r\n    const ads = props.data.filter(el => el.favorite === true).map(el => <AdFull el={el} favs />)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Favourite Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {ads}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport const FavSearches = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Favourite Searches</h2>\r\n            </div>\r\n            <div className=\"profile__content\">\r\n                <ul className=\"profile__fav-list\">\r\n                    <li className=\"profile__fav-item\">\r\n                        \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};","E:\\dec-exp-01-20\\src\\components\\Profile\\Main.js",["386","387","388","389","390","391","392"],"import React, { PureComponent } from 'react';\r\n\r\nimport avatar from '../../assets/images/32.jpg';\r\nimport company from '../../assets/images/intech-2.jpg';\r\nimport LoadingSub from '../../UI/LoadingSub';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nclass Main extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contactEditMode: false,\r\n            companyEditMode: false,\r\n            loading: false,\r\n            loadingCompany: false,\r\n            imageAppended: false\r\n        }\r\n\r\n        this.contactFigRef = React.createRef();\r\n        this.companyFigRef = React.createRef();\r\n\r\n        this.imgRef = React.createRef();\r\n        this.companyRef = React.createRef();\r\n\r\n        this.nameInputRef = React.createRef();\r\n        this.emailInputRef = React.createRef();\r\n        this.numberInputRef = React.createRef();\r\n        this.companyInputRef = React.createRef();\r\n        \r\n        this.emailCompanyInputRef = React.createRef();\r\n        this.numberCompanyInputRef = React.createRef();\r\n        this.nameCompanyInputRef = React.createRef();\r\n    }\r\n\r\n    onToggleContactEditMode = () => this.setState(prevState => {\r\n        return { contactEditMode: !prevState.contactEditMode }\r\n    });\r\n    onToggleCompanyEditMode = () => this.setState(prevState => {\r\n        return { companyEditMode: !prevState.companyEditMode }\r\n    });\r\n\r\n    onSaveContactData = () => {\r\n        const name = this.nameInputRef.current.value;\r\n        const email = this.emailInputRef.current.value;\r\n        const number = this.numberInputRef.current.value;\r\n        const company = this.companyInputRef.current.value;\r\n\r\n        // ---------------\r\n        this.setState({ loading: true });\r\n        setTimeout(() => this.setState({ loading: false }, () => this.setState({ contactEditMode: false })), 2000);\r\n        // ....\r\n    }\r\n    \r\n    onSaveCompanyData = () => {\r\n        const nameCompany = this.nameCompanyInputRef.current.value;\r\n        const emailCompany = this.emailCompanyInputRef.current.value;\r\n        const numberCompany = this.numberCompanyInputRef.current.value;\r\n        \r\n        // ---------------\r\n        this.setState({ loadingCompany: true });\r\n        setTimeout(() => this.setState({ loadingCompany: false }, () => this.setState({ companyEditMode: false })), 2000);\r\n\r\n        // ....\r\n    }\r\n\r\n    appendImage = (el, file) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n            let image = el.querySelector('.profile__img');\r\n            if (!image) {\r\n                image = document.createElement('img');\r\n                image.classList.add('profile__img');\r\n                el.appendChild(image);\r\n            }\r\n            image.src = reader.result;\r\n        };\r\n    };\r\n\r\n    removeContactImage = () => {\r\n        this.contactFigRef.current.querySelector('.profile__img').remove();\r\n\r\n        // -----------------\r\n\r\n        // ....\r\n    }\r\n\r\n    removeComapnyImage = () => {\r\n        this.companyFigRef.current.querySelector('.profile__img').remove();\r\n\r\n        // -----------------\r\n\r\n        // ....\r\n    }\r\n\r\n    appendContactImg = () => {\r\n        if (this.imgRef.current.files.length) {\r\n            this.appendImage(this.contactFigRef.current, this.imgRef.current.files[0]);\r\n            \r\n            const formData = new FormData();\r\n            formData.append('profileImage[]', this.imgRef.current.files[0]);\r\n\r\n            // -------------------\r\n            \r\n            // .....\r\n        }\r\n    }\r\n    \r\n    appendCompanyImg = () => {\r\n        if (this.companyRef.current.files.length) {\r\n            this.appendImage(this.companyFigRef.current, this.companyRef.current.files[0]);\r\n            \r\n            const formData = new FormData();\r\n            formData.append('profileImage[]', this.companyRef.current.files[0]);\r\n            \r\n            // -------------------\r\n            \r\n            // .....\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let contactView = (\r\n            <div className=\"profile__details\">\r\n                <div className=\"profile__text profile__text--name\">\r\n                    <p className=\"profile__title\">Name</p>\r\n                    John Doe\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <p className=\"profile__title\">Email</p>\r\n                    johndoe@mail.eu\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <p className=\"profile__title\">Company</p>\r\n                    Intech Ltd.\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <p className=\"profile__title\">Phone number</p>\r\n                    +651651 65165165 65\r\n                </div>\r\n            </div>\r\n        );\r\n        if (this.state.contactEditMode) {\r\n            contactView = (\r\n                <div className=\"profile__details\">\r\n                    <div className=\"profile__text\">\r\n                        <label className=\"profile__title\">Name</label>\r\n                        <input className=\"profile__input input\" type=\"text\" placeholder=\"Your name\" ref={this.nameInputRef} />\r\n                    </div>\r\n                    <div className=\"profile__text\">\r\n                        <label className=\"profile__title\">Email</label>\r\n                        <input className=\"profile__input input\" type=\"text\" placeholder=\"Your email\" ref={this.emailInputRef} />\r\n                    </div>\r\n                    <div className=\"profile__text\">\r\n                        <label className=\"profile__title\">Company</label>\r\n                        <input className=\"profile__input input\" type=\"text\" placeholder=\"Company name\" ref={this.companyInputRef} />\r\n                    </div>\r\n                    <div className=\"profile__text\">\r\n                        <label className=\"profile__title\">Phone number</label>\r\n                        <input className=\"profile__input input\" type=\"text\" placeholder=\"Your number\" ref={this.numberInputRef} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        let companyView = (\r\n            <div className=\"profile__details\">\r\n                <div className=\"profile__text\">\r\n                    <p className=\"profile__title\">Company Name</p>\r\n                    Intech Ltd.\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <p className=\"profile__title\">Email</p>\r\n                    intech@enterprise.eu\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <p className=\"profile__title\">Phone number</p>\r\n                    +651651 65165165 65\r\n                </div>\r\n            </div>\r\n        );\r\n        if (this.state.companyEditMode) {\r\n            companyView = (\r\n                <div className=\"profile__details\">\r\n                    <div className=\"profile__text\">\r\n                        <label className=\"profile__title\">Company Name</label>\r\n                        <input className=\"profile__input input\" type=\"text\" placeholder=\"Company name\" ref={this.nameCompanyInputRef} />\r\n                    </div>\r\n                    <div className=\"profile__text\">\r\n                        <label className=\"profile__title\">Email</label>\r\n                        <input className=\"profile__input input\" type=\"text\" placeholder=\"Company email\" ref={this.emailCompanyInputRef} />\r\n                    </div>\r\n                    <div className=\"profile__text\">\r\n                        <label className=\"profile__title\">Phone number</label>\r\n                        <input className=\"profile__input input\" type=\"text\" placeholder=\"Company number\" ref={this.numberCompanyInputRef} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"profile__titlebar\">\r\n                    <h2 className=\"heading heading__2 profile__heading\">Contact details</h2>\r\n                    <button className=\"profile__btn profile__btn--rounded\" onClick={() => this.onToggleContactEditMode()}>\r\n                        <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use(this.state.contactEditMode ? 'x' : 'edit-2')}} />\r\n                    </button>\r\n                </div>\r\n                <div className=\"profile__content\">\r\n                    {contactView}\r\n                    <div>\r\n                        <div className=\"pos-rel d-inline mb-1\">\r\n                            <figure className=\"profile__figure\" ref={this.contactFigRef}>\r\n                                <img className=\"profile__img\" alt=\"user\" src={avatar} />\r\n                                <svg className=\"profile__icon profile__icon--big\" dangerouslySetInnerHTML={{__html: utils.use('user')}} />\r\n                            </figure>\r\n                            <input className=\"d-none\" type=\"file\" ref={this.imgRef} onChange={() => this.appendContactImg()} />\r\n                            <div className=\"profile__btn--img\">\r\n                                {this.state.contactEditMode && <button className=\"mr-5 profile__btn profile__btn--rounded\" onClick={() => this.removeContactImage()}>\r\n                                    <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                </button>}\r\n                                <button className=\"profile__btn profile__btn--rounded\" onClick={() => this.imgRef.current.click()}>\r\n                                    <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('camera')}} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"profile__hint tc\">Image size and resolution<br/>should not exceed<br/>1MB and 500x500px</p>\r\n                    </div>\r\n                </div>\r\n                {this.state.contactEditMode && \r\n                    <div className=\"profile__footer mt-15\">\r\n                        {this.state.loading && <LoadingSub />}\r\n                        <button className=\"ml-2 btn btn__primary\" onClick={() => this.onSaveContactData()}>\r\n                            Save\r\n                            <svg className=\"icon icon--8 ml-5\" dangerouslySetInnerHTML={{__html: utils.use('save')}} />\r\n                        </button>\r\n                    </div>\r\n                }\r\n                <div className=\"profile__titlebar\">\r\n                    <h2 className=\"heading heading__2 profile__heading\">Company details</h2>\r\n                    <button className=\"profile__btn profile__btn--rounded\" onClick={() => this.onToggleCompanyEditMode()}>\r\n                        <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use(this.state.companyEditMode ? 'x' : 'edit-2')}} />\r\n                    </button>\r\n                </div>\r\n                <div className=\"profile__content\">\r\n                    {companyView}\r\n                    <div>\r\n                        <div className=\"pos-rel d-inline mb-1\">\r\n                            <figure className=\"profile__figure\" ref={this.companyFigRef}>\r\n                                <img className=\"profile__img\" alt=\"user\" src={company} />\r\n                                <svg className=\"profile__icon profile__icon--big\" dangerouslySetInnerHTML={{__html: utils.use('image')}} />\r\n                            </figure>\r\n                            <input className=\"d-none\" type=\"file\" ref={this.companyRef} onChange={() => this.appendCompanyImg()} />\r\n                            \r\n                            <div className=\"profile__btn--img\">\r\n                                {this.state.companyEditMode && <button className=\"mr-5 profile__btn profile__btn--rounded\" onClick={() => this.removeComapnyImage()}>\r\n                                    <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                </button>}\r\n                                <button className=\"profile__btn profile__btn--rounded\" onClick={() => this.companyRef.current.click()}>\r\n                                    <svg className=\"profile__icon profile__icon--small\" dangerouslySetInnerHTML={{__html: utils.use('camera')}} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"profile__hint tc\">Image size and resolution<br/>should not exceed<br/>1MB and 500x500px</p>\r\n                    </div>\r\n                </div>\r\n                {this.state.companyEditMode && \r\n                    <div className=\"profile__footer mt-15\">\r\n                        {this.state.loadingCompany && <LoadingSub />}\r\n                        <button className=\"ml-2 btn btn__primary\" onClick={() => this.onSaveCompanyData()}>\r\n                            Save\r\n                            <svg className=\"icon icon--8 ml-5\" dangerouslySetInnerHTML={{__html: utils.use('save')}} />\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","E:\\dec-exp-01-20\\src\\components\\Profile\\Payments.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Promotions.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Messages.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Ads\\Ads.js",["393","394","395","396","397"],"import React from 'react';\r\n\r\nimport { AdsCard } from './AdCard';\r\n\r\nconst ActiveAds = React.memo((props) => {\r\n\r\n    const onDeactivate = (id) => {\r\n\r\n        // ----------------------\r\n\r\n        // .....\r\n    }\r\n\r\n    const ads = props.data.map((el, i) => <AdsCard el={el} view=\"active\" key={el.id} />);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Active Ads</h2>\r\n            </div>\r\n                {/* <div className=\"profile__extra mb-2\">\r\n                    Sort by:\r\n                    <div className=\"profile__sort ml-1\">\r\n                        Date\r\n                        <svg className=\"profile__icon profile__icon--small ml-5\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"profile__ads\">\r\n                    {ads}\r\n                </div>\r\n        </React.Fragment>      \r\n    )\r\n});\r\n\r\nconst InactiveAds = React.memo((props) => {\r\n\r\n    const onActivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const onRemove = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const ads = props.data.map((el, i) => <AdsCard el={el} view=\"inactive\" key={el.id} />);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Inactive Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {ads}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nconst PromotedAds = React.memo((props) => {\r\n\r\n    const onDeactivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const onActivate = (id) => {\r\n\r\n        // ----------------------\r\n        \r\n        // .....\r\n    };\r\n\r\n    const ads = props.data.filter(el => el.premium === true).map(el => <AdsCard el={el} view=\"active\" key={el.id} />);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile__titlebar\">\r\n                <h2 className=\"heading heading__2 profile__heading\">Promoted Ads</h2>\r\n            </div>\r\n            <div className=\"profile__ads\">\r\n                {ads}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nexport { ActiveAds, InactiveAds, PromotedAds };\r\n","E:\\dec-exp-01-20\\src\\store\\Filters\\en\\business_and_services.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\electronics.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\fashion_and_style.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\for_kids.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\home_and_garden.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\jobs.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\pets.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\real_estate.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\sports_hobby_and_comfort.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\en\\transport_auto.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\business_and_services.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\electronics.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\fashion_and_style.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\for_kids.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\home_and_garden.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\jobs.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\pets.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\real_estate.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\sports_hobby_and_comfort.js",[],"E:\\dec-exp-01-20\\src\\store\\actions\\index.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\transport_auto.js",[],"E:\\dec-exp-01-20\\src\\components\\RegionsDropdown.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\sports_hobby_and_comfort.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\real_estate.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\pets.js",[],"E:\\dec-exp-01-20\\src\\UI\\Tooltip.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\jobs.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\home_and_garden.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\for_kids.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\fashion_and_style.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\electronics.js",[],"E:\\dec-exp-01-20\\src\\UI\\LoadingSub.js",[],"E:\\dec-exp-01-20\\src\\components\\Profile\\Ads\\AdCard.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\ru\\transport_auto.js",[],"E:\\dec-exp-01-20\\src\\store\\Filters\\uz\\business_and_services.js",[],"E:\\dec-exp-01-20\\src\\store\\actions\\actions_data.js",[],"E:\\dec-exp-01-20\\src\\store\\actions\\actions_localization.js",[],{"ruleId":"398","severity":1,"message":"399","line":5,"column":25,"nodeType":"400","messageId":"401","endLine":5,"endColumn":35},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","replacedBy":"405"},{"ruleId":"398","severity":1,"message":"406","line":18,"column":10,"nodeType":"400","messageId":"401","endLine":18,"endColumn":17},{"ruleId":"398","severity":1,"message":"407","line":18,"column":19,"nodeType":"400","messageId":"401","endLine":18,"endColumn":29},{"ruleId":"398","severity":1,"message":"408","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":17},{"ruleId":"398","severity":1,"message":"409","line":199,"column":15,"nodeType":"400","messageId":"401","endLine":199,"endColumn":20},{"ruleId":"398","severity":1,"message":"410","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":22},{"ruleId":"398","severity":1,"message":"410","line":3,"column":13,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"398","severity":1,"message":"411","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":13},{"ruleId":"398","severity":1,"message":"412","line":75,"column":27,"nodeType":"400","messageId":"401","endLine":75,"endColumn":32},{"ruleId":"398","severity":1,"message":"413","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":21},{"ruleId":"398","severity":1,"message":"414","line":14,"column":13,"nodeType":"400","messageId":"401","endLine":14,"endColumn":20},{"ruleId":"398","severity":1,"message":"408","line":10,"column":8,"nodeType":"400","messageId":"401","endLine":10,"endColumn":17},{"ruleId":"415","severity":1,"message":"416","line":17,"column":17,"nodeType":"417","endLine":17,"endColumn":54},{"ruleId":"398","severity":1,"message":"418","line":10,"column":12,"nodeType":"400","messageId":"401","endLine":10,"endColumn":21},{"ruleId":"398","severity":1,"message":"419","line":10,"column":23,"nodeType":"400","messageId":"401","endLine":10,"endColumn":35},{"ruleId":"398","severity":1,"message":"420","line":1,"column":32,"nodeType":"400","messageId":"401","endLine":1,"endColumn":41},{"ruleId":"398","severity":1,"message":"411","line":9,"column":8,"nodeType":"400","messageId":"401","endLine":9,"endColumn":13},{"ruleId":"398","severity":1,"message":"408","line":10,"column":8,"nodeType":"400","messageId":"401","endLine":10,"endColumn":17},{"ruleId":"415","severity":1,"message":"416","line":189,"column":37,"nodeType":"417","endLine":189,"endColumn":93},{"ruleId":"415","severity":1,"message":"416","line":192,"column":37,"nodeType":"417","endLine":192,"endColumn":93},{"ruleId":"415","severity":1,"message":"416","line":195,"column":37,"nodeType":"417","endLine":195,"endColumn":93},{"ruleId":"415","severity":1,"message":"416","line":198,"column":37,"nodeType":"417","endLine":198,"endColumn":93},{"ruleId":"415","severity":1,"message":"416","line":201,"column":37,"nodeType":"417","endLine":201,"endColumn":93},{"ruleId":"398","severity":1,"message":"420","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"407","line":10,"column":21,"nodeType":"400","messageId":"401","endLine":10,"endColumn":31},{"ruleId":"398","severity":1,"message":"421","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":30},{"ruleId":"398","severity":1,"message":"422","line":43,"column":15,"nodeType":"400","messageId":"401","endLine":43,"endColumn":19},{"ruleId":"398","severity":1,"message":"423","line":44,"column":15,"nodeType":"400","messageId":"401","endLine":44,"endColumn":20},{"ruleId":"398","severity":1,"message":"424","line":45,"column":15,"nodeType":"400","messageId":"401","endLine":45,"endColumn":21},{"ruleId":"398","severity":1,"message":"425","line":46,"column":15,"nodeType":"400","messageId":"401","endLine":46,"endColumn":22},{"ruleId":"398","severity":1,"message":"426","line":55,"column":15,"nodeType":"400","messageId":"401","endLine":55,"endColumn":26},{"ruleId":"398","severity":1,"message":"427","line":56,"column":15,"nodeType":"400","messageId":"401","endLine":56,"endColumn":27},{"ruleId":"398","severity":1,"message":"428","line":57,"column":15,"nodeType":"400","messageId":"401","endLine":57,"endColumn":28},{"ruleId":"398","severity":1,"message":"429","line":7,"column":11,"nodeType":"400","messageId":"401","endLine":7,"endColumn":23},{"ruleId":"398","severity":1,"message":"430","line":37,"column":11,"nodeType":"400","messageId":"401","endLine":37,"endColumn":21},{"ruleId":"398","severity":1,"message":"431","line":44,"column":11,"nodeType":"400","messageId":"401","endLine":44,"endColumn":19},{"ruleId":"398","severity":1,"message":"429","line":67,"column":11,"nodeType":"400","messageId":"401","endLine":67,"endColumn":23},{"ruleId":"398","severity":1,"message":"430","line":74,"column":11,"nodeType":"400","messageId":"401","endLine":74,"endColumn":21},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["432"],"no-negated-in-lhs",["433"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Searchbar' is defined but never used.","'price' is assigned a value but never used.","'emailValidator' is defined but never used.","'axios' is defined but never used.","'timer' is assigned a value but never used.","'LoadingScreen' is defined but never used.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'fovorites' is assigned a value but never used.","'setFavorites' is assigned a value but never used.","'Component' is defined but never used.","'PureComponent' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'number' is assigned a value but never used.","'company' is assigned a value but never used.","'nameCompany' is assigned a value but never used.","'emailCompany' is assigned a value but never used.","'numberCompany' is assigned a value but never used.","'onDeactivate' is assigned a value but never used.","'onActivate' is assigned a value but never used.","'onRemove' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]